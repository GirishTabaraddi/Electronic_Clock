ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"swc_clock.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CLOCK_input_run,"ax",%progbits
  20              		.align	2
  21              		.global	CLOCK_input_run
  22              		.thumb
  23              		.thumb_func
  24              		.type	CLOCK_input_run, %function
  25              	CLOCK_input_run:
  26              	.LFB144:
  27              		.file 1 "source\\asw\\swc_clock.c"
   1:source\asw/swc_clock.c **** /*
   2:source\asw/swc_clock.c ****  * Filename: swc_clock.c
   3:source\asw/swc_clock.c ****  *
   4:source\asw/swc_clock.c ****  * Author: Autogenerated by H-DA RTE Generator, (c) Prof. Fromm
   5:source\asw/swc_clock.c ****  *
   6:source\asw/swc_clock.c ****  * description: Software component Clock that displays time as hour and minute 
   7:source\asw/swc_clock.c ****  * name: swc_Clock
   8:source\asw/swc_clock.c ****  * shortname: Clock
   9:source\asw/swc_clock.c ****  *
  10:source\asw/swc_clock.c ****  */
  11:source\asw/swc_clock.c **** 
  12:source\asw/swc_clock.c **** #include "project.h"
  13:source\asw/swc_clock.c **** #include "global.h"
  14:source\asw/swc_clock.c **** #include "rte.h"
  15:source\asw/swc_clock.c **** #include "rte_types.h"
  16:source\asw/swc_clock.c **** #include "swc_clock.h"
  17:source\asw/swc_clock.c **** 
  18:source\asw/swc_clock.c **** 
  19:source\asw/swc_clock.c **** 
  20:source\asw/swc_clock.c **** /* USER CODE START SWC_CLOCK_INCLUDE */
  21:source\asw/swc_clock.c **** #include "stdlib.h"
  22:source\asw/swc_clock.c **** /* USER CODE END SWC_CLOCK_INCLUDE */
  23:source\asw/swc_clock.c **** 
  24:source\asw/swc_clock.c **** 
  25:source\asw/swc_clock.c **** #include "sp_common.h"
  26:source\asw/swc_clock.c **** 
  27:source\asw/swc_clock.c **** /* USER CODE START SWC_CLOCK_USERDEFINITIONS */
  28:source\asw/swc_clock.c **** #include "clock.h"
  29:source\asw/swc_clock.c **** /* USER CODE END SWC_CLOCK_USERDEFINITIONS */
  30:source\asw/swc_clock.c **** 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 2


  31:source\asw/swc_clock.c **** 
  32:source\asw/swc_clock.c **** 
  33:source\asw/swc_clock.c **** /*
  34:source\asw/swc_clock.c ****  * component: swc_Clock
  35:source\asw/swc_clock.c ****  * cycletime: 50
  36:source\asw/swc_clock.c ****  * description: Runnable
  37:source\asw/swc_clock.c ****  * events: 
  38:source\asw/swc_clock.c ****  * name: CLOCK_input_run
  39:source\asw/swc_clock.c ****  * shortname: input
  40:source\asw/swc_clock.c ****  * signalIN: 
  41:source\asw/swc_clock.c ****  * signalOUT: so_inputevent
  42:source\asw/swc_clock.c ****  * task: tsk_input
  43:source\asw/swc_clock.c ****  */
  44:source\asw/swc_clock.c **** void CLOCK_input_run(RTE_event ev){
  28              		.loc 1 44 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 136
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 A2B0     		sub	sp, sp, #136
  40              		.cfi_def_cfa_offset 152
  41              	.LVL1:
  42              	.LBB29:
  43              	.LBB30:
  44              		.file 2 ".\\source\\rte/sc_input.h"
   1:.\source\rte/sc_input.h **** 
   2:.\source\rte/sc_input.h **** 
   3:.\source\rte/sc_input.h **** /**
   4:.\source\rte/sc_input.h ****  *  file    SC_INPUT_signal.h
   5:.\source\rte/sc_input.h ****  *
   6:.\source\rte/sc_input.h ****  *  brief   signal base class for signal sc_input
   7:.\source\rte/sc_input.h ****  *
   8:.\source\rte/sc_input.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_input.h ****  *
  10:.\source\rte/sc_input.h ****  * description: Signalclass
  11:.\source\rte/sc_input.h ****  * name: sc_input
  12:.\source\rte/sc_input.h ****  * shortname: input
  13:.\source\rte/sc_input.h ****  *
  14:.\source\rte/sc_input.h ****  */
  15:.\source\rte/sc_input.h **** 
  16:.\source\rte/sc_input.h **** 
  17:.\source\rte/sc_input.h **** 
  18:.\source\rte/sc_input.h **** #ifndef SC_INPUT_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_input.h **** #define SC_INPUT_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_input.h **** 
  21:.\source\rte/sc_input.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_input.h **** #include "global.h"
  23:.\source\rte/sc_input.h **** #include "project.h"
  24:.\source\rte/sc_input.h **** #include "rte.h"
  25:.\source\rte/sc_input.h **** #include "rte_types.h"
  26:.\source\rte/sc_input.h **** 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 3


  27:.\source\rte/sc_input.h **** #include "sc_input_type.h"
  28:.\source\rte/sc_input.h **** 
  29:.\source\rte/sc_input.h **** 
  30:.\source\rte/sc_input.h **** /**************************************************************************************************
  31:.\source\rte/sc_input.h **** /* The driver API block																						*/
  32:.\source\rte/sc_input.h **** /**************************************************************************************************
  33:.\source\rte/sc_input.h ****                                                                                                    
  34:.\source\rte/sc_input.h **** /**
  35:.\source\rte/sc_input.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_input.h ****  *  I-Port
  37:.\source\rte/sc_input.h ****  */
  38:.\source\rte/sc_input.h **** typedef RC_t (*SC_INPUT_driverIn_t)(SC_INPUT_data_t * const);
  39:.\source\rte/sc_input.h **** 
  40:.\source\rte/sc_input.h **** /**
  41:.\source\rte/sc_input.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_input.h ****  *  O-Port
  43:.\source\rte/sc_input.h ****  */
  44:.\source\rte/sc_input.h **** typedef RC_t (*SC_INPUT_driverOut_t)( const SC_INPUT_data_t * const);
  45:.\source\rte/sc_input.h **** 
  46:.\source\rte/sc_input.h **** 
  47:.\source\rte/sc_input.h **** /**************************************************************************************************
  48:.\source\rte/sc_input.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_input.h **** /**************************************************************************************************
  50:.\source\rte/sc_input.h **** 
  51:.\source\rte/sc_input.h **** /**
  52:.\source\rte/sc_input.h ****  * Instances of the struct SC_INPUT_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_input.h ****  */
  54:.\source\rte/sc_input.h **** struct SC_INPUT_cfg_s
  55:.\source\rte/sc_input.h **** {
  56:.\source\rte/sc_input.h ****     /**
  57:.\source\rte/sc_input.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_input.h ****      */
  59:.\source\rte/sc_input.h ****     SC_INPUT_driverIn_t const inDriver;
  60:.\source\rte/sc_input.h **** 
  61:.\source\rte/sc_input.h ****     /**
  62:.\source\rte/sc_input.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_input.h ****      */
  64:.\source\rte/sc_input.h ****    SC_INPUT_driverOut_t const outDriver;
  65:.\source\rte/sc_input.h ****    
  66:.\source\rte/sc_input.h ****     /**
  67:.\source\rte/sc_input.h ****      * Event onUpdate
  68:.\source\rte/sc_input.h ****      */
  69:.\source\rte/sc_input.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_input.h ****     
  71:.\source\rte/sc_input.h ****     
  72:.\source\rte/sc_input.h ****     /**
  73:.\source\rte/sc_input.h ****      * Event onError
  74:.\source\rte/sc_input.h ****      */
  75:.\source\rte/sc_input.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_input.h ****     
  77:.\source\rte/sc_input.h ****     /**
  78:.\source\rte/sc_input.h ****      * Task Count onUpdate
  79:.\source\rte/sc_input.h ****      */
  80:.\source\rte/sc_input.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_input.h **** 
  82:.\source\rte/sc_input.h ****     /**
  83:.\source\rte/sc_input.h ****      * Task List onUpdate
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 4


  84:.\source\rte/sc_input.h ****      */
  85:.\source\rte/sc_input.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_input.h ****     
  87:.\source\rte/sc_input.h ****     /**
  88:.\source\rte/sc_input.h ****      * Task Count onError
  89:.\source\rte/sc_input.h ****      */
  90:.\source\rte/sc_input.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_input.h **** 
  92:.\source\rte/sc_input.h ****     /**
  93:.\source\rte/sc_input.h ****      * Task List onError
  94:.\source\rte/sc_input.h ****      */
  95:.\source\rte/sc_input.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_input.h **** 	
  97:.\source\rte/sc_input.h **** 	
  98:.\source\rte/sc_input.h **** 	/**
  99:.\source\rte/sc_input.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_input.h **** 	 */
 101:.\source\rte/sc_input.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_input.h **** 	 
 103:.\source\rte/sc_input.h **** 	/**
 104:.\source\rte/sc_input.h **** 	 * Ressourse 
 105:.\source\rte/sc_input.h **** 	 */
 106:.\source\rte/sc_input.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_input.h **** 
 108:.\source\rte/sc_input.h **** };                                                                                                 
 109:.\source\rte/sc_input.h **** typedef const struct SC_INPUT_cfg_s SC_INPUT_cfg_t;
 110:.\source\rte/sc_input.h ****                               
 111:.\source\rte/sc_input.h **** /**************************************************************************************************
 112:.\source\rte/sc_input.h **** /* The data interface block																							*/
 113:.\source\rte/sc_input.h **** /**************************************************************************************************
 114:.\source\rte/sc_input.h **** 
 115:.\source\rte/sc_input.h ****                                                                                                    
 116:.\source\rte/sc_input.h **** 							  
 117:.\source\rte/sc_input.h **** /**
 118:.\source\rte/sc_input.h ****  * Instances of the struct SC_INPUT_t represent the signal objects.
 119:.\source\rte/sc_input.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_input.h ****  */
 121:.\source\rte/sc_input.h **** struct SC_INPUT_s
 122:.\source\rte/sc_input.h **** {                                                                                                  
 123:.\source\rte/sc_input.h **** 
 124:.\source\rte/sc_input.h **** 	/**
 125:.\source\rte/sc_input.h **** 	 * Data buffer for the application value
 126:.\source\rte/sc_input.h **** 	 */
 127:.\source\rte/sc_input.h ****     SC_INPUT_data_t value;
 128:.\source\rte/sc_input.h **** 
 129:.\source\rte/sc_input.h ****     /**
 130:.\source\rte/sc_input.h ****      * Current signal status
 131:.\source\rte/sc_input.h ****      */
 132:.\source\rte/sc_input.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_input.h **** 
 134:.\source\rte/sc_input.h ****     /**
 135:.\source\rte/sc_input.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_input.h ****      */
 137:.\source\rte/sc_input.h ****     uint32_t age;
 138:.\source\rte/sc_input.h **** 
 139:.\source\rte/sc_input.h ****     /**
 140:.\source\rte/sc_input.h ****      * Pointer to the signal configuration
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 5


 141:.\source\rte/sc_input.h ****      */
 142:.\source\rte/sc_input.h **** 	const SC_INPUT_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_input.h **** 
 144:.\source\rte/sc_input.h **** };                                                                                                 
 145:.\source\rte/sc_input.h **** typedef struct SC_INPUT_s SC_INPUT_t;
 146:.\source\rte/sc_input.h **** 
 147:.\source\rte/sc_input.h **** /**************************************************************************************************
 148:.\source\rte/sc_input.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_input.h **** /**************************************************************************************************
 150:.\source\rte/sc_input.h **** 
 151:.\source\rte/sc_input.h **** /**
 152:.\source\rte/sc_input.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_input.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_input.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_input.h ****  *
 156:.\source\rte/sc_input.h ****  * @param  SC_INPUT_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_input.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_input.h ****  *
 159:.\source\rte/sc_input.h ****  **/
 160:.\source\rte/sc_input.h **** inline RC_t RTE_SC_INPUT_init( SC_INPUT_t * const signal )
 161:.\source\rte/sc_input.h **** {                                                                                                  
 162:.\source\rte/sc_input.h **** 
 163:.\source\rte/sc_input.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_input.h **** 
 165:.\source\rte/sc_input.h ****    //Set value and raw value
 166:.\source\rte/sc_input.h ****    signal->value  = SC_INPUT_INIT_DATA;
 167:.\source\rte/sc_input.h ****    signal->age    = 0;
 168:.\source\rte/sc_input.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_input.h **** 
 170:.\source\rte/sc_input.h ****    return ret;
 171:.\source\rte/sc_input.h **** }
 172:.\source\rte/sc_input.h **** 
 173:.\source\rte/sc_input.h **** /**************************************************************************************************
 174:.\source\rte/sc_input.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_input.h **** /**************************************************************************************************
 176:.\source\rte/sc_input.h **** 
 177:.\source\rte/sc_input.h **** /**
 178:.\source\rte/sc_input.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_input.h ****  *
 180:.\source\rte/sc_input.h ****  * @param  SC_INPUT_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_input.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_input.h ****  *
 183:.\source\rte/sc_input.h ****  **/
 184:.\source\rte/sc_input.h **** inline RTE_signalStatus_t RTE_SC_INPUT_getStatus( const SC_INPUT_t * const signal )
 185:.\source\rte/sc_input.h **** {
 186:.\source\rte/sc_input.h ****    return signal->status;
 187:.\source\rte/sc_input.h **** }
 188:.\source\rte/sc_input.h **** 
 189:.\source\rte/sc_input.h **** 
 190:.\source\rte/sc_input.h **** /**
 191:.\source\rte/sc_input.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_input.h ****  *
 193:.\source\rte/sc_input.h ****  * @param  SC_INPUT_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_input.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_input.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_input.h ****  *
 197:.\source\rte/sc_input.h ****  */
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 6


 198:.\source\rte/sc_input.h **** inline RC_t RTE_SC_INPUT_setStatus( SC_INPUT_t * const signal, const RTE_signalStatus_t status )
 199:.\source\rte/sc_input.h **** {
 200:.\source\rte/sc_input.h ****    signal->status = status;
 201:.\source\rte/sc_input.h ****    size_t taskNum=0;
 202:.\source\rte/sc_input.h ****    
 203:.\source\rte/sc_input.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_input.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_input.h ****    {
 206:.\source\rte/sc_input.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_input.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_input.h **** 
 209:.\source\rte/sc_input.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_input.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_input.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_input.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_input.h **** 			}
 214:.\source\rte/sc_input.h **** 		}
 215:.\source\rte/sc_input.h ****    }
 216:.\source\rte/sc_input.h ****    
 217:.\source\rte/sc_input.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_input.h **** }
 219:.\source\rte/sc_input.h **** 
 220:.\source\rte/sc_input.h **** 
 221:.\source\rte/sc_input.h **** /**
 222:.\source\rte/sc_input.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\source\rte/sc_input.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_input.h ****  *
 225:.\source\rte/sc_input.h ****  * @param  SC_INPUT_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_input.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_input.h ****  */
 228:.\source\rte/sc_input.h **** inline uint32_t RTE_SC_INPUT_getAge( const SC_INPUT_t * const signal )
 229:.\source\rte/sc_input.h **** {
 230:.\source\rte/sc_input.h ****    return signal->age;
 231:.\source\rte/sc_input.h **** }
 232:.\source\rte/sc_input.h **** 
 233:.\source\rte/sc_input.h **** /**
 234:.\source\rte/sc_input.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_input.h ****  * @param  SC_INPUT_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_input.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_input.h ****  * @return void
 238:.\source\rte/sc_input.h ****  */
 239:.\source\rte/sc_input.h **** inline void RTE_SC_INPUT_incAge(  SC_INPUT_t * const signal , uint32_t increment)
 240:.\source\rte/sc_input.h **** {
 241:.\source\rte/sc_input.h **** 	   //Hack....
 242:.\source\rte/sc_input.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_input.h **** 	   {
 244:.\source\rte/sc_input.h **** 	      signal->age += increment;
 245:.\source\rte/sc_input.h **** 	   }
 246:.\source\rte/sc_input.h **** }
 247:.\source\rte/sc_input.h **** 
 248:.\source\rte/sc_input.h **** 
 249:.\source\rte/sc_input.h **** /**************************************************************************************************
 250:.\source\rte/sc_input.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_input.h **** /**************************************************************************************************
 252:.\source\rte/sc_input.h **** 
 253:.\source\rte/sc_input.h **** /**
 254:.\source\rte/sc_input.h ****  * Returns the current application value as pointer to the signal payload.
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 7


 255:.\source\rte/sc_input.h ****  * Careful: This is not threadsafe!!!
 256:.\source\rte/sc_input.h ****  *
 257:.\source\rte/sc_input.h ****  * @param  SC_INPUT_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_input.h ****  * @return sc_input_data_t*: pointer to the current value of the application data buffer
 259:.\source\rte/sc_input.h ****  *
 260:.\source\rte/sc_input.h ****  **/
 261:.\source\rte/sc_input.h **** inline SC_INPUT_data_t* RTE_SC_INPUT_getPtr( SC_INPUT_t * const signal )
 262:.\source\rte/sc_input.h **** {               
 263:.\source\rte/sc_input.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_input.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_input.h **** }
 266:.\source\rte/sc_input.h **** 
 267:.\source\rte/sc_input.h **** /**
 268:.\source\rte/sc_input.h ****  * Returns the current application value of the passed signal instance.
 269:.\source\rte/sc_input.h ****  *
 270:.\source\rte/sc_input.h ****  * @param  SC_INPUT_t * const signal: Pointer to the signal object
 271:.\source\rte/sc_input.h ****  * @return sc_input_data_t: current value of the application data buffer
 272:.\source\rte/sc_input.h ****  *
 273:.\source\rte/sc_input.h ****  **/
 274:.\source\rte/sc_input.h **** inline SC_INPUT_data_t RTE_SC_INPUT_get( const SC_INPUT_t * const signal )
 275:.\source\rte/sc_input.h **** {               
 276:.\source\rte/sc_input.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_input.h ****    return signal->value;                                                                           
 278:.\source\rte/sc_input.h **** }                                                                                                  
 279:.\source\rte/sc_input.h ****                                                                                                    
 280:.\source\rte/sc_input.h **** /**
 281:.\source\rte/sc_input.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\source\rte/sc_input.h ****  *
 283:.\source\rte/sc_input.h ****  * @param  SC_INPUT_t * const signal: Pointer to the signal object
 284:.\source\rte/sc_input.h ****  * @param  SC_INPUT_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\source\rte/sc_input.h ****  * @return RC_SUCCESS
 286:.\source\rte/sc_input.h ****  *
 287:.\source\rte/sc_input.h ****  **/
 288:.\source\rte/sc_input.h **** inline RC_t RTE_SC_INPUT_getThreadSafe( const SC_INPUT_t * const signal, SC_INPUT_data_t * const da
 289:.\source\rte/sc_input.h **** {    
 290:.\source\rte/sc_input.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\source\rte/sc_input.h ****    *data = signal->value;
 292:.\source\rte/sc_input.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 293:.\source\rte/sc_input.h **** 
 294:.\source\rte/sc_input.h ****    return RC_SUCCESS;                                                                   
 295:.\source\rte/sc_input.h ****    
 296:.\source\rte/sc_input.h **** }                                                                                                  
 297:.\source\rte/sc_input.h ****                                                                                                    
 298:.\source\rte/sc_input.h **** /**
 299:.\source\rte/sc_input.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\source\rte/sc_input.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\source\rte/sc_input.h ****  * signal specific scaling function.
 302:.\source\rte/sc_input.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\source\rte/sc_input.h ****  *
 304:.\source\rte/sc_input.h ****  * @param  SC_INPUT_t * const signal: Pointer to the signal object
 305:.\source\rte/sc_input.h ****  * @param  sc_input_data_t const value: value for the application data buffer
 306:.\source\rte/sc_input.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\source\rte/sc_input.h ****  *
 308:.\source\rte/sc_input.h ****  **/
 309:.\source\rte/sc_input.h **** inline RC_t RTE_SC_INPUT_set(SC_INPUT_t * const signal, const SC_INPUT_data_t value  )
 310:.\source\rte/sc_input.h **** {
 311:.\source\rte/sc_input.h **** 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 8


 312:.\source\rte/sc_input.h ****    RC_t ret = RC_SUCCESS;
 313:.\source\rte/sc_input.h ****    size_t taskNum=0;
 314:.\source\rte/sc_input.h **** 
 315:.\source\rte/sc_input.h **** 
 316:.\source\rte/sc_input.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 317:.\source\rte/sc_input.h ****    signal->value  = value;
 318:.\source\rte/sc_input.h ****    signal->age    = 0;
 319:.\source\rte/sc_input.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
 320:.\source\rte/sc_input.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 321:.\source\rte/sc_input.h **** 
 322:.\source\rte/sc_input.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 323:.\source\rte/sc_input.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
 324:.\source\rte/sc_input.h **** 
 325:.\source\rte/sc_input.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
 326:.\source\rte/sc_input.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 327:.\source\rte/sc_input.h **** 		  
 328:.\source\rte/sc_input.h ****           TaskType task = (*pTaskArray)[taskNum];
 329:.\source\rte/sc_input.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 330:.\source\rte/sc_input.h ****       }
 331:.\source\rte/sc_input.h ****    }
 332:.\source\rte/sc_input.h **** 
 333:.\source\rte/sc_input.h ****    return ret;
 334:.\source\rte/sc_input.h **** }                                                                                                  
 335:.\source\rte/sc_input.h ****                                                                                                    
 336:.\source\rte/sc_input.h ****                                                                                                    
 337:.\source\rte/sc_input.h **** /**************************************************************************************************
 338:.\source\rte/sc_input.h **** /* Call functions to the connected drivers																			*/
 339:.\source\rte/sc_input.h **** /**************************************************************************************************
 340:.\source\rte/sc_input.h **** 
 341:.\source\rte/sc_input.h ****                                                                                                    
 342:.\source\rte/sc_input.h **** /**
 343:.\source\rte/sc_input.h ****  *  Calls the connected driver interface to get a new value.
 344:.\source\rte/sc_input.h ****  *
 345:.\source\rte/sc_input.h ****  * @param SC_INPUT_t * const signal: Pointer to the signal object
 346:.\source\rte/sc_input.h ****  * @return  RC_t: Return value of the driver call
 347:.\source\rte/sc_input.h ****  *
 348:.\source\rte/sc_input.h ****  */
 349:.\source\rte/sc_input.h **** inline RC_t RTE_SC_INPUT_pullPort( SC_INPUT_t * const signal )
 350:.\source\rte/sc_input.h **** {                                                                                                  
 351:.\source\rte/sc_input.h ****    RC_t ret = RC_SUCCESS;
 352:.\source\rte/sc_input.h **** 
 353:.\source\rte/sc_input.h ****                                                                                                    
 354:.\source\rte/sc_input.h ****    if ( NULL != signal->pSigCfg->inDriver )
  45              		.loc 2 354 0
  46 0004 264B     		ldr	r3, .L12
  47 0006 DC6C     		ldr	r4, [r3, #76]
  48 0008 2368     		ldr	r3, [r4]
  49 000a 002B     		cmp	r3, #0
  50 000c 46D0     		beq	.L1
  51              	.LBB31:
 355:.\source\rte/sc_input.h ****    {
 356:.\source\rte/sc_input.h **** 	  SC_INPUT_data_t value = signal->value;
  52              		.loc 2 356 0
  53 000e 4422     		movs	r2, #68
  54 0010 2349     		ldr	r1, .L12
  55 0012 6846     		mov	r0, sp
  56              	.LVL2:
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 9


  57 0014 FFF7FEFF 		bl	memcpy
  58              	.LVL3:
 357:.\source\rte/sc_input.h ****       ret = signal->pSigCfg->inDriver(&value);
  59              		.loc 2 357 0
  60 0018 2368     		ldr	r3, [r4]
  61 001a 6846     		mov	r0, sp
  62 001c 9847     		blx	r3
  63              	.LVL4:
 358:.\source\rte/sc_input.h ****                                                                                                    
 359:.\source\rte/sc_input.h ****       if ( ret == RC_SUCCESS )                                                                     
  64              		.loc 2 359 0
  65 001e 30BB     		cbnz	r0, .L3
  66              	.LVL5:
  67 0020 4425     		movs	r5, #68
  68 0022 2A46     		mov	r2, r5
  69 0024 6946     		mov	r1, sp
  70 0026 0DEB0500 		add	r0, sp, r5
  71              	.LVL6:
  72 002a FFF7FEFF 		bl	memcpy
  73              	.LVL7:
  74              	.LBB32:
  75              	.LBB33:
 316:.\source\rte/sc_input.h ****    signal->value  = value;
  76              		.loc 2 316 0
  77 002e 1C4C     		ldr	r4, .L12
  78 0030 E66C     		ldr	r6, [r4, #76]
 317:.\source\rte/sc_input.h ****    signal->age    = 0;
  79              		.loc 2 317 0
  80 0032 2A46     		mov	r2, r5
  81 0034 0DEB0501 		add	r1, sp, r5
  82 0038 2046     		mov	r0, r4
  83 003a FFF7FEFF 		bl	memcpy
  84              	.LVL8:
 318:.\source\rte/sc_input.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
  85              		.loc 2 318 0
  86 003e 0023     		movs	r3, #0
  87 0040 A364     		str	r3, [r4, #72]
 319:.\source\rte/sc_input.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
  88              		.loc 2 319 0
  89 0042 0223     		movs	r3, #2
  90 0044 84F84430 		strb	r3, [r4, #68]
 323:.\source\rte/sc_input.h **** 
  91              		.loc 2 323 0
  92 0048 7569     		ldr	r5, [r6, #20]
  93              	.LVL9:
 325:.\source\rte/sc_input.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
  94              		.loc 2 325 0
  95 004a B368     		ldr	r3, [r6, #8]
  96 004c 33B3     		cbz	r3, .L1
  97 004e 3DB9     		cbnz	r5, .L9
  98 0050 24E0     		b	.L1
  99              	.LVL10:
 100              	.L6:
 101              	.LBB34:
 329:.\source\rte/sc_input.h ****       }
 102              		.loc 2 329 0
 103 0052 9968     		ldr	r1, [r3, #8]
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 10


 104 0054 55F82400 		ldr	r0, [r5, r4, lsl #2]
 105 0058 FFF7FEFF 		bl	EE_oo_SetEvent
 106              	.LVL11:
 107              	.LBE34:
 326:.\source\rte/sc_input.h **** 		  
 108              		.loc 2 326 0
 109 005c 0134     		adds	r4, r4, #1
 110              	.LVL12:
 111 005e 00E0     		b	.L5
 112              	.LVL13:
 113              	.L9:
 325:.\source\rte/sc_input.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 114              		.loc 2 325 0
 115 0060 0024     		movs	r4, #0
 116              	.LVL14:
 117              	.L5:
 326:.\source\rte/sc_input.h **** 		  
 118              		.loc 2 326 0
 119 0062 0F4B     		ldr	r3, .L12
 120 0064 DB6C     		ldr	r3, [r3, #76]
 121 0066 1A69     		ldr	r2, [r3, #16]
 122 0068 9442     		cmp	r4, r2
 123 006a F2D3     		bcc	.L6
 124 006c 16E0     		b	.L1
 125              	.LVL15:
 126              	.L3:
 127              	.LBE33:
 128              	.LBE32:
 129              	.LBB35:
 130              	.LBB36:
 200:.\source\rte/sc_input.h ****    size_t taskNum=0;
 131              		.loc 2 200 0
 132 006e 0C4B     		ldr	r3, .L12
 133 0070 0322     		movs	r2, #3
 134 0072 83F84420 		strb	r2, [r3, #68]
 135              	.LVL16:
 136              	.LBB37:
 207:.\source\rte/sc_input.h **** 
 137              		.loc 2 207 0
 138 0076 DB6C     		ldr	r3, [r3, #76]
 139 0078 DD69     		ldr	r5, [r3, #28]
 140              	.LVL17:
 209:.\source\rte/sc_input.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 141              		.loc 2 209 0
 142 007a DB68     		ldr	r3, [r3, #12]
 143 007c 73B1     		cbz	r3, .L1
 144 007e 3DB9     		cbnz	r5, .L10
 145 0080 0CE0     		b	.L1
 146              	.LVL18:
 147              	.L8:
 148              	.LBB38:
 212:.\source\rte/sc_input.h **** 			}
 149              		.loc 2 212 0
 150 0082 D968     		ldr	r1, [r3, #12]
 151 0084 55F82400 		ldr	r0, [r5, r4, lsl #2]
 152 0088 FFF7FEFF 		bl	EE_oo_SetEvent
 153              	.LVL19:
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 11


 154              	.LBE38:
 210:.\source\rte/sc_input.h **** 				TaskType task = (*pTaskArray)[taskNum];
 155              		.loc 2 210 0
 156 008c 0134     		adds	r4, r4, #1
 157              	.LVL20:
 158 008e 00E0     		b	.L7
 159              	.LVL21:
 160              	.L10:
 209:.\source\rte/sc_input.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 161              		.loc 2 209 0
 162 0090 0024     		movs	r4, #0
 163              	.LVL22:
 164              	.L7:
 210:.\source\rte/sc_input.h **** 				TaskType task = (*pTaskArray)[taskNum];
 165              		.loc 2 210 0
 166 0092 034B     		ldr	r3, .L12
 167 0094 DB6C     		ldr	r3, [r3, #76]
 168 0096 9A69     		ldr	r2, [r3, #24]
 169 0098 9442     		cmp	r4, r2
 170 009a F2D3     		bcc	.L8
 171              	.LVL23:
 172              	.L1:
 173              	.LBE37:
 174              	.LBE36:
 175              	.LBE35:
 176              	.LBE31:
 177              	.LBE30:
 178              	.LBE29:
  45:source\asw/swc_clock.c **** 	
  46:source\asw/swc_clock.c **** 	/* USER CODE START CLOCK_input_run */
  47:source\asw/swc_clock.c ****     
  48:source\asw/swc_clock.c **** //    UART_LOG_PutString("i am in input runnable");
  49:source\asw/swc_clock.c ****     
  50:source\asw/swc_clock.c ****     RTE_SC_INPUT_pullPort(&SO_INPUTEVENT_signal);
  51:source\asw/swc_clock.c ****     
  52:source\asw/swc_clock.c **** //    SC_INPUT_data_t event;
  53:source\asw/swc_clock.c **** //    event = RTE_SC_INPUT_get(&SO_INPUTEVENT_signal);
  54:source\asw/swc_clock.c **** //    char buffer[100];
  55:source\asw/swc_clock.c **** //    itoa(event.m_ev, buffer, 10);
  56:source\asw/swc_clock.c **** //    UART_LOG_PutString(buffer);
  57:source\asw/swc_clock.c ****     
  58:source\asw/swc_clock.c ****     /* USER CODE END CLOCK_input_run */
  59:source\asw/swc_clock.c **** }
 179              		.loc 1 59 0
 180 009c 22B0     		add	sp, sp, #136
 181              		.cfi_def_cfa_offset 16
 182              		@ sp needed
 183 009e 70BD     		pop	{r4, r5, r6, pc}
 184              	.L13:
 185              		.align	2
 186              	.L12:
 187 00a0 00000000 		.word	SO_INPUTEVENT_signal
 188              		.cfi_endproc
 189              	.LFE144:
 190              		.size	CLOCK_input_run, .-CLOCK_input_run
 191              		.section	.text.CLOCK_control_run,"ax",%progbits
 192              		.align	2
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 12


 193              		.global	CLOCK_control_run
 194              		.thumb
 195              		.thumb_func
 196              		.type	CLOCK_control_run, %function
 197              	CLOCK_control_run:
 198              	.LFB145:
  60:source\asw/swc_clock.c **** 
  61:source\asw/swc_clock.c **** /*
  62:source\asw/swc_clock.c ****  * component: swc_Clock
  63:source\asw/swc_clock.c ****  * cycletime: 0
  64:source\asw/swc_clock.c ****  * description: Runnable
  65:source\asw/swc_clock.c ****  * events: ev_event_onData
  66:source\asw/swc_clock.c ****  * name: CLOCK_control_run
  67:source\asw/swc_clock.c ****  * shortname: control
  68:source\asw/swc_clock.c ****  * signalIN: so_inputevent
  69:source\asw/swc_clock.c ****  * signalOUT: so_control
  70:source\asw/swc_clock.c ****  * task: tsk_control
  71:source\asw/swc_clock.c ****  */
  72:source\asw/swc_clock.c **** void CLOCK_control_run(RTE_event ev){
 199              		.loc 1 72 0
 200              		.cfi_startproc
 201              		@ args = 0, pretend = 0, frame = 72
 202              		@ frame_needed = 0, uses_anonymous_args = 0
 203              	.LVL24:
 204 0000 00B5     		push	{lr}
 205              		.cfi_def_cfa_offset 4
 206              		.cfi_offset 14, -4
 207 0002 93B0     		sub	sp, sp, #76
 208              		.cfi_def_cfa_offset 80
 209              	.LVL25:
 210              	.LBB39:
 211              	.LBB40:
 277:.\source\rte/sc_input.h **** }                                                                                                  
 212              		.loc 2 277 0
 213 0004 4422     		movs	r2, #68
 214 0006 1049     		ldr	r1, .L21
 215 0008 01A8     		add	r0, sp, #4
 216              	.LVL26:
 217 000a FFF7FEFF 		bl	memcpy
 218              	.LVL27:
 219              	.LBE40:
 220              	.LBE39:
  73:source\asw/swc_clock.c **** 	
  74:source\asw/swc_clock.c **** 	/* USER CODE START CLOCK_control_run */
  75:source\asw/swc_clock.c ****     
  76:source\asw/swc_clock.c **** //    UART_LOG_PutString("i am in control runnable");
  77:source\asw/swc_clock.c **** //    char buffer[100];
  78:source\asw/swc_clock.c ****     
  79:source\asw/swc_clock.c ****     SC_INPUT_data_t rxinput;
  80:source\asw/swc_clock.c ****     
  81:source\asw/swc_clock.c ****     rxinput = RTE_SC_INPUT_get(&SO_INPUTEVENT_signal);
  82:source\asw/swc_clock.c ****     
  83:source\asw/swc_clock.c ****     if(rxinput.m_ev == EV_KEYLEFT)
 221              		.loc 1 83 0
 222 000e 9DF80600 		ldrb	r0, [sp, #6]	@ zero_extendqisi2
 223 0012 0128     		cmp	r0, #1
 224 0014 02D1     		bne	.L15
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 13


  84:source\asw/swc_clock.c ****     {
  85:source\asw/swc_clock.c **** //        UART_LOG_PutString("KeyLeft Pressed\n");
  86:source\asw/swc_clock.c **** //        itoa(rxinput.m_state, buffer, 10);
  87:source\asw/swc_clock.c **** //        UART_LOG_PutString(buffer);
  88:source\asw/swc_clock.c **** 
  89:source\asw/swc_clock.c ****         ProcessEvent(rxinput.m_ev);
 225              		.loc 1 89 0
 226 0016 FFF7FEFF 		bl	ProcessEvent
 227              	.LVL28:
 228 001a 12E0     		b	.L14
 229              	.L15:
  90:source\asw/swc_clock.c ****     }
  91:source\asw/swc_clock.c ****     else if(rxinput.m_ev == EV_KEYRIGHT)
 230              		.loc 1 91 0
 231 001c 0228     		cmp	r0, #2
 232 001e 02D1     		bne	.L17
  92:source\asw/swc_clock.c ****     {
  93:source\asw/swc_clock.c **** //        UART_LOG_PutString("KeyRight Pressed\n");
  94:source\asw/swc_clock.c **** //        itoa(rxinput.m_ev, buffer, 10);
  95:source\asw/swc_clock.c **** //        UART_LOG_PutString(buffer);
  96:source\asw/swc_clock.c ****         
  97:source\asw/swc_clock.c ****         ProcessEvent(rxinput.m_ev);
 233              		.loc 1 97 0
 234 0020 FFF7FEFF 		bl	ProcessEvent
 235              	.LVL29:
 236 0024 0DE0     		b	.L14
 237              	.L17:
  98:source\asw/swc_clock.c ****     }
  99:source\asw/swc_clock.c ****     else if(rxinput.m_ev == EV_KEYRIGHTLONGPRESS)
 238              		.loc 1 99 0
 239 0026 0328     		cmp	r0, #3
 240 0028 02D1     		bne	.L18
 100:source\asw/swc_clock.c ****     {
 101:source\asw/swc_clock.c **** //        UART_LOG_PutString("KeyRight Pressed Long.........\n");
 102:source\asw/swc_clock.c **** //        itoa(rxinput.m_ev, buffer, 10);
 103:source\asw/swc_clock.c **** //        UART_LOG_PutString(buffer);
 104:source\asw/swc_clock.c ****         
 105:source\asw/swc_clock.c ****         ProcessEvent(rxinput.m_ev);
 241              		.loc 1 105 0
 242 002a FFF7FEFF 		bl	ProcessEvent
 243              	.LVL30:
 244 002e 08E0     		b	.L14
 245              	.L18:
 106:source\asw/swc_clock.c ****     }
 107:source\asw/swc_clock.c ****     else if(rxinput.m_ev    ==  EV_1MIN)
 246              		.loc 1 107 0
 247 0030 0528     		cmp	r0, #5
 248 0032 02D1     		bne	.L19
 108:source\asw/swc_clock.c ****     {
 109:source\asw/swc_clock.c **** //        UART_LOG_PutString("One minute event fired\n");
 110:source\asw/swc_clock.c ****         
 111:source\asw/swc_clock.c ****         ProcessEvent(rxinput.m_ev);
 249              		.loc 1 111 0
 250 0034 FFF7FEFF 		bl	ProcessEvent
 251              	.LVL31:
 252 0038 03E0     		b	.L14
 253              	.L19:
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 14


 112:source\asw/swc_clock.c ****     }
 113:source\asw/swc_clock.c ****     else if(rxinput.m_ev    ==  EV_250MS)
 254              		.loc 1 113 0
 255 003a 0428     		cmp	r0, #4
 256 003c 01D1     		bne	.L14
 114:source\asw/swc_clock.c ****     {
 115:source\asw/swc_clock.c **** //        UART_LOG_PutString("250ms event fired\n");
 116:source\asw/swc_clock.c ****         
 117:source\asw/swc_clock.c ****         ProcessEvent(rxinput.m_ev);
 257              		.loc 1 117 0
 258 003e FFF7FEFF 		bl	ProcessEvent
 259              	.LVL32:
 260              	.L14:
 118:source\asw/swc_clock.c ****     }
 119:source\asw/swc_clock.c ****     
 120:source\asw/swc_clock.c ****     /* USER CODE END CLOCK_control_run */
 121:source\asw/swc_clock.c **** }
 261              		.loc 1 121 0
 262 0042 13B0     		add	sp, sp, #76
 263              		.cfi_def_cfa_offset 4
 264              		@ sp needed
 265 0044 5DF804FB 		ldr	pc, [sp], #4
 266              	.L22:
 267              		.align	2
 268              	.L21:
 269 0048 00000000 		.word	SO_INPUTEVENT_signal
 270              		.cfi_endproc
 271              	.LFE145:
 272              		.size	CLOCK_control_run, .-CLOCK_control_run
 273              		.section	.text.CLOCK_display_run,"ax",%progbits
 274              		.align	2
 275              		.global	CLOCK_display_run
 276              		.thumb
 277              		.thumb_func
 278              		.type	CLOCK_display_run, %function
 279              	CLOCK_display_run:
 280              	.LFB146:
 122:source\asw/swc_clock.c **** 
 123:source\asw/swc_clock.c **** /*
 124:source\asw/swc_clock.c ****  * component: swc_Clock
 125:source\asw/swc_clock.c ****  * cycletime: 250
 126:source\asw/swc_clock.c ****  * description: Runnable
 127:source\asw/swc_clock.c ****  * events: 
 128:source\asw/swc_clock.c ****  * name: CLOCK_display_run
 129:source\asw/swc_clock.c ****  * shortname: display
 130:source\asw/swc_clock.c ****  * signalIN: so_control
 131:source\asw/swc_clock.c ****  * signalOUT: so_displayonTFT
 132:source\asw/swc_clock.c ****  * task: tsk_input
 133:source\asw/swc_clock.c ****  */
 134:source\asw/swc_clock.c **** void CLOCK_display_run(RTE_event ev){
 281              		.loc 1 134 0
 282              		.cfi_startproc
 283              		@ args = 0, pretend = 0, frame = 72
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285              	.LVL33:
 286 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 287              		.cfi_def_cfa_offset 20
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 15


 288              		.cfi_offset 4, -20
 289              		.cfi_offset 5, -16
 290              		.cfi_offset 6, -12
 291              		.cfi_offset 7, -8
 292              		.cfi_offset 14, -4
 293 0002 93B0     		sub	sp, sp, #76
 294              		.cfi_def_cfa_offset 96
 135:source\asw/swc_clock.c **** 	
 136:source\asw/swc_clock.c **** 	/* USER CODE START CLOCK_display_run */
 137:source\asw/swc_clock.c **** 
 138:source\asw/swc_clock.c ****     SC_DISPLAY_data_t    tft_config  =   SC_DISPLAY_INIT_DATA;
 295              		.loc 1 138 0
 296 0004 0CAC     		add	r4, sp, #48
 297              	.LVL34:
 298              	.LBB41:
 299              	.LBB42:
 300              		.file 3 ".\\source\\rte/sc_control.h"
   1:.\source\rte/sc_control.h **** 
   2:.\source\rte/sc_control.h **** 
   3:.\source\rte/sc_control.h **** /**
   4:.\source\rte/sc_control.h ****  *  file    SC_CONTROL_signal.h
   5:.\source\rte/sc_control.h ****  *
   6:.\source\rte/sc_control.h ****  *  brief   signal base class for signal sc_control
   7:.\source\rte/sc_control.h ****  *
   8:.\source\rte/sc_control.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_control.h ****  *
  10:.\source\rte/sc_control.h ****  * description: Signalclass
  11:.\source\rte/sc_control.h ****  * name: sc_control
  12:.\source\rte/sc_control.h ****  * shortname: control
  13:.\source\rte/sc_control.h ****  *
  14:.\source\rte/sc_control.h ****  */
  15:.\source\rte/sc_control.h **** 
  16:.\source\rte/sc_control.h **** 
  17:.\source\rte/sc_control.h **** 
  18:.\source\rte/sc_control.h **** #ifndef SC_CONTROL_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_control.h **** #define SC_CONTROL_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_control.h **** 
  21:.\source\rte/sc_control.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_control.h **** #include "global.h"
  23:.\source\rte/sc_control.h **** #include "project.h"
  24:.\source\rte/sc_control.h **** #include "rte.h"
  25:.\source\rte/sc_control.h **** #include "rte_types.h"
  26:.\source\rte/sc_control.h **** 
  27:.\source\rte/sc_control.h **** #include "sc_control_type.h"
  28:.\source\rte/sc_control.h **** 
  29:.\source\rte/sc_control.h **** 
  30:.\source\rte/sc_control.h **** /**************************************************************************************************
  31:.\source\rte/sc_control.h **** /* The driver API block																						*/
  32:.\source\rte/sc_control.h **** /**************************************************************************************************
  33:.\source\rte/sc_control.h ****                                                                                                    
  34:.\source\rte/sc_control.h **** /**
  35:.\source\rte/sc_control.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_control.h ****  *  I-Port
  37:.\source\rte/sc_control.h ****  */
  38:.\source\rte/sc_control.h **** typedef RC_t (*SC_CONTROL_driverIn_t)(SC_CONTROL_data_t * const);
  39:.\source\rte/sc_control.h **** 
  40:.\source\rte/sc_control.h **** /**
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 16


  41:.\source\rte/sc_control.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_control.h ****  *  O-Port
  43:.\source\rte/sc_control.h ****  */
  44:.\source\rte/sc_control.h **** typedef RC_t (*SC_CONTROL_driverOut_t)( const SC_CONTROL_data_t * const);
  45:.\source\rte/sc_control.h **** 
  46:.\source\rte/sc_control.h **** 
  47:.\source\rte/sc_control.h **** /**************************************************************************************************
  48:.\source\rte/sc_control.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_control.h **** /**************************************************************************************************
  50:.\source\rte/sc_control.h **** 
  51:.\source\rte/sc_control.h **** /**
  52:.\source\rte/sc_control.h ****  * Instances of the struct SC_CONTROL_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_control.h ****  */
  54:.\source\rte/sc_control.h **** struct SC_CONTROL_cfg_s
  55:.\source\rte/sc_control.h **** {
  56:.\source\rte/sc_control.h ****     /**
  57:.\source\rte/sc_control.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_control.h ****      */
  59:.\source\rte/sc_control.h ****     SC_CONTROL_driverIn_t const inDriver;
  60:.\source\rte/sc_control.h **** 
  61:.\source\rte/sc_control.h ****     /**
  62:.\source\rte/sc_control.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_control.h ****      */
  64:.\source\rte/sc_control.h ****    SC_CONTROL_driverOut_t const outDriver;
  65:.\source\rte/sc_control.h ****    
  66:.\source\rte/sc_control.h ****     /**
  67:.\source\rte/sc_control.h ****      * Event onUpdate
  68:.\source\rte/sc_control.h ****      */
  69:.\source\rte/sc_control.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_control.h ****     
  71:.\source\rte/sc_control.h ****     
  72:.\source\rte/sc_control.h ****     /**
  73:.\source\rte/sc_control.h ****      * Event onError
  74:.\source\rte/sc_control.h ****      */
  75:.\source\rte/sc_control.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_control.h ****     
  77:.\source\rte/sc_control.h ****     /**
  78:.\source\rte/sc_control.h ****      * Task Count onUpdate
  79:.\source\rte/sc_control.h ****      */
  80:.\source\rte/sc_control.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_control.h **** 
  82:.\source\rte/sc_control.h ****     /**
  83:.\source\rte/sc_control.h ****      * Task List onUpdate
  84:.\source\rte/sc_control.h ****      */
  85:.\source\rte/sc_control.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_control.h ****     
  87:.\source\rte/sc_control.h ****     /**
  88:.\source\rte/sc_control.h ****      * Task Count onError
  89:.\source\rte/sc_control.h ****      */
  90:.\source\rte/sc_control.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_control.h **** 
  92:.\source\rte/sc_control.h ****     /**
  93:.\source\rte/sc_control.h ****      * Task List onError
  94:.\source\rte/sc_control.h ****      */
  95:.\source\rte/sc_control.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_control.h **** 	
  97:.\source\rte/sc_control.h **** 	
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 17


  98:.\source\rte/sc_control.h **** 	/**
  99:.\source\rte/sc_control.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_control.h **** 	 */
 101:.\source\rte/sc_control.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_control.h **** 	 
 103:.\source\rte/sc_control.h **** 	/**
 104:.\source\rte/sc_control.h **** 	 * Ressourse 
 105:.\source\rte/sc_control.h **** 	 */
 106:.\source\rte/sc_control.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_control.h **** 
 108:.\source\rte/sc_control.h **** };                                                                                                 
 109:.\source\rte/sc_control.h **** typedef const struct SC_CONTROL_cfg_s SC_CONTROL_cfg_t;
 110:.\source\rte/sc_control.h ****                               
 111:.\source\rte/sc_control.h **** /**************************************************************************************************
 112:.\source\rte/sc_control.h **** /* The data interface block																							*/
 113:.\source\rte/sc_control.h **** /**************************************************************************************************
 114:.\source\rte/sc_control.h **** 
 115:.\source\rte/sc_control.h ****                                                                                                    
 116:.\source\rte/sc_control.h **** 							  
 117:.\source\rte/sc_control.h **** /**
 118:.\source\rte/sc_control.h ****  * Instances of the struct SC_CONTROL_t represent the signal objects.
 119:.\source\rte/sc_control.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_control.h ****  */
 121:.\source\rte/sc_control.h **** struct SC_CONTROL_s
 122:.\source\rte/sc_control.h **** {                                                                                                  
 123:.\source\rte/sc_control.h **** 
 124:.\source\rte/sc_control.h **** 	/**
 125:.\source\rte/sc_control.h **** 	 * Data buffer for the application value
 126:.\source\rte/sc_control.h **** 	 */
 127:.\source\rte/sc_control.h ****     SC_CONTROL_data_t value;
 128:.\source\rte/sc_control.h **** 
 129:.\source\rte/sc_control.h ****     /**
 130:.\source\rte/sc_control.h ****      * Current signal status
 131:.\source\rte/sc_control.h ****      */
 132:.\source\rte/sc_control.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_control.h **** 
 134:.\source\rte/sc_control.h ****     /**
 135:.\source\rte/sc_control.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_control.h ****      */
 137:.\source\rte/sc_control.h ****     uint32_t age;
 138:.\source\rte/sc_control.h **** 
 139:.\source\rte/sc_control.h ****     /**
 140:.\source\rte/sc_control.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_control.h ****      */
 142:.\source\rte/sc_control.h **** 	const SC_CONTROL_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_control.h **** 
 144:.\source\rte/sc_control.h **** };                                                                                                 
 145:.\source\rte/sc_control.h **** typedef struct SC_CONTROL_s SC_CONTROL_t;
 146:.\source\rte/sc_control.h **** 
 147:.\source\rte/sc_control.h **** /**************************************************************************************************
 148:.\source\rte/sc_control.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_control.h **** /**************************************************************************************************
 150:.\source\rte/sc_control.h **** 
 151:.\source\rte/sc_control.h **** /**
 152:.\source\rte/sc_control.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_control.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_control.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 18


 155:.\source\rte/sc_control.h ****  *
 156:.\source\rte/sc_control.h ****  * @param  SC_CONTROL_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_control.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_control.h ****  *
 159:.\source\rte/sc_control.h ****  **/
 160:.\source\rte/sc_control.h **** inline RC_t RTE_SC_CONTROL_init( SC_CONTROL_t * const signal )
 161:.\source\rte/sc_control.h **** {                                                                                                  
 162:.\source\rte/sc_control.h **** 
 163:.\source\rte/sc_control.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_control.h **** 
 165:.\source\rte/sc_control.h ****    //Set value and raw value
 166:.\source\rte/sc_control.h ****    signal->value  = SC_CONTROL_INIT_DATA;
 167:.\source\rte/sc_control.h ****    signal->age    = 0;
 168:.\source\rte/sc_control.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_control.h **** 
 170:.\source\rte/sc_control.h ****    return ret;
 171:.\source\rte/sc_control.h **** }
 172:.\source\rte/sc_control.h **** 
 173:.\source\rte/sc_control.h **** /**************************************************************************************************
 174:.\source\rte/sc_control.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_control.h **** /**************************************************************************************************
 176:.\source\rte/sc_control.h **** 
 177:.\source\rte/sc_control.h **** /**
 178:.\source\rte/sc_control.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_control.h ****  *
 180:.\source\rte/sc_control.h ****  * @param  SC_CONTROL_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_control.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_control.h ****  *
 183:.\source\rte/sc_control.h ****  **/
 184:.\source\rte/sc_control.h **** inline RTE_signalStatus_t RTE_SC_CONTROL_getStatus( const SC_CONTROL_t * const signal )
 185:.\source\rte/sc_control.h **** {
 186:.\source\rte/sc_control.h ****    return signal->status;
 187:.\source\rte/sc_control.h **** }
 188:.\source\rte/sc_control.h **** 
 189:.\source\rte/sc_control.h **** 
 190:.\source\rte/sc_control.h **** /**
 191:.\source\rte/sc_control.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_control.h ****  *
 193:.\source\rte/sc_control.h ****  * @param  SC_CONTROL_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_control.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_control.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_control.h ****  *
 197:.\source\rte/sc_control.h ****  */
 198:.\source\rte/sc_control.h **** inline RC_t RTE_SC_CONTROL_setStatus( SC_CONTROL_t * const signal, const RTE_signalStatus_t status 
 199:.\source\rte/sc_control.h **** {
 200:.\source\rte/sc_control.h ****    signal->status = status;
 201:.\source\rte/sc_control.h ****    size_t taskNum=0;
 202:.\source\rte/sc_control.h ****    
 203:.\source\rte/sc_control.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_control.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_control.h ****    {
 206:.\source\rte/sc_control.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_control.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_control.h **** 
 209:.\source\rte/sc_control.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_control.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_control.h **** 				TaskType task = (*pTaskArray)[taskNum];
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 19


 212:.\source\rte/sc_control.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_control.h **** 			}
 214:.\source\rte/sc_control.h **** 		}
 215:.\source\rte/sc_control.h ****    }
 216:.\source\rte/sc_control.h ****    
 217:.\source\rte/sc_control.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_control.h **** }
 219:.\source\rte/sc_control.h **** 
 220:.\source\rte/sc_control.h **** 
 221:.\source\rte/sc_control.h **** /**
 222:.\source\rte/sc_control.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\source\rte/sc_control.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_control.h ****  *
 225:.\source\rte/sc_control.h ****  * @param  SC_CONTROL_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_control.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_control.h ****  */
 228:.\source\rte/sc_control.h **** inline uint32_t RTE_SC_CONTROL_getAge( const SC_CONTROL_t * const signal )
 229:.\source\rte/sc_control.h **** {
 230:.\source\rte/sc_control.h ****    return signal->age;
 231:.\source\rte/sc_control.h **** }
 232:.\source\rte/sc_control.h **** 
 233:.\source\rte/sc_control.h **** /**
 234:.\source\rte/sc_control.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_control.h ****  * @param  SC_CONTROL_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_control.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_control.h ****  * @return void
 238:.\source\rte/sc_control.h ****  */
 239:.\source\rte/sc_control.h **** inline void RTE_SC_CONTROL_incAge(  SC_CONTROL_t * const signal , uint32_t increment)
 240:.\source\rte/sc_control.h **** {
 241:.\source\rte/sc_control.h **** 	   //Hack....
 242:.\source\rte/sc_control.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_control.h **** 	   {
 244:.\source\rte/sc_control.h **** 	      signal->age += increment;
 245:.\source\rte/sc_control.h **** 	   }
 246:.\source\rte/sc_control.h **** }
 247:.\source\rte/sc_control.h **** 
 248:.\source\rte/sc_control.h **** 
 249:.\source\rte/sc_control.h **** /**************************************************************************************************
 250:.\source\rte/sc_control.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_control.h **** /**************************************************************************************************
 252:.\source\rte/sc_control.h **** 
 253:.\source\rte/sc_control.h **** /**
 254:.\source\rte/sc_control.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\source\rte/sc_control.h ****  * Careful: This is not threadsafe!!!
 256:.\source\rte/sc_control.h ****  *
 257:.\source\rte/sc_control.h ****  * @param  SC_CONTROL_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_control.h ****  * @return sc_control_data_t*: pointer to the current value of the application data buffer
 259:.\source\rte/sc_control.h ****  *
 260:.\source\rte/sc_control.h ****  **/
 261:.\source\rte/sc_control.h **** inline SC_CONTROL_data_t* RTE_SC_CONTROL_getPtr( SC_CONTROL_t * const signal )
 262:.\source\rte/sc_control.h **** {               
 263:.\source\rte/sc_control.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_control.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_control.h **** }
 266:.\source\rte/sc_control.h **** 
 267:.\source\rte/sc_control.h **** /**
 268:.\source\rte/sc_control.h ****  * Returns the current application value of the passed signal instance.
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 20


 269:.\source\rte/sc_control.h ****  *
 270:.\source\rte/sc_control.h ****  * @param  SC_CONTROL_t * const signal: Pointer to the signal object
 271:.\source\rte/sc_control.h ****  * @return sc_control_data_t: current value of the application data buffer
 272:.\source\rte/sc_control.h ****  *
 273:.\source\rte/sc_control.h ****  **/
 274:.\source\rte/sc_control.h **** inline SC_CONTROL_data_t RTE_SC_CONTROL_get( const SC_CONTROL_t * const signal )
 275:.\source\rte/sc_control.h **** {               
 276:.\source\rte/sc_control.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_control.h ****    return signal->value;                                                                           
 301              		.loc 3 277 0
 302 0006 06AD     		add	r5, sp, #24
 303 0008 214E     		ldr	r6, .L30
 304 000a 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 305              	.LVL35:
 306 000c 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 307 000e 96E80300 		ldmia	r6, {r0, r1}
 308 0012 85E80300 		stmia	r5, {r0, r1}
 309              	.LVL36:
 310              	.LBE42:
 311              	.LBE41:
 139:source\asw/swc_clock.c ****     
 140:source\asw/swc_clock.c ****     SC_CONTROL_data_t   control_data    = SC_CONTROL_INIT_DATA;
 141:source\asw/swc_clock.c ****     
 142:source\asw/swc_clock.c ****     control_data    =   RTE_SC_CONTROL_get(&SO_CONTROL_signal);
 143:source\asw/swc_clock.c ****     
 144:source\asw/swc_clock.c ****     tft_config.hour     =   control_data.hour;
 312              		.loc 1 144 0
 313 0016 06AB     		add	r3, sp, #24
 314 0018 93E80700 		ldmia	r3, {r0, r1, r2}
 315 001c 84E80700 		stmia	r4, {r0, r1, r2}
 145:source\asw/swc_clock.c ****     tft_config.minute   =   control_data.minute;
 316              		.loc 1 145 0
 317 0020 09AB     		add	r3, sp, #36
 318 0022 93E80700 		ldmia	r3, {r0, r1, r2}
 319 0026 12AB     		add	r3, sp, #72
 320 0028 03E90700 		stmdb	r3, {r0, r1, r2}
 321              	.LVL37:
 322 002c 6D46     		mov	r5, sp
 323 002e 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 324 0030 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 325 0032 94E80300 		ldmia	r4, {r0, r1}
 326 0036 85E80300 		stmia	r5, {r0, r1}
 327              	.LVL38:
 328              	.LBB43:
 329              	.LBB44:
 330              		.file 4 ".\\source\\rte/sc_display.h"
   1:.\source\rte/sc_display.h **** 
   2:.\source\rte/sc_display.h **** 
   3:.\source\rte/sc_display.h **** /**
   4:.\source\rte/sc_display.h ****  *  file    SC_DISPLAY_signal.h
   5:.\source\rte/sc_display.h ****  *
   6:.\source\rte/sc_display.h ****  *  brief   signal base class for signal sc_display
   7:.\source\rte/sc_display.h ****  *
   8:.\source\rte/sc_display.h ****  *  author  Autogenerated, Peter Fromm       <peter.fromm@h-da.de>
   9:.\source\rte/sc_display.h ****  *
  10:.\source\rte/sc_display.h ****  * description: Signalclass
  11:.\source\rte/sc_display.h ****  * name: sc_display
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 21


  12:.\source\rte/sc_display.h ****  * shortname: display
  13:.\source\rte/sc_display.h ****  *
  14:.\source\rte/sc_display.h ****  */
  15:.\source\rte/sc_display.h **** 
  16:.\source\rte/sc_display.h **** 
  17:.\source\rte/sc_display.h **** 
  18:.\source\rte/sc_display.h **** #ifndef SC_DISPLAY_SIGNAL_H_INCLUDED
  19:.\source\rte/sc_display.h **** #define SC_DISPLAY_SIGNAL_H_INCLUDED
  20:.\source\rte/sc_display.h **** 
  21:.\source\rte/sc_display.h **** /*================================================[ public includes  ]=============================
  22:.\source\rte/sc_display.h **** #include "global.h"
  23:.\source\rte/sc_display.h **** #include "project.h"
  24:.\source\rte/sc_display.h **** #include "rte.h"
  25:.\source\rte/sc_display.h **** #include "rte_types.h"
  26:.\source\rte/sc_display.h **** 
  27:.\source\rte/sc_display.h **** #include "sc_display_type.h"
  28:.\source\rte/sc_display.h **** 
  29:.\source\rte/sc_display.h **** 
  30:.\source\rte/sc_display.h **** /**************************************************************************************************
  31:.\source\rte/sc_display.h **** /* The driver API block																						*/
  32:.\source\rte/sc_display.h **** /**************************************************************************************************
  33:.\source\rte/sc_display.h ****                                                                                                    
  34:.\source\rte/sc_display.h **** /**
  35:.\source\rte/sc_display.h ****  *  Definition of function types for driver interfaces.
  36:.\source\rte/sc_display.h ****  *  I-Port
  37:.\source\rte/sc_display.h ****  */
  38:.\source\rte/sc_display.h **** typedef RC_t (*SC_DISPLAY_driverIn_t)(SC_DISPLAY_data_t * const);
  39:.\source\rte/sc_display.h **** 
  40:.\source\rte/sc_display.h **** /**
  41:.\source\rte/sc_display.h ****  *  Definition of function types for driver interfaces.
  42:.\source\rte/sc_display.h ****  *  O-Port
  43:.\source\rte/sc_display.h ****  */
  44:.\source\rte/sc_display.h **** typedef RC_t (*SC_DISPLAY_driverOut_t)( const SC_DISPLAY_data_t * const);
  45:.\source\rte/sc_display.h **** 
  46:.\source\rte/sc_display.h **** 
  47:.\source\rte/sc_display.h **** /**************************************************************************************************
  48:.\source\rte/sc_display.h **** /* The signal configuration API block																				*/
  49:.\source\rte/sc_display.h **** /**************************************************************************************************
  50:.\source\rte/sc_display.h **** 
  51:.\source\rte/sc_display.h **** /**
  52:.\source\rte/sc_display.h ****  * Instances of the struct SC_DISPLAY_cfg_t represent the signal object configuration.
  53:.\source\rte/sc_display.h ****  */
  54:.\source\rte/sc_display.h **** struct SC_DISPLAY_cfg_s
  55:.\source\rte/sc_display.h **** {
  56:.\source\rte/sc_display.h ****     /**
  57:.\source\rte/sc_display.h ****      * Function pointer to the input driver
  58:.\source\rte/sc_display.h ****      */
  59:.\source\rte/sc_display.h ****     SC_DISPLAY_driverIn_t const inDriver;
  60:.\source\rte/sc_display.h **** 
  61:.\source\rte/sc_display.h ****     /**
  62:.\source\rte/sc_display.h ****      * Function pointer to the output driver table
  63:.\source\rte/sc_display.h ****      */
  64:.\source\rte/sc_display.h ****    SC_DISPLAY_driverOut_t const outDriver;
  65:.\source\rte/sc_display.h ****    
  66:.\source\rte/sc_display.h ****     /**
  67:.\source\rte/sc_display.h ****      * Event onUpdate
  68:.\source\rte/sc_display.h ****      */
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 22


  69:.\source\rte/sc_display.h ****     EventMaskType const evOnUpdate;
  70:.\source\rte/sc_display.h ****     
  71:.\source\rte/sc_display.h ****     
  72:.\source\rte/sc_display.h ****     /**
  73:.\source\rte/sc_display.h ****      * Event onError
  74:.\source\rte/sc_display.h ****      */
  75:.\source\rte/sc_display.h ****     EventMaskType const evOnError;
  76:.\source\rte/sc_display.h ****     
  77:.\source\rte/sc_display.h ****     /**
  78:.\source\rte/sc_display.h ****      * Task Count onUpdate
  79:.\source\rte/sc_display.h ****      */
  80:.\source\rte/sc_display.h ****     size_t const onUpdateTaskCount;
  81:.\source\rte/sc_display.h **** 
  82:.\source\rte/sc_display.h ****     /**
  83:.\source\rte/sc_display.h ****      * Task List onUpdate
  84:.\source\rte/sc_display.h ****      */
  85:.\source\rte/sc_display.h ****     TaskTypeArray* const onUpdateTasks;
  86:.\source\rte/sc_display.h ****     
  87:.\source\rte/sc_display.h ****     /**
  88:.\source\rte/sc_display.h ****      * Task Count onError
  89:.\source\rte/sc_display.h ****      */
  90:.\source\rte/sc_display.h ****     size_t const onErrorTaskCount;
  91:.\source\rte/sc_display.h **** 
  92:.\source\rte/sc_display.h ****     /**
  93:.\source\rte/sc_display.h ****      * Task List onError
  94:.\source\rte/sc_display.h ****      */
  95:.\source\rte/sc_display.h ****     TaskTypeArray* const onErrorTasks;
  96:.\source\rte/sc_display.h **** 	
  97:.\source\rte/sc_display.h **** 	
  98:.\source\rte/sc_display.h **** 	/**
  99:.\source\rte/sc_display.h **** 	 * Ressourse is active? We need an additional boolean as a ressource value 0 is valid.
 100:.\source\rte/sc_display.h **** 	 */
 101:.\source\rte/sc_display.h **** 	 boolean_t const resourceActive;
 102:.\source\rte/sc_display.h **** 	 
 103:.\source\rte/sc_display.h **** 	/**
 104:.\source\rte/sc_display.h **** 	 * Ressourse 
 105:.\source\rte/sc_display.h **** 	 */
 106:.\source\rte/sc_display.h **** 	 ResourceType const resource;
 107:.\source\rte/sc_display.h **** 
 108:.\source\rte/sc_display.h **** };                                                                                                 
 109:.\source\rte/sc_display.h **** typedef const struct SC_DISPLAY_cfg_s SC_DISPLAY_cfg_t;
 110:.\source\rte/sc_display.h ****                               
 111:.\source\rte/sc_display.h **** /**************************************************************************************************
 112:.\source\rte/sc_display.h **** /* The data interface block																							*/
 113:.\source\rte/sc_display.h **** /**************************************************************************************************
 114:.\source\rte/sc_display.h **** 
 115:.\source\rte/sc_display.h ****                                                                                                    
 116:.\source\rte/sc_display.h **** 							  
 117:.\source\rte/sc_display.h **** /**
 118:.\source\rte/sc_display.h ****  * Instances of the struct SC_DISPLAY_t represent the signal objects.
 119:.\source\rte/sc_display.h ****  * A signal object contains the current application value 'value' as well as relevant meta data.
 120:.\source\rte/sc_display.h ****  */
 121:.\source\rte/sc_display.h **** struct SC_DISPLAY_s
 122:.\source\rte/sc_display.h **** {                                                                                                  
 123:.\source\rte/sc_display.h **** 
 124:.\source\rte/sc_display.h **** 	/**
 125:.\source\rte/sc_display.h **** 	 * Data buffer for the application value
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 23


 126:.\source\rte/sc_display.h **** 	 */
 127:.\source\rte/sc_display.h ****     SC_DISPLAY_data_t value;
 128:.\source\rte/sc_display.h **** 
 129:.\source\rte/sc_display.h ****     /**
 130:.\source\rte/sc_display.h ****      * Current signal status
 131:.\source\rte/sc_display.h ****      */
 132:.\source\rte/sc_display.h ****     RTE_signalStatus_t status;
 133:.\source\rte/sc_display.h **** 
 134:.\source\rte/sc_display.h ****     /**
 135:.\source\rte/sc_display.h ****      * Current age of the signal (in calling cycles)
 136:.\source\rte/sc_display.h ****      */
 137:.\source\rte/sc_display.h ****     uint32_t age;
 138:.\source\rte/sc_display.h **** 
 139:.\source\rte/sc_display.h ****     /**
 140:.\source\rte/sc_display.h ****      * Pointer to the signal configuration
 141:.\source\rte/sc_display.h ****      */
 142:.\source\rte/sc_display.h **** 	const SC_DISPLAY_cfg_t * const    pSigCfg;
 143:.\source\rte/sc_display.h **** 
 144:.\source\rte/sc_display.h **** };                                                                                                 
 145:.\source\rte/sc_display.h **** typedef struct SC_DISPLAY_s SC_DISPLAY_t;
 146:.\source\rte/sc_display.h **** 
 147:.\source\rte/sc_display.h **** /**************************************************************************************************
 148:.\source\rte/sc_display.h **** /* Signal initialisation   																							*/
 149:.\source\rte/sc_display.h **** /**************************************************************************************************
 150:.\source\rte/sc_display.h **** 
 151:.\source\rte/sc_display.h **** /**
 152:.\source\rte/sc_display.h ****  * Initializes a signal instance with a passed init value.
 153:.\source\rte/sc_display.h ****  * Depending on the configured conversion or scaling function the raw_value will be calculated.
 154:.\source\rte/sc_display.h ****  * Signal status will change from RTE_SIGNALSTATUS_STARTUP to RTE_SIGNALSTATUS_INITIALIZED.
 155:.\source\rte/sc_display.h ****  *
 156:.\source\rte/sc_display.h ****  * @param  SC_DISPLAY_t * const signal: Pointer to the signal object which will be initialised
 157:.\source\rte/sc_display.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 158:.\source\rte/sc_display.h ****  *
 159:.\source\rte/sc_display.h ****  **/
 160:.\source\rte/sc_display.h **** inline RC_t RTE_SC_DISPLAY_init( SC_DISPLAY_t * const signal )
 161:.\source\rte/sc_display.h **** {                                                                                                  
 162:.\source\rte/sc_display.h **** 
 163:.\source\rte/sc_display.h ****    RC_t ret = RC_SUCCESS;
 164:.\source\rte/sc_display.h **** 
 165:.\source\rte/sc_display.h ****    //Set value and raw value
 166:.\source\rte/sc_display.h ****    signal->value  = SC_DISPLAY_INIT_DATA;
 167:.\source\rte/sc_display.h ****    signal->age    = 0;
 168:.\source\rte/sc_display.h ****    signal->status = RTE_SIGNALSTATUS_INITIALIZED;
 169:.\source\rte/sc_display.h **** 
 170:.\source\rte/sc_display.h ****    return ret;
 171:.\source\rte/sc_display.h **** }
 172:.\source\rte/sc_display.h **** 
 173:.\source\rte/sc_display.h **** /**************************************************************************************************
 174:.\source\rte/sc_display.h **** /* Status and timeout control																						*/
 175:.\source\rte/sc_display.h **** /**************************************************************************************************
 176:.\source\rte/sc_display.h **** 
 177:.\source\rte/sc_display.h **** /**
 178:.\source\rte/sc_display.h ****  *  Returns the current signal status of the passed signal instance.
 179:.\source\rte/sc_display.h ****  *
 180:.\source\rte/sc_display.h ****  * @param  SC_DISPLAY_t * const signal: Pointer to the signal object
 181:.\source\rte/sc_display.h ****  * @return  sig_status_t: The current signal status
 182:.\source\rte/sc_display.h ****  *
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 24


 183:.\source\rte/sc_display.h ****  **/
 184:.\source\rte/sc_display.h **** inline RTE_signalStatus_t RTE_SC_DISPLAY_getStatus( const SC_DISPLAY_t * const signal )
 185:.\source\rte/sc_display.h **** {
 186:.\source\rte/sc_display.h ****    return signal->status;
 187:.\source\rte/sc_display.h **** }
 188:.\source\rte/sc_display.h **** 
 189:.\source\rte/sc_display.h **** 
 190:.\source\rte/sc_display.h **** /**
 191:.\source\rte/sc_display.h ****  *  Sets a new signal status of the passed signal instance by passing the new status.
 192:.\source\rte/sc_display.h ****  *
 193:.\source\rte/sc_display.h ****  * @param  SC_DISPLAY_t * const signal: Pointer to the signal object
 194:.\source\rte/sc_display.h ****  * @param  const sig_status_t status: New signal status
 195:.\source\rte/sc_display.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 196:.\source\rte/sc_display.h ****  *
 197:.\source\rte/sc_display.h ****  */
 198:.\source\rte/sc_display.h **** inline RC_t RTE_SC_DISPLAY_setStatus( SC_DISPLAY_t * const signal, const RTE_signalStatus_t status 
 199:.\source\rte/sc_display.h **** {
 200:.\source\rte/sc_display.h ****    signal->status = status;
 201:.\source\rte/sc_display.h ****    size_t taskNum=0;
 202:.\source\rte/sc_display.h ****    
 203:.\source\rte/sc_display.h ****    //Fire error events in case of invalid state
 204:.\source\rte/sc_display.h ****    if (signal->status == RTE_SIGNALSTATUS_INVALID)
 205:.\source\rte/sc_display.h ****    {
 206:.\source\rte/sc_display.h **** 	    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 207:.\source\rte/sc_display.h **** 		TaskTypeArray* pTaskArray = signal->pSigCfg->onErrorTasks;
 208:.\source\rte/sc_display.h **** 
 209:.\source\rte/sc_display.h **** 		if (0 != signal->pSigCfg->evOnError && NULL != pTaskArray){
 210:.\source\rte/sc_display.h **** 			for( taskNum=0 ; taskNum < signal->pSigCfg->onErrorTaskCount ;taskNum++){
 211:.\source\rte/sc_display.h **** 				TaskType task = (*pTaskArray)[taskNum];
 212:.\source\rte/sc_display.h **** 				SetEvent( task, signal->pSigCfg->evOnError);
 213:.\source\rte/sc_display.h **** 			}
 214:.\source\rte/sc_display.h **** 		}
 215:.\source\rte/sc_display.h ****    }
 216:.\source\rte/sc_display.h ****    
 217:.\source\rte/sc_display.h ****    return RC_SUCCESS;
 218:.\source\rte/sc_display.h **** }
 219:.\source\rte/sc_display.h **** 
 220:.\source\rte/sc_display.h **** 
 221:.\source\rte/sc_display.h **** /**
 222:.\source\rte/sc_display.h ****  * Returns the count of refreshing trials (refresh, set or set_raw) that failed.
 223:.\source\rte/sc_display.h ****  * Prerquisite: The signal is refreshed cyclically
 224:.\source\rte/sc_display.h ****  *
 225:.\source\rte/sc_display.h ****  * @param  SC_DISPLAY_t * const signal: Pointer to the signal object
 226:.\source\rte/sc_display.h ****  * @return uint32_t: Number of cycles since the signal has been updated for the last time
 227:.\source\rte/sc_display.h ****  */
 228:.\source\rte/sc_display.h **** inline uint32_t RTE_SC_DISPLAY_getAge( const SC_DISPLAY_t * const signal )
 229:.\source\rte/sc_display.h **** {
 230:.\source\rte/sc_display.h ****    return signal->age;
 231:.\source\rte/sc_display.h **** }
 232:.\source\rte/sc_display.h **** 
 233:.\source\rte/sc_display.h **** /**
 234:.\source\rte/sc_display.h ****  * Should be called by application or driver if no new value can be provided.
 235:.\source\rte/sc_display.h ****  * @param  SC_DISPLAY_t * const signal: Pointer to the signal object
 236:.\source\rte/sc_display.h ****  * @param uint32_t increment: incrementvalue, typically in [ms]
 237:.\source\rte/sc_display.h ****  * @return void
 238:.\source\rte/sc_display.h ****  */
 239:.\source\rte/sc_display.h **** inline void RTE_SC_DISPLAY_incAge(  SC_DISPLAY_t * const signal , uint32_t increment)
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 25


 240:.\source\rte/sc_display.h **** {
 241:.\source\rte/sc_display.h **** 	   //Hack....
 242:.\source\rte/sc_display.h **** 	   if ( 0xFFFF0000 > (signal->age + increment) )
 243:.\source\rte/sc_display.h **** 	   {
 244:.\source\rte/sc_display.h **** 	      signal->age += increment;
 245:.\source\rte/sc_display.h **** 	   }
 246:.\source\rte/sc_display.h **** }
 247:.\source\rte/sc_display.h **** 
 248:.\source\rte/sc_display.h **** 
 249:.\source\rte/sc_display.h **** /**************************************************************************************************
 250:.\source\rte/sc_display.h **** /* Application Data read/write Interface																			*/
 251:.\source\rte/sc_display.h **** /**************************************************************************************************
 252:.\source\rte/sc_display.h **** 
 253:.\source\rte/sc_display.h **** /**
 254:.\source\rte/sc_display.h ****  * Returns the current application value as pointer to the signal payload.
 255:.\source\rte/sc_display.h ****  * Careful: This is not threadsafe!!!
 256:.\source\rte/sc_display.h ****  *
 257:.\source\rte/sc_display.h ****  * @param  SC_DISPLAY_t * const signal: Pointer to the signal object
 258:.\source\rte/sc_display.h ****  * @return sc_display_data_t*: pointer to the current value of the application data buffer
 259:.\source\rte/sc_display.h ****  *
 260:.\source\rte/sc_display.h ****  **/
 261:.\source\rte/sc_display.h **** inline SC_DISPLAY_data_t* RTE_SC_DISPLAY_getPtr( SC_DISPLAY_t * const signal )
 262:.\source\rte/sc_display.h **** {               
 263:.\source\rte/sc_display.h ****    //Todo: Critical region cannot be protected using return values																						
 264:.\source\rte/sc_display.h ****    return &(signal->value);                                                                        
 265:.\source\rte/sc_display.h **** }
 266:.\source\rte/sc_display.h **** 
 267:.\source\rte/sc_display.h **** /**
 268:.\source\rte/sc_display.h ****  * Returns the current application value of the passed signal instance.
 269:.\source\rte/sc_display.h ****  *
 270:.\source\rte/sc_display.h ****  * @param  SC_DISPLAY_t * const signal: Pointer to the signal object
 271:.\source\rte/sc_display.h ****  * @return sc_display_data_t: current value of the application data buffer
 272:.\source\rte/sc_display.h ****  *
 273:.\source\rte/sc_display.h ****  **/
 274:.\source\rte/sc_display.h **** inline SC_DISPLAY_data_t RTE_SC_DISPLAY_get( const SC_DISPLAY_t * const signal )
 275:.\source\rte/sc_display.h **** {               
 276:.\source\rte/sc_display.h ****    //Todo: Critical region cannot be protected using return values																						
 277:.\source\rte/sc_display.h ****    return signal->value;                                                                           
 278:.\source\rte/sc_display.h **** }                                                                                                  
 279:.\source\rte/sc_display.h ****                                                                                                    
 280:.\source\rte/sc_display.h **** /**
 281:.\source\rte/sc_display.h ****  * Returns the current application value of the passed signal instance threadsafe.
 282:.\source\rte/sc_display.h ****  *
 283:.\source\rte/sc_display.h ****  * @param  SC_DISPLAY_t * const signal: Pointer to the signal object
 284:.\source\rte/sc_display.h ****  * @param  SC_DISPLAY_data_t* data: Pointer to the return data Pointer to the signal object
 285:.\source\rte/sc_display.h ****  * @return RC_SUCCESS
 286:.\source\rte/sc_display.h ****  *
 287:.\source\rte/sc_display.h ****  **/
 288:.\source\rte/sc_display.h **** inline RC_t RTE_SC_DISPLAY_getThreadSafe( const SC_DISPLAY_t * const signal, SC_DISPLAY_data_t * co
 289:.\source\rte/sc_display.h **** {    
 290:.\source\rte/sc_display.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 291:.\source\rte/sc_display.h ****    *data = signal->value;
 292:.\source\rte/sc_display.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);        
 293:.\source\rte/sc_display.h **** 
 294:.\source\rte/sc_display.h ****    return RC_SUCCESS;                                                                   
 295:.\source\rte/sc_display.h ****    
 296:.\source\rte/sc_display.h **** }                                                                                                  
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 26


 297:.\source\rte/sc_display.h ****                                                                                                    
 298:.\source\rte/sc_display.h **** /**
 299:.\source\rte/sc_display.h ****  * Sets a new application value to the passed signal instance by passing the new value.
 300:.\source\rte/sc_display.h ****  * The corresponding driver raw value will be calculated immediately by using the default conversio
 301:.\source\rte/sc_display.h ****  * signal specific scaling function.
 302:.\source\rte/sc_display.h ****  * The signal age will be set to 0 and the new status will be 'RTE_SIGNALSTATUS_VALID'.
 303:.\source\rte/sc_display.h ****  *
 304:.\source\rte/sc_display.h ****  * @param  SC_DISPLAY_t * const signal: Pointer to the signal object
 305:.\source\rte/sc_display.h ****  * @param  sc_display_data_t const value: value for the application data buffer
 306:.\source\rte/sc_display.h ****  * @return RC_t: standard return code, currently only RC_SUCCESS
 307:.\source\rte/sc_display.h ****  *
 308:.\source\rte/sc_display.h ****  **/
 309:.\source\rte/sc_display.h **** inline RC_t RTE_SC_DISPLAY_set(SC_DISPLAY_t * const signal, const SC_DISPLAY_data_t value  )
 310:.\source\rte/sc_display.h **** {
 311:.\source\rte/sc_display.h **** 
 312:.\source\rte/sc_display.h ****    RC_t ret = RC_SUCCESS;
 313:.\source\rte/sc_display.h ****    size_t taskNum=0;
 314:.\source\rte/sc_display.h **** 
 315:.\source\rte/sc_display.h **** 
 316:.\source\rte/sc_display.h ****    if (TRUE == signal->pSigCfg->resourceActive) GetResource(signal->pSigCfg->resource);
 331              		.loc 4 316 0
 332 003a 164E     		ldr	r6, .L30+4
 333 003c 376A     		ldr	r7, [r6, #32]
 317:.\source\rte/sc_display.h ****    signal->value  = value;
 334              		.loc 4 317 0
 335 003e 3446     		mov	r4, r6
 336 0040 6D46     		mov	r5, sp
 337 0042 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 338 0044 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 339 0046 95E80300 		ldmia	r5, {r0, r1}
 340 004a 84E80300 		stmia	r4, {r0, r1}
 318:.\source\rte/sc_display.h ****    signal->age    = 0;
 341              		.loc 4 318 0
 342 004e 0023     		movs	r3, #0
 343 0050 F361     		str	r3, [r6, #28]
 319:.\source\rte/sc_display.h ****    signal->status = RTE_SIGNALSTATUS_VALID;
 344              		.loc 4 319 0
 345 0052 0223     		movs	r3, #2
 346 0054 3376     		strb	r3, [r6, #24]
 320:.\source\rte/sc_display.h ****    if (TRUE == signal->pSigCfg->resourceActive) ReleaseResource(signal->pSigCfg->resource);
 321:.\source\rte/sc_display.h **** 
 322:.\source\rte/sc_display.h ****    //Pointer to the Taskarray, containing the tasks receiving the onUpdate events
 323:.\source\rte/sc_display.h ****    TaskTypeArray* pTaskArray = signal->pSigCfg->onUpdateTasks;
 347              		.loc 4 323 0
 348 0056 7D69     		ldr	r5, [r7, #20]
 349              	.LVL39:
 324:.\source\rte/sc_display.h **** 
 325:.\source\rte/sc_display.h ****    if (0 != signal->pSigCfg->evOnUpdate && NULL != pTaskArray){
 350              		.loc 4 325 0
 351 0058 BB68     		ldr	r3, [r7, #8]
 352 005a 73B1     		cbz	r3, .L24
 353 005c 3DB9     		cbnz	r5, .L28
 354 005e 0CE0     		b	.L24
 355              	.LVL40:
 356              	.L26:
 357              	.LBB45:
 326:.\source\rte/sc_display.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 27


 327:.\source\rte/sc_display.h **** 		  
 328:.\source\rte/sc_display.h ****           TaskType task = (*pTaskArray)[taskNum];
 329:.\source\rte/sc_display.h **** 	      SetEvent( task, signal->pSigCfg->evOnUpdate);
 358              		.loc 4 329 0
 359 0060 9968     		ldr	r1, [r3, #8]
 360 0062 55F82400 		ldr	r0, [r5, r4, lsl #2]
 361 0066 FFF7FEFF 		bl	EE_oo_SetEvent
 362              	.LVL41:
 363              	.LBE45:
 326:.\source\rte/sc_display.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 364              		.loc 4 326 0
 365 006a 0134     		adds	r4, r4, #1
 366              	.LVL42:
 367 006c 00E0     		b	.L25
 368              	.LVL43:
 369              	.L28:
 325:.\source\rte/sc_display.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 370              		.loc 4 325 0
 371 006e 0024     		movs	r4, #0
 372              	.LVL44:
 373              	.L25:
 326:.\source\rte/sc_display.h ****       for( taskNum=0 ; taskNum < signal->pSigCfg->onUpdateTaskCount ;taskNum++){
 374              		.loc 4 326 0
 375 0070 084B     		ldr	r3, .L30+4
 376 0072 1B6A     		ldr	r3, [r3, #32]
 377 0074 1A69     		ldr	r2, [r3, #16]
 378 0076 9442     		cmp	r4, r2
 379 0078 F2D3     		bcc	.L26
 380              	.LVL45:
 381              	.L24:
 382              	.LBE44:
 383              	.LBE43:
 384              	.LBB46:
 385              	.LBB47:
 330:.\source\rte/sc_display.h ****       }
 331:.\source\rte/sc_display.h ****    }
 332:.\source\rte/sc_display.h **** 
 333:.\source\rte/sc_display.h ****    return ret;
 334:.\source\rte/sc_display.h **** }                                                                                                  
 335:.\source\rte/sc_display.h ****                                                                                                    
 336:.\source\rte/sc_display.h ****                                                                                                    
 337:.\source\rte/sc_display.h **** /**************************************************************************************************
 338:.\source\rte/sc_display.h **** /* Call functions to the connected drivers																			*/
 339:.\source\rte/sc_display.h **** /**************************************************************************************************
 340:.\source\rte/sc_display.h **** 
 341:.\source\rte/sc_display.h ****                                                                                                    
 342:.\source\rte/sc_display.h **** /**
 343:.\source\rte/sc_display.h ****  *  Calls the connected driver interface to get a new value.
 344:.\source\rte/sc_display.h ****  *
 345:.\source\rte/sc_display.h ****  * @param SC_DISPLAY_t * const signal: Pointer to the signal object
 346:.\source\rte/sc_display.h ****  * @return  RC_t: Return value of the driver call
 347:.\source\rte/sc_display.h ****  *
 348:.\source\rte/sc_display.h ****  */
 349:.\source\rte/sc_display.h **** inline RC_t RTE_SC_DISPLAY_pullPort( SC_DISPLAY_t * const signal )
 350:.\source\rte/sc_display.h **** {                                                                                                  
 351:.\source\rte/sc_display.h ****    RC_t ret = RC_SUCCESS;
 352:.\source\rte/sc_display.h **** 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 28


 353:.\source\rte/sc_display.h ****                                                                                                    
 354:.\source\rte/sc_display.h ****    if ( NULL != signal->pSigCfg->inDriver )
 355:.\source\rte/sc_display.h ****    {
 356:.\source\rte/sc_display.h **** 	  SC_DISPLAY_data_t value = signal->value;
 357:.\source\rte/sc_display.h ****       ret = signal->pSigCfg->inDriver(&value);
 358:.\source\rte/sc_display.h ****                                                                                                    
 359:.\source\rte/sc_display.h ****       if ( ret == RC_SUCCESS )                                                                     
 360:.\source\rte/sc_display.h ****       {
 361:.\source\rte/sc_display.h ****     	  //Critical Section
 362:.\source\rte/sc_display.h ****     	  RTE_SC_DISPLAY_set(signal, value);
 363:.\source\rte/sc_display.h ****       }
 364:.\source\rte/sc_display.h ****       else
 365:.\source\rte/sc_display.h ****       {
 366:.\source\rte/sc_display.h **** 		  //Signal is invalid. Error event (if present) will be fired
 367:.\source\rte/sc_display.h **** 		  RTE_SC_DISPLAY_setStatus(signal, RTE_SIGNALSTATUS_INVALID);
 368:.\source\rte/sc_display.h ****       }
 369:.\source\rte/sc_display.h **** 
 370:.\source\rte/sc_display.h ****    }                                                                                               
 371:.\source\rte/sc_display.h ****                                                                                                    
 372:.\source\rte/sc_display.h ****    return ret;                                                                                     
 373:.\source\rte/sc_display.h **** }                                                                                                  
 374:.\source\rte/sc_display.h ****                                                                                                    
 375:.\source\rte/sc_display.h **** /**
 376:.\source\rte/sc_display.h ****  *  Calls the connected driver interfaces to send a value. Value will not be sent if it is INVALID.
 377:.\source\rte/sc_display.h ****  *
 378:.\source\rte/sc_display.h ****  * @param SC_DISPLAY_t * const signal: Pointer to the signal object
 379:.\source\rte/sc_display.h ****  * @return  RC_t: Return value of the driver call
 380:.\source\rte/sc_display.h ****  *
 381:.\source\rte/sc_display.h ****  **/
 382:.\source\rte/sc_display.h **** inline RC_t RTE_SC_DISPLAY_pushPort( const SC_DISPLAY_t * const signal )
 383:.\source\rte/sc_display.h **** {                                                                                                  
 384:.\source\rte/sc_display.h ****    RC_t ret = RC_ERROR;
 385:.\source\rte/sc_display.h **** 
 386:.\source\rte/sc_display.h ****    if (RTE_SIGNALSTATUS_VALID == signal->status)
 386              		.loc 4 386 0
 387 007a 064B     		ldr	r3, .L30+4
 388 007c 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 389 007e 022B     		cmp	r3, #2
 390 0080 03D1     		bne	.L23
 387:.\source\rte/sc_display.h ****    {
 388:.\source\rte/sc_display.h **** 	   ret = signal->pSigCfg->outDriver(&(signal->value));
 391              		.loc 4 388 0
 392 0082 0448     		ldr	r0, .L30+4
 393 0084 036A     		ldr	r3, [r0, #32]
 394 0086 5B68     		ldr	r3, [r3, #4]
 395 0088 9847     		blx	r3
 396              	.LVL46:
 397              	.L23:
 398              	.LBE47:
 399              	.LBE46:
 146:source\asw/swc_clock.c ****     
 147:source\asw/swc_clock.c ****     RTE_SC_DISPLAY_set(&SO_DISPLAYONTFT_signal, tft_config);
 148:source\asw/swc_clock.c ****     RTE_SC_DISPLAY_pushPort(&SO_DISPLAYONTFT_signal);
 149:source\asw/swc_clock.c ****     
 150:source\asw/swc_clock.c ****     /* USER CODE END CLOCK_display_run */
 151:source\asw/swc_clock.c **** }
 400              		.loc 1 151 0
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 29


 401 008a 13B0     		add	sp, sp, #76
 402              		.cfi_def_cfa_offset 20
 403              		@ sp needed
 404 008c F0BD     		pop	{r4, r5, r6, r7, pc}
 405              	.L31:
 406 008e 00BF     		.align	2
 407              	.L30:
 408 0090 00000000 		.word	SO_CONTROL_signal
 409 0094 00000000 		.word	SO_DISPLAYONTFT_signal
 410              		.cfi_endproc
 411              	.LFE146:
 412              		.size	CLOCK_display_run, .-CLOCK_display_run
 413              		.text
 414              	.Letext0:
 415              		.file 5 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 416              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 417              		.file 7 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 418              		.file 8 "Generated_Source\\PSoC5/ErikaOS_common_ee_types.inc"
 419              		.file 9 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_cpu.inc"
 420              		.file 10 "Generated_Source\\PSoC5/ErikaOS_ee_oo_common.inc"
 421              		.file 11 ".\\source\\bsw/global.h"
 422              		.file 12 ".\\source\\rte/rte_types.h"
 423              		.file 13 ".\\source\\rte/rte.h"
 424              		.file 14 ".\\source\\bsw\\tft/tft.h"
 425              		.file 15 ".\\source\\asw/clock_type.h"
 426              		.file 16 ".\\source\\asw/statemachine.h"
 427              		.file 17 ".\\source\\rte/sc_input_type.h"
 428              		.file 18 ".\\source\\rte/sc_control_type.h"
 429              		.file 19 ".\\source\\rte/sc_display_type.h"
 430              		.file 20 "Generated_Source\\PSoC5/ErikaOS_ee_oo_intfunc.inc"
 431              		.file 21 "Generated_Source\\PSoC5/ErikaOS_cortex_mx_ee_context.inc"
 432              		.file 22 "Generated_Source\\PSoC5/ErikaOS_common_ee_primitives.inc"
 433              		.file 23 "Generated_Source\\PSoC5/core_cm3.h"
 434              		.file 24 ".\\source\\rte/sp_common.h"
 435              		.file 25 "Generated_Source\\PSoC5/ErikaOS_ee_oo_kernel.inc"
 436              		.file 26 ".\\source\\asw/clock.h"
 437              		.section	.debug_info,"",%progbits
 438              	.Ldebug_info0:
 439 0000 DD0F0000 		.4byte	0xfdd
 440 0004 0400     		.2byte	0x4
 441 0006 00000000 		.4byte	.Ldebug_abbrev0
 442 000a 04       		.byte	0x4
 443 000b 01       		.uleb128 0x1
 444 000c E8080000 		.4byte	.LASF206
 445 0010 0C       		.byte	0xc
 446 0011 41050000 		.4byte	.LASF207
 447 0015 8D030000 		.4byte	.LASF208
 448 0019 00000000 		.4byte	.Ldebug_ranges0+0
 449 001d 00000000 		.4byte	0
 450 0021 00000000 		.4byte	.Ldebug_line0
 451 0025 02       		.uleb128 0x2
 452 0026 01       		.byte	0x1
 453 0027 06       		.byte	0x6
 454 0028 DC010000 		.4byte	.LASF0
 455 002c 03       		.uleb128 0x3
 456 002d AB000000 		.4byte	.LASF4
 457 0031 05       		.byte	0x5
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 30


 458 0032 1D       		.byte	0x1d
 459 0033 37000000 		.4byte	0x37
 460 0037 02       		.uleb128 0x2
 461 0038 01       		.byte	0x1
 462 0039 08       		.byte	0x8
 463 003a FE070000 		.4byte	.LASF1
 464 003e 02       		.uleb128 0x2
 465 003f 02       		.byte	0x2
 466 0040 05       		.byte	0x5
 467 0041 21000000 		.4byte	.LASF2
 468 0045 02       		.uleb128 0x2
 469 0046 02       		.byte	0x2
 470 0047 07       		.byte	0x7
 471 0048 F4020000 		.4byte	.LASF3
 472 004c 03       		.uleb128 0x3
 473 004d 7E050000 		.4byte	.LASF5
 474 0051 05       		.byte	0x5
 475 0052 3F       		.byte	0x3f
 476 0053 57000000 		.4byte	0x57
 477 0057 02       		.uleb128 0x2
 478 0058 04       		.byte	0x4
 479 0059 05       		.byte	0x5
 480 005a 52020000 		.4byte	.LASF6
 481 005e 03       		.uleb128 0x3
 482 005f 49030000 		.4byte	.LASF7
 483 0063 05       		.byte	0x5
 484 0064 41       		.byte	0x41
 485 0065 69000000 		.4byte	0x69
 486 0069 02       		.uleb128 0x2
 487 006a 04       		.byte	0x4
 488 006b 07       		.byte	0x7
 489 006c 2F040000 		.4byte	.LASF8
 490 0070 02       		.uleb128 0x2
 491 0071 08       		.byte	0x8
 492 0072 05       		.byte	0x5
 493 0073 CE010000 		.4byte	.LASF9
 494 0077 02       		.uleb128 0x2
 495 0078 08       		.byte	0x8
 496 0079 07       		.byte	0x7
 497 007a 96040000 		.4byte	.LASF10
 498 007e 04       		.uleb128 0x4
 499 007f 04       		.byte	0x4
 500 0080 05       		.byte	0x5
 501 0081 696E7400 		.ascii	"int\000"
 502 0085 02       		.uleb128 0x2
 503 0086 04       		.byte	0x4
 504 0087 07       		.byte	0x7
 505 0088 D2030000 		.4byte	.LASF11
 506 008c 03       		.uleb128 0x3
 507 008d A20B0000 		.4byte	.LASF12
 508 0091 06       		.byte	0x6
 509 0092 18       		.byte	0x18
 510 0093 2C000000 		.4byte	0x2c
 511 0097 03       		.uleb128 0x3
 512 0098 F6070000 		.4byte	.LASF13
 513 009c 06       		.byte	0x6
 514 009d 2C       		.byte	0x2c
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 31


 515 009e 4C000000 		.4byte	0x4c
 516 00a2 03       		.uleb128 0x3
 517 00a3 B1090000 		.4byte	.LASF14
 518 00a7 06       		.byte	0x6
 519 00a8 30       		.byte	0x30
 520 00a9 5E000000 		.4byte	0x5e
 521 00ad 02       		.uleb128 0x2
 522 00ae 04       		.byte	0x4
 523 00af 04       		.byte	0x4
 524 00b0 D4090000 		.4byte	.LASF15
 525 00b4 02       		.uleb128 0x2
 526 00b5 08       		.byte	0x8
 527 00b6 04       		.byte	0x4
 528 00b7 B8020000 		.4byte	.LASF16
 529 00bb 02       		.uleb128 0x2
 530 00bc 01       		.byte	0x1
 531 00bd 08       		.byte	0x8
 532 00be E9090000 		.4byte	.LASF17
 533 00c2 03       		.uleb128 0x3
 534 00c3 81000000 		.4byte	.LASF18
 535 00c7 07       		.byte	0x7
 536 00c8 D8       		.byte	0xd8
 537 00c9 85000000 		.4byte	0x85
 538 00cd 02       		.uleb128 0x2
 539 00ce 08       		.byte	0x8
 540 00cf 04       		.byte	0x4
 541 00d0 20060000 		.4byte	.LASF19
 542 00d4 02       		.uleb128 0x2
 543 00d5 04       		.byte	0x4
 544 00d6 07       		.byte	0x7
 545 00d7 F3050000 		.4byte	.LASF20
 546 00db 03       		.uleb128 0x3
 547 00dc 990B0000 		.4byte	.LASF21
 548 00e0 08       		.byte	0x8
 549 00e1 53       		.byte	0x53
 550 00e2 7E000000 		.4byte	0x7e
 551 00e6 03       		.uleb128 0x3
 552 00e7 800B0000 		.4byte	.LASF22
 553 00eb 08       		.byte	0x8
 554 00ec 54       		.byte	0x54
 555 00ed 85000000 		.4byte	0x85
 556 00f1 03       		.uleb128 0x3
 557 00f2 0B040000 		.4byte	.LASF23
 558 00f6 09       		.byte	0x9
 559 00f7 4D       		.byte	0x4d
 560 00f8 E6000000 		.4byte	0xe6
 561 00fc 03       		.uleb128 0x3
 562 00fd 260C0000 		.4byte	.LASF24
 563 0101 09       		.byte	0x9
 564 0102 4F       		.byte	0x4f
 565 0103 E6000000 		.4byte	0xe6
 566 0107 03       		.uleb128 0x3
 567 0108 80030000 		.4byte	.LASF25
 568 010c 09       		.byte	0x9
 569 010d 78       		.byte	0x78
 570 010e DB000000 		.4byte	0xdb
 571 0112 05       		.uleb128 0x5
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 32


 572 0113 B8040000 		.4byte	.LASF26
 573 0117 0A       		.byte	0xa
 574 0118 F701     		.2byte	0x1f7
 575 011a 07010000 		.4byte	0x107
 576 011e 05       		.uleb128 0x5
 577 011f E8010000 		.4byte	.LASF27
 578 0123 0A       		.byte	0xa
 579 0124 2C02     		.2byte	0x22c
 580 0126 F1000000 		.4byte	0xf1
 581 012a 03       		.uleb128 0x3
 582 012b 33060000 		.4byte	.LASF28
 583 012f 0B       		.byte	0xb
 584 0130 9C       		.byte	0x9c
 585 0131 37000000 		.4byte	0x37
 586 0135 06       		.uleb128 0x6
 587 0136 01       		.byte	0x1
 588 0137 25000000 		.4byte	0x25
 589 013b 0B       		.byte	0xb
 590 013c CF       		.byte	0xcf
 591 013d DE010000 		.4byte	0x1de
 592 0141 07       		.uleb128 0x7
 593 0142 59040000 		.4byte	.LASF29
 594 0146 00       		.byte	0
 595 0147 08       		.uleb128 0x8
 596 0148 43070000 		.4byte	.LASF30
 597 014c 7F       		.sleb128 -1
 598 014d 08       		.uleb128 0x8
 599 014e 41040000 		.4byte	.LASF31
 600 0152 7E       		.sleb128 -2
 601 0153 08       		.uleb128 0x8
 602 0154 66080000 		.4byte	.LASF32
 603 0158 7D       		.sleb128 -3
 604 0159 08       		.uleb128 0x8
 605 015a 7E0A0000 		.4byte	.LASF33
 606 015e 7C       		.sleb128 -4
 607 015f 08       		.uleb128 0x8
 608 0160 8A0B0000 		.4byte	.LASF34
 609 0164 7B       		.sleb128 -5
 610 0165 08       		.uleb128 0x8
 611 0166 450A0000 		.4byte	.LASF35
 612 016a 7A       		.sleb128 -6
 613 016b 08       		.uleb128 0x8
 614 016c B8060000 		.4byte	.LASF36
 615 0170 79       		.sleb128 -7
 616 0171 08       		.uleb128 0x8
 617 0172 D9040000 		.4byte	.LASF37
 618 0176 78       		.sleb128 -8
 619 0177 08       		.uleb128 0x8
 620 0178 25020000 		.4byte	.LASF38
 621 017c 77       		.sleb128 -9
 622 017d 08       		.uleb128 0x8
 623 017e AF070000 		.4byte	.LASF39
 624 0182 76       		.sleb128 -10
 625 0183 08       		.uleb128 0x8
 626 0184 25010000 		.4byte	.LASF40
 627 0188 75       		.sleb128 -11
 628 0189 08       		.uleb128 0x8
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 33


 629 018a A1020000 		.4byte	.LASF41
 630 018e 74       		.sleb128 -12
 631 018f 08       		.uleb128 0x8
 632 0190 1D040000 		.4byte	.LASF42
 633 0194 73       		.sleb128 -13
 634 0195 08       		.uleb128 0x8
 635 0196 C1090000 		.4byte	.LASF43
 636 019a 72       		.sleb128 -14
 637 019b 08       		.uleb128 0x8
 638 019c CC000000 		.4byte	.LASF44
 639 01a0 71       		.sleb128 -15
 640 01a1 08       		.uleb128 0x8
 641 01a2 73060000 		.4byte	.LASF45
 642 01a6 70       		.sleb128 -16
 643 01a7 08       		.uleb128 0x8
 644 01a8 CA060000 		.4byte	.LASF46
 645 01ac 6F       		.sleb128 -17
 646 01ad 08       		.uleb128 0x8
 647 01ae 1E050000 		.4byte	.LASF47
 648 01b2 6E       		.sleb128 -18
 649 01b3 08       		.uleb128 0x8
 650 01b4 6B050000 		.4byte	.LASF48
 651 01b8 6D       		.sleb128 -19
 652 01b9 08       		.uleb128 0x8
 653 01ba 58050000 		.4byte	.LASF49
 654 01be 6C       		.sleb128 -20
 655 01bf 08       		.uleb128 0x8
 656 01c0 13010000 		.4byte	.LASF50
 657 01c4 6B       		.sleb128 -21
 658 01c5 08       		.uleb128 0x8
 659 01c6 A1060000 		.4byte	.LASF51
 660 01ca 6A       		.sleb128 -22
 661 01cb 08       		.uleb128 0x8
 662 01cc 62000000 		.4byte	.LASF52
 663 01d0 69       		.sleb128 -23
 664 01d1 08       		.uleb128 0x8
 665 01d2 FA030000 		.4byte	.LASF53
 666 01d6 68       		.sleb128 -24
 667 01d7 08       		.uleb128 0x8
 668 01d8 240A0000 		.4byte	.LASF54
 669 01dc 67       		.sleb128 -25
 670 01dd 00       		.byte	0
 671 01de 03       		.uleb128 0x3
 672 01df C7000000 		.4byte	.LASF55
 673 01e3 0B       		.byte	0xb
 674 01e4 EA       		.byte	0xea
 675 01e5 35010000 		.4byte	0x135
 676 01e9 03       		.uleb128 0x3
 677 01ea CF0A0000 		.4byte	.LASF56
 678 01ee 0C       		.byte	0xc
 679 01ef 19       		.byte	0x19
 680 01f0 F4010000 		.4byte	0x1f4
 681 01f4 09       		.uleb128 0x9
 682 01f5 12010000 		.4byte	0x112
 683 01f9 FF010000 		.4byte	0x1ff
 684 01fd 0A       		.uleb128 0xa
 685 01fe 00       		.byte	0
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 34


 686 01ff 03       		.uleb128 0x3
 687 0200 4F040000 		.4byte	.LASF57
 688 0204 0C       		.byte	0xc
 689 0205 21       		.byte	0x21
 690 0206 1E010000 		.4byte	0x11e
 691 020a 03       		.uleb128 0x3
 692 020b 98000000 		.4byte	.LASF58
 693 020f 0C       		.byte	0xc
 694 0210 2D       		.byte	0x2d
 695 0211 A2000000 		.4byte	0xa2
 696 0215 06       		.uleb128 0x6
 697 0216 01       		.byte	0x1
 698 0217 37000000 		.4byte	0x37
 699 021b 0D       		.byte	0xd
 700 021c 59       		.byte	0x59
 701 021d 3A020000 		.4byte	0x23a
 702 0221 07       		.uleb128 0x7
 703 0222 5B020000 		.4byte	.LASF59
 704 0226 00       		.byte	0
 705 0227 07       		.uleb128 0x7
 706 0228 87010000 		.4byte	.LASF60
 707 022c 01       		.byte	0x1
 708 022d 07       		.uleb128 0x7
 709 022e CD020000 		.4byte	.LASF61
 710 0232 02       		.byte	0x2
 711 0233 07       		.uleb128 0x7
 712 0234 FC050000 		.4byte	.LASF62
 713 0238 03       		.byte	0x3
 714 0239 00       		.byte	0
 715 023a 03       		.uleb128 0x3
 716 023b 660A0000 		.4byte	.LASF63
 717 023f 0D       		.byte	0xd
 718 0240 5E       		.byte	0x5e
 719 0241 15020000 		.4byte	0x215
 720 0245 06       		.uleb128 0x6
 721 0246 02       		.byte	0x2
 722 0247 45000000 		.4byte	0x45
 723 024b 0E       		.byte	0xe
 724 024c 5C       		.byte	0x5c
 725 024d E3020000 		.4byte	0x2e3
 726 0251 0B       		.uleb128 0xb
 727 0252 A5000000 		.4byte	.LASF64
 728 0256 FFFF     		.2byte	0xffff
 729 0258 07       		.uleb128 0x7
 730 0259 EE090000 		.4byte	.LASF65
 731 025d 00       		.byte	0
 732 025e 0B       		.uleb128 0xb
 733 025f 0A0A0000 		.4byte	.LASF66
 734 0263 00F8     		.2byte	0xf800
 735 0265 0B       		.uleb128 0xb
 736 0266 4C070000 		.4byte	.LASF67
 737 026a 1FF8     		.2byte	0xf81f
 738 026c 0B       		.uleb128 0xb
 739 026d 93000000 		.4byte	.LASF68
 740 0271 FF07     		.2byte	0x7ff
 741 0273 0B       		.uleb128 0xb
 742 0274 90040000 		.4byte	.LASF69
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 35


 743 0278 E0FF     		.2byte	0xffe0
 744 027a 0C       		.uleb128 0xc
 745 027b 52454400 		.ascii	"RED\000"
 746 027f 1F       		.byte	0x1f
 747 0280 0B       		.uleb128 0xb
 748 0281 79000000 		.4byte	.LASF70
 749 0285 1FF8     		.2byte	0xf81f
 750 0287 0B       		.uleb128 0xb
 751 0288 1E0A0000 		.4byte	.LASF71
 752 028c E007     		.2byte	0x7e0
 753 028e 0B       		.uleb128 0xb
 754 028f 93090000 		.4byte	.LASF72
 755 0293 E0FF     		.2byte	0xffe0
 756 0295 0B       		.uleb128 0xb
 757 0296 9A020000 		.4byte	.LASF73
 758 029a FF07     		.2byte	0x7ff
 759 029c 0B       		.uleb128 0xb
 760 029d 74020000 		.4byte	.LASF74
 761 02a1 3D02     		.2byte	0x23d
 762 02a3 0B       		.uleb128 0xb
 763 02a4 60030000 		.4byte	.LASF75
 764 02a8 3FE0     		.2byte	0xe03f
 765 02aa 0B       		.uleb128 0xb
 766 02ab B3060000 		.4byte	.LASF76
 767 02af 210C     		.2byte	0xc21
 768 02b1 0B       		.uleb128 0xb
 769 02b2 24070000 		.4byte	.LASF77
 770 02b6 89F3     		.2byte	0xf389
 771 02b8 0B       		.uleb128 0xb
 772 02b9 88050000 		.4byte	.LASF78
 773 02bd BE3E     		.2byte	0x3ebe
 774 02bf 0B       		.uleb128 0xb
 775 02c0 E90B0000 		.4byte	.LASF79
 776 02c4 2A1A     		.2byte	0x1a2a
 777 02c6 0B       		.uleb128 0xb
 778 02c7 5B0A0000 		.4byte	.LASF80
 779 02cb 21F8     		.2byte	0xf821
 780 02cd 0B       		.uleb128 0xb
 781 02ce 66030000 		.4byte	.LASF81
 782 02d2 6318     		.2byte	0x1863
 783 02d4 0B       		.uleb128 0xb
 784 02d5 14050000 		.4byte	.LASF82
 785 02d9 658A     		.2byte	0x8a65
 786 02db 0B       		.uleb128 0xb
 787 02dc 2C060000 		.4byte	.LASF83
 788 02e0 D448     		.2byte	0x48d4
 789 02e2 00       		.byte	0
 790 02e3 03       		.uleb128 0x3
 791 02e4 7A010000 		.4byte	.LASF84
 792 02e8 0E       		.byte	0xe
 793 02e9 72       		.byte	0x72
 794 02ea 45020000 		.4byte	0x245
 795 02ee 06       		.uleb128 0x6
 796 02ef 01       		.byte	0x1
 797 02f0 37000000 		.4byte	0x37
 798 02f4 0F       		.byte	0xf
 799 02f5 56       		.byte	0x56
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 36


 800 02f6 1F030000 		.4byte	0x31f
 801 02fa 07       		.uleb128 0x7
 802 02fb 3D0A0000 		.4byte	.LASF85
 803 02ff 00       		.byte	0
 804 0300 07       		.uleb128 0x7
 805 0301 16000000 		.4byte	.LASF86
 806 0305 01       		.byte	0x1
 807 0306 07       		.uleb128 0x7
 808 0307 54030000 		.4byte	.LASF87
 809 030b 02       		.byte	0x2
 810 030c 07       		.uleb128 0x7
 811 030d D40B0000 		.4byte	.LASF88
 812 0311 03       		.byte	0x3
 813 0312 07       		.uleb128 0x7
 814 0313 AF020000 		.4byte	.LASF89
 815 0317 04       		.byte	0x4
 816 0318 07       		.uleb128 0x7
 817 0319 DF030000 		.4byte	.LASF90
 818 031d 05       		.byte	0x5
 819 031e 00       		.byte	0
 820 031f 03       		.uleb128 0x3
 821 0320 EB050000 		.4byte	.LASF91
 822 0324 0F       		.byte	0xf
 823 0325 5F       		.byte	0x5f
 824 0326 EE020000 		.4byte	0x2ee
 825 032a 06       		.uleb128 0x6
 826 032b 01       		.byte	0x1
 827 032c 37000000 		.4byte	0x37
 828 0330 0F       		.byte	0xf
 829 0331 62       		.byte	0x62
 830 0332 5B030000 		.4byte	0x35b
 831 0336 07       		.uleb128 0x7
 832 0337 37010000 		.4byte	.LASF92
 833 033b 00       		.byte	0
 834 033c 07       		.uleb128 0x7
 835 033d 0E020000 		.4byte	.LASF93
 836 0341 01       		.byte	0x1
 837 0342 07       		.uleb128 0x7
 838 0343 74080000 		.4byte	.LASF94
 839 0347 02       		.byte	0x2
 840 0348 07       		.uleb128 0x7
 841 0349 A30A0000 		.4byte	.LASF95
 842 034d 03       		.byte	0x3
 843 034e 07       		.uleb128 0x7
 844 034f 0C080000 		.4byte	.LASF96
 845 0353 04       		.byte	0x4
 846 0354 07       		.uleb128 0x7
 847 0355 64040000 		.4byte	.LASF97
 848 0359 05       		.byte	0x5
 849 035a 00       		.byte	0
 850 035b 03       		.uleb128 0x3
 851 035c D8050000 		.4byte	.LASF98
 852 0360 0F       		.byte	0xf
 853 0361 6C       		.byte	0x6c
 854 0362 2A030000 		.4byte	0x32a
 855 0366 06       		.uleb128 0x6
 856 0367 01       		.byte	0x1
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 37


 857 0368 37000000 		.4byte	0x37
 858 036c 0F       		.byte	0xf
 859 036d 6F       		.byte	0x6f
 860 036e 85030000 		.4byte	0x385
 861 0372 07       		.uleb128 0x7
 862 0373 4C010000 		.4byte	.LASF99
 863 0377 00       		.byte	0
 864 0378 07       		.uleb128 0x7
 865 0379 92050000 		.4byte	.LASF100
 866 037d 01       		.byte	0x1
 867 037e 07       		.uleb128 0x7
 868 037f 0F050000 		.4byte	.LASF101
 869 0383 02       		.byte	0x2
 870 0384 00       		.byte	0
 871 0385 03       		.uleb128 0x3
 872 0386 00000000 		.4byte	.LASF102
 873 038a 0F       		.byte	0xf
 874 038b 73       		.byte	0x73
 875 038c 66030000 		.4byte	0x366
 876 0390 0D       		.uleb128 0xd
 877 0391 08       		.byte	0x8
 878 0392 0F       		.byte	0xf
 879 0393 75       		.byte	0x75
 880 0394 D5030000 		.4byte	0x3d5
 881 0398 0E       		.uleb128 0xe
 882 0399 B3040000 		.4byte	.LASF103
 883 039d 0F       		.byte	0xf
 884 039e 77       		.byte	0x77
 885 039f 8C000000 		.4byte	0x8c
 886 03a3 00       		.byte	0
 887 03a4 0E       		.uleb128 0xe
 888 03a5 610B0000 		.4byte	.LASF104
 889 03a9 0F       		.byte	0xf
 890 03aa 78       		.byte	0x78
 891 03ab E3020000 		.4byte	0x2e3
 892 03af 02       		.byte	0x2
 893 03b0 0E       		.uleb128 0xe
 894 03b1 8C020000 		.4byte	.LASF105
 895 03b5 0F       		.byte	0xf
 896 03b6 79       		.byte	0x79
 897 03b7 E3020000 		.4byte	0x2e3
 898 03bb 04       		.byte	0x4
 899 03bc 0E       		.uleb128 0xe
 900 03bd 7A030000 		.4byte	.LASF106
 901 03c1 0F       		.byte	0xf
 902 03c2 7A       		.byte	0x7a
 903 03c3 8C000000 		.4byte	0x8c
 904 03c7 06       		.byte	0x6
 905 03c8 0E       		.uleb128 0xe
 906 03c9 C7020000 		.4byte	.LASF107
 907 03cd 0F       		.byte	0xf
 908 03ce 7B       		.byte	0x7b
 909 03cf 8C000000 		.4byte	0x8c
 910 03d3 07       		.byte	0x7
 911 03d4 00       		.byte	0
 912 03d5 03       		.uleb128 0x3
 913 03d6 F20B0000 		.4byte	.LASF108
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 38


 914 03da 0F       		.byte	0xf
 915 03db 7C       		.byte	0x7c
 916 03dc 90030000 		.4byte	0x390
 917 03e0 0F       		.uleb128 0xf
 918 03e1 DA090000 		.4byte	.LASF145
 919 03e5 0C       		.byte	0xc
 920 03e6 0F       		.byte	0xf
 921 03e7 7E       		.byte	0x7e
 922 03e8 11040000 		.4byte	0x411
 923 03ec 0E       		.uleb128 0xe
 924 03ed 120C0000 		.4byte	.LASF109
 925 03f1 0F       		.byte	0xf
 926 03f2 80       		.byte	0x80
 927 03f3 85030000 		.4byte	0x385
 928 03f7 00       		.byte	0
 929 03f8 0E       		.uleb128 0xe
 930 03f9 84060000 		.4byte	.LASF110
 931 03fd 0F       		.byte	0xf
 932 03fe 81       		.byte	0x81
 933 03ff D5030000 		.4byte	0x3d5
 934 0403 02       		.byte	0x2
 935 0404 0E       		.uleb128 0xe
 936 0405 87030000 		.4byte	.LASF111
 937 0409 0F       		.byte	0xf
 938 040a 82       		.byte	0x82
 939 040b 8C000000 		.4byte	0x8c
 940 040f 0A       		.byte	0xa
 941 0410 00       		.byte	0
 942 0411 03       		.uleb128 0x3
 943 0412 E4020000 		.4byte	.LASF112
 944 0416 0F       		.byte	0xf
 945 0417 85       		.byte	0x85
 946 0418 E0030000 		.4byte	0x3e0
 947 041c 03       		.uleb128 0x3
 948 041d 33050000 		.4byte	.LASF113
 949 0421 0F       		.byte	0xf
 950 0422 8A       		.byte	0x8a
 951 0423 1F030000 		.4byte	0x31f
 952 0427 03       		.uleb128 0x3
 953 0428 6C030000 		.4byte	.LASF114
 954 042c 0F       		.byte	0xf
 955 042d 8D       		.byte	0x8d
 956 042e 5B030000 		.4byte	0x35b
 957 0432 03       		.uleb128 0x3
 958 0433 40080000 		.4byte	.LASF115
 959 0437 10       		.byte	0x10
 960 0438 2C       		.byte	0x2c
 961 0439 3D040000 		.4byte	0x43d
 962 043d 10       		.uleb128 0x10
 963 043e 04       		.byte	0x4
 964 043f 43040000 		.4byte	0x443
 965 0443 11       		.uleb128 0x11
 966 0444 4A040000 		.4byte	0x44a
 967 0448 12       		.uleb128 0x12
 968 0449 00       		.byte	0
 969 044a 03       		.uleb128 0x3
 970 044b 41020000 		.4byte	.LASF116
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 39


 971 044f 10       		.byte	0x10
 972 0450 31       		.byte	0x31
 973 0451 55040000 		.4byte	0x455
 974 0455 10       		.uleb128 0x10
 975 0456 04       		.byte	0x4
 976 0457 5B040000 		.4byte	0x45b
 977 045b 13       		.uleb128 0x13
 978 045c 2A010000 		.4byte	0x12a
 979 0460 66040000 		.4byte	0x466
 980 0464 12       		.uleb128 0x12
 981 0465 00       		.byte	0
 982 0466 0D       		.uleb128 0xd
 983 0467 0C       		.byte	0xc
 984 0468 10       		.byte	0x10
 985 0469 38       		.byte	0x38
 986 046a 9F040000 		.4byte	0x49f
 987 046e 0E       		.uleb128 0xe
 988 046f AD040000 		.4byte	.LASF117
 989 0473 10       		.byte	0x10
 990 0474 3A       		.byte	0x3a
 991 0475 1C040000 		.4byte	0x41c
 992 0479 00       		.byte	0
 993 047a 0E       		.uleb128 0xe
 994 047b E0000000 		.4byte	.LASF118
 995 047f 10       		.byte	0x10
 996 0480 3B       		.byte	0x3b
 997 0481 27040000 		.4byte	0x427
 998 0485 01       		.byte	0x1
 999 0486 0E       		.uleb128 0xe
 1000 0487 FF0B0000 		.4byte	.LASF119
 1001 048b 10       		.byte	0x10
 1002 048c 3C       		.byte	0x3c
 1003 048d 4A040000 		.4byte	0x44a
 1004 0491 04       		.byte	0x4
 1005 0492 0E       		.uleb128 0xe
 1006 0493 DD0A0000 		.4byte	.LASF120
 1007 0497 10       		.byte	0x10
 1008 0498 3D       		.byte	0x3d
 1009 0499 32040000 		.4byte	0x432
 1010 049d 08       		.byte	0x8
 1011 049e 00       		.byte	0
 1012 049f 03       		.uleb128 0x3
 1013 04a0 3D060000 		.4byte	.LASF121
 1014 04a4 10       		.byte	0x10
 1015 04a5 3F       		.byte	0x3f
 1016 04a6 66040000 		.4byte	0x466
 1017 04aa 03       		.uleb128 0x3
 1018 04ab 1E080000 		.4byte	.LASF122
 1019 04af 10       		.byte	0x10
 1020 04b0 41       		.byte	0x41
 1021 04b1 B5040000 		.4byte	0x4b5
 1022 04b5 09       		.uleb128 0x9
 1023 04b6 9F040000 		.4byte	0x49f
 1024 04ba C0040000 		.4byte	0x4c0
 1025 04be 0A       		.uleb128 0xa
 1026 04bf 00       		.byte	0
 1027 04c0 0D       		.uleb128 0xd
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 40


 1028 04c1 0C       		.byte	0xc
 1029 04c2 10       		.byte	0x10
 1030 04c3 54       		.byte	0x54
 1031 04c4 ED040000 		.4byte	0x4ed
 1032 04c8 0E       		.uleb128 0xe
 1033 04c9 3B020000 		.4byte	.LASF123
 1034 04cd 10       		.byte	0x10
 1035 04ce 56       		.byte	0x56
 1036 04cf 27040000 		.4byte	0x427
 1037 04d3 00       		.byte	0
 1038 04d4 0E       		.uleb128 0xe
 1039 04d5 03050000 		.4byte	.LASF124
 1040 04d9 10       		.byte	0x10
 1041 04da 57       		.byte	0x57
 1042 04db 32040000 		.4byte	0x432
 1043 04df 04       		.byte	0x4
 1044 04e0 0E       		.uleb128 0xe
 1045 04e1 81020000 		.4byte	.LASF125
 1046 04e5 10       		.byte	0x10
 1047 04e6 58       		.byte	0x58
 1048 04e7 32040000 		.4byte	0x432
 1049 04eb 08       		.byte	0x8
 1050 04ec 00       		.byte	0
 1051 04ed 03       		.uleb128 0x3
 1052 04ee A2050000 		.4byte	.LASF126
 1053 04f2 10       		.byte	0x10
 1054 04f3 59       		.byte	0x59
 1055 04f4 C0040000 		.4byte	0x4c0
 1056 04f8 0D       		.uleb128 0xd
 1057 04f9 18       		.byte	0x18
 1058 04fa 10       		.byte	0x10
 1059 04fb 5F       		.byte	0x5f
 1060 04fc 3D050000 		.4byte	0x53d
 1061 0500 0E       		.uleb128 0xe
 1062 0501 E8000000 		.4byte	.LASF127
 1063 0505 10       		.byte	0x10
 1064 0506 61       		.byte	0x61
 1065 0507 5B030000 		.4byte	0x35b
 1066 050b 00       		.byte	0
 1067 050c 0E       		.uleb128 0xe
 1068 050d F6000000 		.4byte	.LASF128
 1069 0511 10       		.byte	0x10
 1070 0512 62       		.byte	0x62
 1071 0513 3D050000 		.4byte	0x53d
 1072 0517 04       		.byte	0x4
 1073 0518 0E       		.uleb128 0xe
 1074 0519 E7070000 		.4byte	.LASF129
 1075 051d 10       		.byte	0x10
 1076 051e 63       		.byte	0x63
 1077 051f 43050000 		.4byte	0x543
 1078 0523 08       		.byte	0x8
 1079 0524 0E       		.uleb128 0xe
 1080 0525 BF020000 		.4byte	.LASF130
 1081 0529 10       		.byte	0x10
 1082 052a 64       		.byte	0x64
 1083 052b 8C000000 		.4byte	0x8c
 1084 052f 0C       		.byte	0xc
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 41


 1085 0530 0E       		.uleb128 0xe
 1086 0531 F4090000 		.4byte	.LASF131
 1087 0535 10       		.byte	0x10
 1088 0536 65       		.byte	0x65
 1089 0537 D5030000 		.4byte	0x3d5
 1090 053b 0E       		.byte	0xe
 1091 053c 00       		.byte	0
 1092 053d 10       		.uleb128 0x10
 1093 053e 04       		.byte	0x4
 1094 053f AA040000 		.4byte	0x4aa
 1095 0543 10       		.uleb128 0x10
 1096 0544 04       		.byte	0x4
 1097 0545 ED040000 		.4byte	0x4ed
 1098 0549 03       		.uleb128 0x3
 1099 054a 2B000000 		.4byte	.LASF132
 1100 054e 10       		.byte	0x10
 1101 054f 66       		.byte	0x66
 1102 0550 F8040000 		.4byte	0x4f8
 1103 0554 0D       		.uleb128 0xd
 1104 0555 40       		.byte	0x40
 1105 0556 11       		.byte	0x11
 1106 0557 1D       		.byte	0x1d
 1107 0558 A5050000 		.4byte	0x5a5
 1108 055c 0E       		.uleb128 0xe
 1109 055d C30B0000 		.4byte	.LASF133
 1110 0561 11       		.byte	0x11
 1111 0562 1F       		.byte	0x1f
 1112 0563 5B030000 		.4byte	0x35b
 1113 0567 00       		.byte	0
 1114 0568 0E       		.uleb128 0xe
 1115 0569 F6000000 		.4byte	.LASF128
 1116 056d 11       		.byte	0x11
 1117 056e 20       		.byte	0x20
 1118 056f 3D050000 		.4byte	0x53d
 1119 0573 04       		.byte	0x4
 1120 0574 0E       		.uleb128 0xe
 1121 0575 E7070000 		.4byte	.LASF129
 1122 0579 11       		.byte	0x11
 1123 057a 21       		.byte	0x21
 1124 057b 43050000 		.4byte	0x543
 1125 057f 08       		.byte	0x8
 1126 0580 0E       		.uleb128 0xe
 1127 0581 0F0A0000 		.4byte	.LASF134
 1128 0585 11       		.byte	0x11
 1129 0586 22       		.byte	0x22
 1130 0587 85030000 		.4byte	0x385
 1131 058b 0C       		.byte	0xc
 1132 058c 0E       		.uleb128 0xe
 1133 058d BB0B0000 		.4byte	.LASF135
 1134 0591 11       		.byte	0x11
 1135 0592 23       		.byte	0x23
 1136 0593 49050000 		.4byte	0x549
 1137 0597 10       		.byte	0x10
 1138 0598 0E       		.uleb128 0xe
 1139 0599 240B0000 		.4byte	.LASF136
 1140 059d 11       		.byte	0x11
 1141 059e 24       		.byte	0x24
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 42


 1142 059f 49050000 		.4byte	0x549
 1143 05a3 28       		.byte	0x28
 1144 05a4 00       		.byte	0
 1145 05a5 03       		.uleb128 0x3
 1146 05a6 8D080000 		.4byte	.LASF137
 1147 05aa 11       		.byte	0x11
 1148 05ab 25       		.byte	0x25
 1149 05ac 54050000 		.4byte	0x554
 1150 05b0 0D       		.uleb128 0xd
 1151 05b1 44       		.byte	0x44
 1152 05b2 11       		.byte	0x11
 1153 05b3 2A       		.byte	0x2a
 1154 05b4 E9050000 		.4byte	0x5e9
 1155 05b8 0E       		.uleb128 0xe
 1156 05b9 A4010000 		.4byte	.LASF138
 1157 05bd 11       		.byte	0x11
 1158 05be 2C       		.byte	0x2c
 1159 05bf 8C000000 		.4byte	0x8c
 1160 05c3 00       		.byte	0
 1161 05c4 0E       		.uleb128 0xe
 1162 05c5 BD070000 		.4byte	.LASF139
 1163 05c9 11       		.byte	0x11
 1164 05ca 2D       		.byte	0x2d
 1165 05cb 8C000000 		.4byte	0x8c
 1166 05cf 01       		.byte	0x1
 1167 05d0 0E       		.uleb128 0xe
 1168 05d1 790A0000 		.4byte	.LASF140
 1169 05d5 11       		.byte	0x11
 1170 05d6 2E       		.byte	0x2e
 1171 05d7 1F030000 		.4byte	0x31f
 1172 05db 02       		.byte	0x2
 1173 05dc 0E       		.uleb128 0xe
 1174 05dd 51070000 		.4byte	.LASF141
 1175 05e1 11       		.byte	0x11
 1176 05e2 2F       		.byte	0x2f
 1177 05e3 A5050000 		.4byte	0x5a5
 1178 05e7 04       		.byte	0x4
 1179 05e8 00       		.byte	0
 1180 05e9 03       		.uleb128 0x3
 1181 05ea D8080000 		.4byte	.LASF142
 1182 05ee 11       		.byte	0x11
 1183 05ef 32       		.byte	0x32
 1184 05f0 B0050000 		.4byte	0x5b0
 1185 05f4 03       		.uleb128 0x3
 1186 05f5 7C040000 		.4byte	.LASF143
 1187 05f9 02       		.byte	0x2
 1188 05fa 26       		.byte	0x26
 1189 05fb FF050000 		.4byte	0x5ff
 1190 05ff 10       		.uleb128 0x10
 1191 0600 04       		.byte	0x4
 1192 0601 05060000 		.4byte	0x605
 1193 0605 14       		.uleb128 0x14
 1194 0606 DE010000 		.4byte	0x1de
 1195 060a 14060000 		.4byte	0x614
 1196 060e 15       		.uleb128 0x15
 1197 060f 1A060000 		.4byte	0x61a
 1198 0613 00       		.byte	0
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 43


 1199 0614 10       		.uleb128 0x10
 1200 0615 04       		.byte	0x4
 1201 0616 E9050000 		.4byte	0x5e9
 1202 061a 16       		.uleb128 0x16
 1203 061b 14060000 		.4byte	0x614
 1204 061f 03       		.uleb128 0x3
 1205 0620 8E0A0000 		.4byte	.LASF144
 1206 0624 02       		.byte	0x2
 1207 0625 2C       		.byte	0x2c
 1208 0626 2A060000 		.4byte	0x62a
 1209 062a 10       		.uleb128 0x10
 1210 062b 04       		.byte	0x4
 1211 062c 30060000 		.4byte	0x630
 1212 0630 14       		.uleb128 0x14
 1213 0631 DE010000 		.4byte	0x1de
 1214 0635 3F060000 		.4byte	0x63f
 1215 0639 15       		.uleb128 0x15
 1216 063a 4A060000 		.4byte	0x64a
 1217 063e 00       		.byte	0
 1218 063f 10       		.uleb128 0x10
 1219 0640 04       		.byte	0x4
 1220 0641 45060000 		.4byte	0x645
 1221 0645 16       		.uleb128 0x16
 1222 0646 E9050000 		.4byte	0x5e9
 1223 064a 16       		.uleb128 0x16
 1224 064b 3F060000 		.4byte	0x63f
 1225 064f 0F       		.uleb128 0xf
 1226 0650 9A080000 		.4byte	.LASF146
 1227 0654 28       		.byte	0x28
 1228 0655 02       		.byte	0x2
 1229 0656 36       		.byte	0x36
 1230 0657 D4060000 		.4byte	0x6d4
 1231 065b 0E       		.uleb128 0xe
 1232 065c 5D080000 		.4byte	.LASF147
 1233 0660 02       		.byte	0x2
 1234 0661 3B       		.byte	0x3b
 1235 0662 D4060000 		.4byte	0x6d4
 1236 0666 00       		.byte	0
 1237 0667 0E       		.uleb128 0xe
 1238 0668 13040000 		.4byte	.LASF148
 1239 066c 02       		.byte	0x2
 1240 066d 40       		.byte	0x40
 1241 066e D9060000 		.4byte	0x6d9
 1242 0672 04       		.byte	0x4
 1243 0673 0E       		.uleb128 0xe
 1244 0674 15060000 		.4byte	.LASF149
 1245 0678 02       		.byte	0x2
 1246 0679 45       		.byte	0x45
 1247 067a DE060000 		.4byte	0x6de
 1248 067e 08       		.byte	0x8
 1249 067f 0E       		.uleb128 0xe
 1250 0680 89090000 		.4byte	.LASF150
 1251 0684 02       		.byte	0x2
 1252 0685 4B       		.byte	0x4b
 1253 0686 DE060000 		.4byte	0x6de
 1254 068a 0C       		.byte	0xc
 1255 068b 0E       		.uleb128 0xe
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 44


 1256 068c 07030000 		.4byte	.LASF151
 1257 0690 02       		.byte	0x2
 1258 0691 50       		.byte	0x50
 1259 0692 E3060000 		.4byte	0x6e3
 1260 0696 10       		.byte	0x10
 1261 0697 0E       		.uleb128 0xe
 1262 0698 B8080000 		.4byte	.LASF152
 1263 069c 02       		.byte	0x2
 1264 069d 55       		.byte	0x55
 1265 069e EE060000 		.4byte	0x6ee
 1266 06a2 14       		.byte	0x14
 1267 06a3 0E       		.uleb128 0xe
 1268 06a4 D6070000 		.4byte	.LASF153
 1269 06a8 02       		.byte	0x2
 1270 06a9 5A       		.byte	0x5a
 1271 06aa E3060000 		.4byte	0x6e3
 1272 06ae 18       		.byte	0x18
 1273 06af 0E       		.uleb128 0xe
 1274 06b0 050C0000 		.4byte	.LASF154
 1275 06b4 02       		.byte	0x2
 1276 06b5 5F       		.byte	0x5f
 1277 06b6 EE060000 		.4byte	0x6ee
 1278 06ba 1C       		.byte	0x1c
 1279 06bb 0E       		.uleb128 0xe
 1280 06bc FB090000 		.4byte	.LASF155
 1281 06c0 02       		.byte	0x2
 1282 06c1 65       		.byte	0x65
 1283 06c2 F3060000 		.4byte	0x6f3
 1284 06c6 20       		.byte	0x20
 1285 06c7 0E       		.uleb128 0xe
 1286 06c8 54000000 		.4byte	.LASF156
 1287 06cc 02       		.byte	0x2
 1288 06cd 6A       		.byte	0x6a
 1289 06ce F8060000 		.4byte	0x6f8
 1290 06d2 24       		.byte	0x24
 1291 06d3 00       		.byte	0
 1292 06d4 16       		.uleb128 0x16
 1293 06d5 F4050000 		.4byte	0x5f4
 1294 06d9 16       		.uleb128 0x16
 1295 06da 1F060000 		.4byte	0x61f
 1296 06de 16       		.uleb128 0x16
 1297 06df 1E010000 		.4byte	0x11e
 1298 06e3 16       		.uleb128 0x16
 1299 06e4 C2000000 		.4byte	0xc2
 1300 06e8 10       		.uleb128 0x10
 1301 06e9 04       		.byte	0x4
 1302 06ea E9010000 		.4byte	0x1e9
 1303 06ee 16       		.uleb128 0x16
 1304 06ef E8060000 		.4byte	0x6e8
 1305 06f3 16       		.uleb128 0x16
 1306 06f4 2A010000 		.4byte	0x12a
 1307 06f8 16       		.uleb128 0x16
 1308 06f9 0A020000 		.4byte	0x20a
 1309 06fd 03       		.uleb128 0x3
 1310 06fe A9080000 		.4byte	.LASF157
 1311 0702 02       		.byte	0x2
 1312 0703 6D       		.byte	0x6d
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 45


 1313 0704 08070000 		.4byte	0x708
 1314 0708 16       		.uleb128 0x16
 1315 0709 4F060000 		.4byte	0x64f
 1316 070d 0F       		.uleb128 0xf
 1317 070e 2D070000 		.4byte	.LASF158
 1318 0712 50       		.byte	0x50
 1319 0713 02       		.byte	0x2
 1320 0714 79       		.byte	0x79
 1321 0715 4A070000 		.4byte	0x74a
 1322 0719 0E       		.uleb128 0xe
 1323 071a 87030000 		.4byte	.LASF111
 1324 071e 02       		.byte	0x2
 1325 071f 7F       		.byte	0x7f
 1326 0720 E9050000 		.4byte	0x5e9
 1327 0724 00       		.byte	0
 1328 0725 0E       		.uleb128 0xe
 1329 0726 5A0B0000 		.4byte	.LASF159
 1330 072a 02       		.byte	0x2
 1331 072b 84       		.byte	0x84
 1332 072c 3A020000 		.4byte	0x23a
 1333 0730 44       		.byte	0x44
 1334 0731 17       		.uleb128 0x17
 1335 0732 61676500 		.ascii	"age\000"
 1336 0736 02       		.byte	0x2
 1337 0737 89       		.byte	0x89
 1338 0738 A2000000 		.4byte	0xa2
 1339 073c 48       		.byte	0x48
 1340 073d 0E       		.uleb128 0xe
 1341 073e 98090000 		.4byte	.LASF160
 1342 0742 02       		.byte	0x2
 1343 0743 8E       		.byte	0x8e
 1344 0744 50070000 		.4byte	0x750
 1345 0748 4C       		.byte	0x4c
 1346 0749 00       		.byte	0
 1347 074a 10       		.uleb128 0x10
 1348 074b 04       		.byte	0x4
 1349 074c FD060000 		.4byte	0x6fd
 1350 0750 16       		.uleb128 0x16
 1351 0751 4A070000 		.4byte	0x74a
 1352 0755 03       		.uleb128 0x3
 1353 0756 38070000 		.4byte	.LASF161
 1354 075a 02       		.byte	0x2
 1355 075b 91       		.byte	0x91
 1356 075c 0D070000 		.4byte	0x70d
 1357 0760 0D       		.uleb128 0xd
 1358 0761 18       		.byte	0x18
 1359 0762 12       		.byte	0x12
 1360 0763 21       		.byte	0x21
 1361 0764 81070000 		.4byte	0x781
 1362 0768 0E       		.uleb128 0xe
 1363 0769 5D000000 		.4byte	.LASF162
 1364 076d 12       		.byte	0x12
 1365 076e 23       		.byte	0x23
 1366 076f 11040000 		.4byte	0x411
 1367 0773 00       		.byte	0
 1368 0774 0E       		.uleb128 0xe
 1369 0775 1D0B0000 		.4byte	.LASF163
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 46


 1370 0779 12       		.byte	0x12
 1371 077a 24       		.byte	0x24
 1372 077b 11040000 		.4byte	0x411
 1373 077f 0C       		.byte	0xc
 1374 0780 00       		.byte	0
 1375 0781 03       		.uleb128 0x3
 1376 0782 9D070000 		.4byte	.LASF164
 1377 0786 12       		.byte	0x12
 1378 0787 27       		.byte	0x27
 1379 0788 60070000 		.4byte	0x760
 1380 078c 03       		.uleb128 0x3
 1381 078d 2E0B0000 		.4byte	.LASF165
 1382 0791 03       		.byte	0x3
 1383 0792 26       		.byte	0x26
 1384 0793 97070000 		.4byte	0x797
 1385 0797 10       		.uleb128 0x10
 1386 0798 04       		.byte	0x4
 1387 0799 9D070000 		.4byte	0x79d
 1388 079d 14       		.uleb128 0x14
 1389 079e DE010000 		.4byte	0x1de
 1390 07a2 AC070000 		.4byte	0x7ac
 1391 07a6 15       		.uleb128 0x15
 1392 07a7 B2070000 		.4byte	0x7b2
 1393 07ab 00       		.byte	0
 1394 07ac 10       		.uleb128 0x10
 1395 07ad 04       		.byte	0x4
 1396 07ae 81070000 		.4byte	0x781
 1397 07b2 16       		.uleb128 0x16
 1398 07b3 AC070000 		.4byte	0x7ac
 1399 07b7 03       		.uleb128 0x3
 1400 07b8 00070000 		.4byte	.LASF166
 1401 07bc 03       		.byte	0x3
 1402 07bd 2C       		.byte	0x2c
 1403 07be C2070000 		.4byte	0x7c2
 1404 07c2 10       		.uleb128 0x10
 1405 07c3 04       		.byte	0x4
 1406 07c4 C8070000 		.4byte	0x7c8
 1407 07c8 14       		.uleb128 0x14
 1408 07c9 DE010000 		.4byte	0x1de
 1409 07cd D7070000 		.4byte	0x7d7
 1410 07d1 15       		.uleb128 0x15
 1411 07d2 E2070000 		.4byte	0x7e2
 1412 07d6 00       		.byte	0
 1413 07d7 10       		.uleb128 0x10
 1414 07d8 04       		.byte	0x4
 1415 07d9 DD070000 		.4byte	0x7dd
 1416 07dd 16       		.uleb128 0x16
 1417 07de 81070000 		.4byte	0x781
 1418 07e2 16       		.uleb128 0x16
 1419 07e3 D7070000 		.4byte	0x7d7
 1420 07e7 0F       		.uleb128 0xf
 1421 07e8 DE060000 		.4byte	.LASF167
 1422 07ec 28       		.byte	0x28
 1423 07ed 03       		.byte	0x3
 1424 07ee 36       		.byte	0x36
 1425 07ef 6C080000 		.4byte	0x86c
 1426 07f3 0E       		.uleb128 0xe
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 47


 1427 07f4 5D080000 		.4byte	.LASF147
 1428 07f8 03       		.byte	0x3
 1429 07f9 3B       		.byte	0x3b
 1430 07fa 6C080000 		.4byte	0x86c
 1431 07fe 00       		.byte	0
 1432 07ff 0E       		.uleb128 0xe
 1433 0800 13040000 		.4byte	.LASF148
 1434 0804 03       		.byte	0x3
 1435 0805 40       		.byte	0x40
 1436 0806 71080000 		.4byte	0x871
 1437 080a 04       		.byte	0x4
 1438 080b 0E       		.uleb128 0xe
 1439 080c 15060000 		.4byte	.LASF149
 1440 0810 03       		.byte	0x3
 1441 0811 45       		.byte	0x45
 1442 0812 DE060000 		.4byte	0x6de
 1443 0816 08       		.byte	0x8
 1444 0817 0E       		.uleb128 0xe
 1445 0818 89090000 		.4byte	.LASF150
 1446 081c 03       		.byte	0x3
 1447 081d 4B       		.byte	0x4b
 1448 081e DE060000 		.4byte	0x6de
 1449 0822 0C       		.byte	0xc
 1450 0823 0E       		.uleb128 0xe
 1451 0824 07030000 		.4byte	.LASF151
 1452 0828 03       		.byte	0x3
 1453 0829 50       		.byte	0x50
 1454 082a E3060000 		.4byte	0x6e3
 1455 082e 10       		.byte	0x10
 1456 082f 0E       		.uleb128 0xe
 1457 0830 B8080000 		.4byte	.LASF152
 1458 0834 03       		.byte	0x3
 1459 0835 55       		.byte	0x55
 1460 0836 EE060000 		.4byte	0x6ee
 1461 083a 14       		.byte	0x14
 1462 083b 0E       		.uleb128 0xe
 1463 083c D6070000 		.4byte	.LASF153
 1464 0840 03       		.byte	0x3
 1465 0841 5A       		.byte	0x5a
 1466 0842 E3060000 		.4byte	0x6e3
 1467 0846 18       		.byte	0x18
 1468 0847 0E       		.uleb128 0xe
 1469 0848 050C0000 		.4byte	.LASF154
 1470 084c 03       		.byte	0x3
 1471 084d 5F       		.byte	0x5f
 1472 084e EE060000 		.4byte	0x6ee
 1473 0852 1C       		.byte	0x1c
 1474 0853 0E       		.uleb128 0xe
 1475 0854 FB090000 		.4byte	.LASF155
 1476 0858 03       		.byte	0x3
 1477 0859 65       		.byte	0x65
 1478 085a F3060000 		.4byte	0x6f3
 1479 085e 20       		.byte	0x20
 1480 085f 0E       		.uleb128 0xe
 1481 0860 54000000 		.4byte	.LASF156
 1482 0864 03       		.byte	0x3
 1483 0865 6A       		.byte	0x6a
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 48


 1484 0866 F8060000 		.4byte	0x6f8
 1485 086a 24       		.byte	0x24
 1486 086b 00       		.byte	0
 1487 086c 16       		.uleb128 0x16
 1488 086d 8C070000 		.4byte	0x78c
 1489 0871 16       		.uleb128 0x16
 1490 0872 B7070000 		.4byte	0x7b7
 1491 0876 03       		.uleb128 0x3
 1492 0877 EF060000 		.4byte	.LASF168
 1493 087b 03       		.byte	0x3
 1494 087c 6D       		.byte	0x6d
 1495 087d 81080000 		.4byte	0x881
 1496 0881 16       		.uleb128 0x16
 1497 0882 E7070000 		.4byte	0x7e7
 1498 0886 0F       		.uleb128 0xf
 1499 0887 F60A0000 		.4byte	.LASF169
 1500 088b 24       		.byte	0x24
 1501 088c 03       		.byte	0x3
 1502 088d 79       		.byte	0x79
 1503 088e C3080000 		.4byte	0x8c3
 1504 0892 0E       		.uleb128 0xe
 1505 0893 87030000 		.4byte	.LASF111
 1506 0897 03       		.byte	0x3
 1507 0898 7F       		.byte	0x7f
 1508 0899 81070000 		.4byte	0x781
 1509 089d 00       		.byte	0
 1510 089e 0E       		.uleb128 0xe
 1511 089f 5A0B0000 		.4byte	.LASF159
 1512 08a3 03       		.byte	0x3
 1513 08a4 84       		.byte	0x84
 1514 08a5 3A020000 		.4byte	0x23a
 1515 08a9 18       		.byte	0x18
 1516 08aa 17       		.uleb128 0x17
 1517 08ab 61676500 		.ascii	"age\000"
 1518 08af 03       		.byte	0x3
 1519 08b0 89       		.byte	0x89
 1520 08b1 A2000000 		.4byte	0xa2
 1521 08b5 1C       		.byte	0x1c
 1522 08b6 0E       		.uleb128 0xe
 1523 08b7 98090000 		.4byte	.LASF160
 1524 08bb 03       		.byte	0x3
 1525 08bc 8E       		.byte	0x8e
 1526 08bd C9080000 		.4byte	0x8c9
 1527 08c1 20       		.byte	0x20
 1528 08c2 00       		.byte	0
 1529 08c3 10       		.uleb128 0x10
 1530 08c4 04       		.byte	0x4
 1531 08c5 76080000 		.4byte	0x876
 1532 08c9 16       		.uleb128 0x16
 1533 08ca C3080000 		.4byte	0x8c3
 1534 08ce 03       		.uleb128 0x3
 1535 08cf 030B0000 		.4byte	.LASF170
 1536 08d3 03       		.byte	0x3
 1537 08d4 91       		.byte	0x91
 1538 08d5 86080000 		.4byte	0x886
 1539 08d9 0D       		.uleb128 0xd
 1540 08da 18       		.byte	0x18
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 49


 1541 08db 13       		.byte	0x13
 1542 08dc 21       		.byte	0x21
 1543 08dd FA080000 		.4byte	0x8fa
 1544 08e1 0E       		.uleb128 0xe
 1545 08e2 5D000000 		.4byte	.LASF162
 1546 08e6 13       		.byte	0x13
 1547 08e7 23       		.byte	0x23
 1548 08e8 11040000 		.4byte	0x411
 1549 08ec 00       		.byte	0
 1550 08ed 0E       		.uleb128 0xe
 1551 08ee 1D0B0000 		.4byte	.LASF163
 1552 08f2 13       		.byte	0x13
 1553 08f3 24       		.byte	0x24
 1554 08f4 11040000 		.4byte	0x411
 1555 08f8 0C       		.byte	0xc
 1556 08f9 00       		.byte	0
 1557 08fa 03       		.uleb128 0x3
 1558 08fb B5000000 		.4byte	.LASF171
 1559 08ff 13       		.byte	0x13
 1560 0900 27       		.byte	0x27
 1561 0901 D9080000 		.4byte	0x8d9
 1562 0905 03       		.uleb128 0x3
 1563 0906 440B0000 		.4byte	.LASF172
 1564 090a 04       		.byte	0x4
 1565 090b 26       		.byte	0x26
 1566 090c 10090000 		.4byte	0x910
 1567 0910 10       		.uleb128 0x10
 1568 0911 04       		.byte	0x4
 1569 0912 16090000 		.4byte	0x916
 1570 0916 14       		.uleb128 0x14
 1571 0917 DE010000 		.4byte	0x1de
 1572 091b 25090000 		.4byte	0x925
 1573 091f 15       		.uleb128 0x15
 1574 0920 2B090000 		.4byte	0x92b
 1575 0924 00       		.byte	0
 1576 0925 10       		.uleb128 0x10
 1577 0926 04       		.byte	0x4
 1578 0927 FA080000 		.4byte	0x8fa
 1579 092b 16       		.uleb128 0x16
 1580 092c 25090000 		.4byte	0x925
 1581 0930 03       		.uleb128 0x3
 1582 0931 32030000 		.4byte	.LASF173
 1583 0935 04       		.byte	0x4
 1584 0936 2C       		.byte	0x2c
 1585 0937 3B090000 		.4byte	0x93b
 1586 093b 10       		.uleb128 0x10
 1587 093c 04       		.byte	0x4
 1588 093d 41090000 		.4byte	0x941
 1589 0941 14       		.uleb128 0x14
 1590 0942 DE010000 		.4byte	0x1de
 1591 0946 50090000 		.4byte	0x950
 1592 094a 15       		.uleb128 0x15
 1593 094b 5B090000 		.4byte	0x95b
 1594 094f 00       		.byte	0
 1595 0950 10       		.uleb128 0x10
 1596 0951 04       		.byte	0x4
 1597 0952 56090000 		.4byte	0x956
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 50


 1598 0956 16       		.uleb128 0x16
 1599 0957 FA080000 		.4byte	0x8fa
 1600 095b 16       		.uleb128 0x16
 1601 095c 50090000 		.4byte	0x950
 1602 0960 0F       		.uleb128 0xf
 1603 0961 B6050000 		.4byte	.LASF174
 1604 0965 28       		.byte	0x28
 1605 0966 04       		.byte	0x4
 1606 0967 36       		.byte	0x36
 1607 0968 E5090000 		.4byte	0x9e5
 1608 096c 0E       		.uleb128 0xe
 1609 096d 5D080000 		.4byte	.LASF147
 1610 0971 04       		.byte	0x4
 1611 0972 3B       		.byte	0x3b
 1612 0973 E5090000 		.4byte	0x9e5
 1613 0977 00       		.byte	0
 1614 0978 0E       		.uleb128 0xe
 1615 0979 13040000 		.4byte	.LASF148
 1616 097d 04       		.byte	0x4
 1617 097e 40       		.byte	0x40
 1618 097f EA090000 		.4byte	0x9ea
 1619 0983 04       		.byte	0x4
 1620 0984 0E       		.uleb128 0xe
 1621 0985 15060000 		.4byte	.LASF149
 1622 0989 04       		.byte	0x4
 1623 098a 45       		.byte	0x45
 1624 098b DE060000 		.4byte	0x6de
 1625 098f 08       		.byte	0x8
 1626 0990 0E       		.uleb128 0xe
 1627 0991 89090000 		.4byte	.LASF150
 1628 0995 04       		.byte	0x4
 1629 0996 4B       		.byte	0x4b
 1630 0997 DE060000 		.4byte	0x6de
 1631 099b 0C       		.byte	0xc
 1632 099c 0E       		.uleb128 0xe
 1633 099d 07030000 		.4byte	.LASF151
 1634 09a1 04       		.byte	0x4
 1635 09a2 50       		.byte	0x50
 1636 09a3 E3060000 		.4byte	0x6e3
 1637 09a7 10       		.byte	0x10
 1638 09a8 0E       		.uleb128 0xe
 1639 09a9 B8080000 		.4byte	.LASF152
 1640 09ad 04       		.byte	0x4
 1641 09ae 55       		.byte	0x55
 1642 09af EE060000 		.4byte	0x6ee
 1643 09b3 14       		.byte	0x14
 1644 09b4 0E       		.uleb128 0xe
 1645 09b5 D6070000 		.4byte	.LASF153
 1646 09b9 04       		.byte	0x4
 1647 09ba 5A       		.byte	0x5a
 1648 09bb E3060000 		.4byte	0x6e3
 1649 09bf 18       		.byte	0x18
 1650 09c0 0E       		.uleb128 0xe
 1651 09c1 050C0000 		.4byte	.LASF154
 1652 09c5 04       		.byte	0x4
 1653 09c6 5F       		.byte	0x5f
 1654 09c7 EE060000 		.4byte	0x6ee
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 51


 1655 09cb 1C       		.byte	0x1c
 1656 09cc 0E       		.uleb128 0xe
 1657 09cd FB090000 		.4byte	.LASF155
 1658 09d1 04       		.byte	0x4
 1659 09d2 65       		.byte	0x65
 1660 09d3 F3060000 		.4byte	0x6f3
 1661 09d7 20       		.byte	0x20
 1662 09d8 0E       		.uleb128 0xe
 1663 09d9 54000000 		.4byte	.LASF156
 1664 09dd 04       		.byte	0x4
 1665 09de 6A       		.byte	0x6a
 1666 09df F8060000 		.4byte	0x6f8
 1667 09e3 24       		.byte	0x24
 1668 09e4 00       		.byte	0
 1669 09e5 16       		.uleb128 0x16
 1670 09e6 05090000 		.4byte	0x905
 1671 09ea 16       		.uleb128 0x16
 1672 09eb 30090000 		.4byte	0x930
 1673 09ef 03       		.uleb128 0x3
 1674 09f0 C7050000 		.4byte	.LASF175
 1675 09f4 04       		.byte	0x4
 1676 09f5 6D       		.byte	0x6d
 1677 09f6 FA090000 		.4byte	0x9fa
 1678 09fa 16       		.uleb128 0x16
 1679 09fb 60090000 		.4byte	0x960
 1680 09ff 0F       		.uleb128 0xf
 1681 0a00 3A000000 		.4byte	.LASF176
 1682 0a04 24       		.byte	0x24
 1683 0a05 04       		.byte	0x4
 1684 0a06 79       		.byte	0x79
 1685 0a07 3C0A0000 		.4byte	0xa3c
 1686 0a0b 0E       		.uleb128 0xe
 1687 0a0c 87030000 		.4byte	.LASF111
 1688 0a10 04       		.byte	0x4
 1689 0a11 7F       		.byte	0x7f
 1690 0a12 FA080000 		.4byte	0x8fa
 1691 0a16 00       		.byte	0
 1692 0a17 0E       		.uleb128 0xe
 1693 0a18 5A0B0000 		.4byte	.LASF159
 1694 0a1c 04       		.byte	0x4
 1695 0a1d 84       		.byte	0x84
 1696 0a1e 3A020000 		.4byte	0x23a
 1697 0a22 18       		.byte	0x18
 1698 0a23 17       		.uleb128 0x17
 1699 0a24 61676500 		.ascii	"age\000"
 1700 0a28 04       		.byte	0x4
 1701 0a29 89       		.byte	0x89
 1702 0a2a A2000000 		.4byte	0xa2
 1703 0a2e 1C       		.byte	0x1c
 1704 0a2f 0E       		.uleb128 0xe
 1705 0a30 98090000 		.4byte	.LASF160
 1706 0a34 04       		.byte	0x4
 1707 0a35 8E       		.byte	0x8e
 1708 0a36 420A0000 		.4byte	0xa42
 1709 0a3a 20       		.byte	0x20
 1710 0a3b 00       		.byte	0
 1711 0a3c 10       		.uleb128 0x10
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 52


 1712 0a3d 04       		.byte	0x4
 1713 0a3e EF090000 		.4byte	0x9ef
 1714 0a42 16       		.uleb128 0x16
 1715 0a43 3C0A0000 		.4byte	0xa3c
 1716 0a47 03       		.uleb128 0x3
 1717 0a48 47000000 		.4byte	.LASF177
 1718 0a4c 04       		.byte	0x4
 1719 0a4d 91       		.byte	0x91
 1720 0a4e FF090000 		.4byte	0x9ff
 1721 0a52 18       		.uleb128 0x18
 1722 0a53 A0090000 		.4byte	.LASF182
 1723 0a57 02       		.byte	0x2
 1724 0a58 3501     		.2byte	0x135
 1725 0a5a DE010000 		.4byte	0x1de
 1726 0a5e 03       		.byte	0x3
 1727 0a5f AE0A0000 		.4byte	0xaae
 1728 0a63 19       		.uleb128 0x19
 1729 0a64 BA090000 		.4byte	.LASF178
 1730 0a68 02       		.byte	0x2
 1731 0a69 3501     		.2byte	0x135
 1732 0a6b B40A0000 		.4byte	0xab4
 1733 0a6f 19       		.uleb128 0x19
 1734 0a70 87030000 		.4byte	.LASF111
 1735 0a74 02       		.byte	0x2
 1736 0a75 3501     		.2byte	0x135
 1737 0a77 45060000 		.4byte	0x645
 1738 0a7b 1A       		.uleb128 0x1a
 1739 0a7c 72657400 		.ascii	"ret\000"
 1740 0a80 02       		.byte	0x2
 1741 0a81 3801     		.2byte	0x138
 1742 0a83 DE010000 		.4byte	0x1de
 1743 0a87 1B       		.uleb128 0x1b
 1744 0a88 EE0A0000 		.4byte	.LASF179
 1745 0a8c 02       		.byte	0x2
 1746 0a8d 3901     		.2byte	0x139
 1747 0a8f C2000000 		.4byte	0xc2
 1748 0a93 1B       		.uleb128 0x1b
 1749 0a94 88000000 		.4byte	.LASF180
 1750 0a98 02       		.byte	0x2
 1751 0a99 4301     		.2byte	0x143
 1752 0a9b E8060000 		.4byte	0x6e8
 1753 0a9f 1C       		.uleb128 0x1c
 1754 0aa0 1B       		.uleb128 0x1b
 1755 0aa1 560A0000 		.4byte	.LASF181
 1756 0aa5 02       		.byte	0x2
 1757 0aa6 4801     		.2byte	0x148
 1758 0aa8 12010000 		.4byte	0x112
 1759 0aac 00       		.byte	0
 1760 0aad 00       		.byte	0
 1761 0aae 10       		.uleb128 0x10
 1762 0aaf 04       		.byte	0x4
 1763 0ab0 55070000 		.4byte	0x755
 1764 0ab4 16       		.uleb128 0x16
 1765 0ab5 AE0A0000 		.4byte	0xaae
 1766 0ab9 1D       		.uleb128 0x1d
 1767 0aba B80A0000 		.4byte	.LASF183
 1768 0abe 02       		.byte	0x2
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 53


 1769 0abf C6       		.byte	0xc6
 1770 0ac0 DE010000 		.4byte	0x1de
 1771 0ac4 03       		.byte	0x3
 1772 0ac5 050B0000 		.4byte	0xb05
 1773 0ac9 1E       		.uleb128 0x1e
 1774 0aca BA090000 		.4byte	.LASF178
 1775 0ace 02       		.byte	0x2
 1776 0acf C6       		.byte	0xc6
 1777 0ad0 B40A0000 		.4byte	0xab4
 1778 0ad4 1E       		.uleb128 0x1e
 1779 0ad5 5A0B0000 		.4byte	.LASF159
 1780 0ad9 02       		.byte	0x2
 1781 0ada C6       		.byte	0xc6
 1782 0adb 050B0000 		.4byte	0xb05
 1783 0adf 1F       		.uleb128 0x1f
 1784 0ae0 EE0A0000 		.4byte	.LASF179
 1785 0ae4 02       		.byte	0x2
 1786 0ae5 C9       		.byte	0xc9
 1787 0ae6 C2000000 		.4byte	0xc2
 1788 0aea 1C       		.uleb128 0x1c
 1789 0aeb 1F       		.uleb128 0x1f
 1790 0aec 88000000 		.4byte	.LASF180
 1791 0af0 02       		.byte	0x2
 1792 0af1 CF       		.byte	0xcf
 1793 0af2 E8060000 		.4byte	0x6e8
 1794 0af6 1C       		.uleb128 0x1c
 1795 0af7 1F       		.uleb128 0x1f
 1796 0af8 560A0000 		.4byte	.LASF181
 1797 0afc 02       		.byte	0x2
 1798 0afd D3       		.byte	0xd3
 1799 0afe 12010000 		.4byte	0x112
 1800 0b02 00       		.byte	0
 1801 0b03 00       		.byte	0
 1802 0b04 00       		.byte	0
 1803 0b05 16       		.uleb128 0x16
 1804 0b06 3A020000 		.4byte	0x23a
 1805 0b0a 18       		.uleb128 0x18
 1806 0b0b 70070000 		.4byte	.LASF184
 1807 0b0f 02       		.byte	0x2
 1808 0b10 5D01     		.2byte	0x15d
 1809 0b12 DE010000 		.4byte	0x1de
 1810 0b16 03       		.byte	0x3
 1811 0b17 420B0000 		.4byte	0xb42
 1812 0b1b 19       		.uleb128 0x19
 1813 0b1c BA090000 		.4byte	.LASF178
 1814 0b20 02       		.byte	0x2
 1815 0b21 5D01     		.2byte	0x15d
 1816 0b23 B40A0000 		.4byte	0xab4
 1817 0b27 1A       		.uleb128 0x1a
 1818 0b28 72657400 		.ascii	"ret\000"
 1819 0b2c 02       		.byte	0x2
 1820 0b2d 5F01     		.2byte	0x15f
 1821 0b2f DE010000 		.4byte	0x1de
 1822 0b33 1C       		.uleb128 0x1c
 1823 0b34 1B       		.uleb128 0x1b
 1824 0b35 87030000 		.4byte	.LASF111
 1825 0b39 02       		.byte	0x2
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 54


 1826 0b3a 6401     		.2byte	0x164
 1827 0b3c E9050000 		.4byte	0x5e9
 1828 0b40 00       		.byte	0
 1829 0b41 00       		.byte	0
 1830 0b42 18       		.uleb128 0x18
 1831 0b43 AA0B0000 		.4byte	.LASF185
 1832 0b47 02       		.byte	0x2
 1833 0b48 1201     		.2byte	0x112
 1834 0b4a E9050000 		.4byte	0x5e9
 1835 0b4e 03       		.byte	0x3
 1836 0b4f 600B0000 		.4byte	0xb60
 1837 0b53 19       		.uleb128 0x19
 1838 0b54 BA090000 		.4byte	.LASF178
 1839 0b58 02       		.byte	0x2
 1840 0b59 1201     		.2byte	0x112
 1841 0b5b 6B0B0000 		.4byte	0xb6b
 1842 0b5f 00       		.byte	0
 1843 0b60 10       		.uleb128 0x10
 1844 0b61 04       		.byte	0x4
 1845 0b62 660B0000 		.4byte	0xb66
 1846 0b66 16       		.uleb128 0x16
 1847 0b67 55070000 		.4byte	0x755
 1848 0b6b 16       		.uleb128 0x16
 1849 0b6c 600B0000 		.4byte	0xb60
 1850 0b70 18       		.uleb128 0x18
 1851 0b71 F6010000 		.4byte	.LASF186
 1852 0b75 04       		.byte	0x4
 1853 0b76 7E01     		.2byte	0x17e
 1854 0b78 DE010000 		.4byte	0x1de
 1855 0b7c 03       		.byte	0x3
 1856 0b7d 9A0B0000 		.4byte	0xb9a
 1857 0b81 19       		.uleb128 0x19
 1858 0b82 BA090000 		.4byte	.LASF178
 1859 0b86 04       		.byte	0x4
 1860 0b87 7E01     		.2byte	0x17e
 1861 0b89 A50B0000 		.4byte	0xba5
 1862 0b8d 1A       		.uleb128 0x1a
 1863 0b8e 72657400 		.ascii	"ret\000"
 1864 0b92 04       		.byte	0x4
 1865 0b93 8001     		.2byte	0x180
 1866 0b95 DE010000 		.4byte	0x1de
 1867 0b99 00       		.byte	0
 1868 0b9a 10       		.uleb128 0x10
 1869 0b9b 04       		.byte	0x4
 1870 0b9c A00B0000 		.4byte	0xba0
 1871 0ba0 16       		.uleb128 0x16
 1872 0ba1 470A0000 		.4byte	0xa47
 1873 0ba5 16       		.uleb128 0x16
 1874 0ba6 9A0B0000 		.4byte	0xb9a
 1875 0baa 18       		.uleb128 0x18
 1876 0bab E7030000 		.4byte	.LASF187
 1877 0baf 04       		.byte	0x4
 1878 0bb0 3501     		.2byte	0x135
 1879 0bb2 DE010000 		.4byte	0x1de
 1880 0bb6 03       		.byte	0x3
 1881 0bb7 060C0000 		.4byte	0xc06
 1882 0bbb 19       		.uleb128 0x19
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 55


 1883 0bbc BA090000 		.4byte	.LASF178
 1884 0bc0 04       		.byte	0x4
 1885 0bc1 3501     		.2byte	0x135
 1886 0bc3 0C0C0000 		.4byte	0xc0c
 1887 0bc7 19       		.uleb128 0x19
 1888 0bc8 87030000 		.4byte	.LASF111
 1889 0bcc 04       		.byte	0x4
 1890 0bcd 3501     		.2byte	0x135
 1891 0bcf 56090000 		.4byte	0x956
 1892 0bd3 1A       		.uleb128 0x1a
 1893 0bd4 72657400 		.ascii	"ret\000"
 1894 0bd8 04       		.byte	0x4
 1895 0bd9 3801     		.2byte	0x138
 1896 0bdb DE010000 		.4byte	0x1de
 1897 0bdf 1B       		.uleb128 0x1b
 1898 0be0 EE0A0000 		.4byte	.LASF179
 1899 0be4 04       		.byte	0x4
 1900 0be5 3901     		.2byte	0x139
 1901 0be7 C2000000 		.4byte	0xc2
 1902 0beb 1B       		.uleb128 0x1b
 1903 0bec 88000000 		.4byte	.LASF180
 1904 0bf0 04       		.byte	0x4
 1905 0bf1 4301     		.2byte	0x143
 1906 0bf3 E8060000 		.4byte	0x6e8
 1907 0bf7 1C       		.uleb128 0x1c
 1908 0bf8 1B       		.uleb128 0x1b
 1909 0bf9 560A0000 		.4byte	.LASF181
 1910 0bfd 04       		.byte	0x4
 1911 0bfe 4801     		.2byte	0x148
 1912 0c00 12010000 		.4byte	0x112
 1913 0c04 00       		.byte	0
 1914 0c05 00       		.byte	0
 1915 0c06 10       		.uleb128 0x10
 1916 0c07 04       		.byte	0x4
 1917 0c08 470A0000 		.4byte	0xa47
 1918 0c0c 16       		.uleb128 0x16
 1919 0c0d 060C0000 		.4byte	0xc06
 1920 0c11 18       		.uleb128 0x18
 1921 0c12 76090000 		.4byte	.LASF188
 1922 0c16 03       		.byte	0x3
 1923 0c17 1201     		.2byte	0x112
 1924 0c19 81070000 		.4byte	0x781
 1925 0c1d 03       		.byte	0x3
 1926 0c1e 2F0C0000 		.4byte	0xc2f
 1927 0c22 19       		.uleb128 0x19
 1928 0c23 BA090000 		.4byte	.LASF178
 1929 0c27 03       		.byte	0x3
 1930 0c28 1201     		.2byte	0x112
 1931 0c2a 3A0C0000 		.4byte	0xc3a
 1932 0c2e 00       		.byte	0
 1933 0c2f 10       		.uleb128 0x10
 1934 0c30 04       		.byte	0x4
 1935 0c31 350C0000 		.4byte	0xc35
 1936 0c35 16       		.uleb128 0x16
 1937 0c36 CE080000 		.4byte	0x8ce
 1938 0c3a 16       		.uleb128 0x16
 1939 0c3b 2F0C0000 		.4byte	0xc2f
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 56


 1940 0c3f 20       		.uleb128 0x20
 1941 0c40 6A010000 		.4byte	.LASF189
 1942 0c44 01       		.byte	0x1
 1943 0c45 2C       		.byte	0x2c
 1944 0c46 00000000 		.4byte	.LFB144
 1945 0c4a A4000000 		.4byte	.LFE144-.LFB144
 1946 0c4e 01       		.uleb128 0x1
 1947 0c4f 9C       		.byte	0x9c
 1948 0c50 D90D0000 		.4byte	0xdd9
 1949 0c54 21       		.uleb128 0x21
 1950 0c55 657600   		.ascii	"ev\000"
 1951 0c58 01       		.byte	0x1
 1952 0c59 2C       		.byte	0x2c
 1953 0c5a FF010000 		.4byte	0x1ff
 1954 0c5e 00000000 		.4byte	.LLST0
 1955 0c62 22       		.uleb128 0x22
 1956 0c63 0A0B0000 		.4byte	0xb0a
 1957 0c67 04000000 		.4byte	.LBB29
 1958 0c6b 98000000 		.4byte	.LBE29-.LBB29
 1959 0c6f 01       		.byte	0x1
 1960 0c70 32       		.byte	0x32
 1961 0c71 B60D0000 		.4byte	0xdb6
 1962 0c75 23       		.uleb128 0x23
 1963 0c76 1B0B0000 		.4byte	0xb1b
 1964 0c7a 24       		.uleb128 0x24
 1965 0c7b 04000000 		.4byte	.LBB30
 1966 0c7f 98000000 		.4byte	.LBE30-.LBB30
 1967 0c83 25       		.uleb128 0x25
 1968 0c84 270B0000 		.4byte	0xb27
 1969 0c88 21000000 		.4byte	.LLST1
 1970 0c8c 24       		.uleb128 0x24
 1971 0c8d 0E000000 		.4byte	.LBB31
 1972 0c91 8E000000 		.4byte	.LBE31-.LBB31
 1973 0c95 26       		.uleb128 0x26
 1974 0c96 340B0000 		.4byte	0xb34
 1975 0c9a 03       		.uleb128 0x3
 1976 0c9b 91       		.byte	0x91
 1977 0c9c E87E     		.sleb128 -152
 1978 0c9e 27       		.uleb128 0x27
 1979 0c9f 520A0000 		.4byte	0xa52
 1980 0ca3 2E000000 		.4byte	.LBB32
 1981 0ca7 40000000 		.4byte	.LBE32-.LBB32
 1982 0cab 02       		.byte	0x2
 1983 0cac 6A01     		.2byte	0x16a
 1984 0cae 280D0000 		.4byte	0xd28
 1985 0cb2 28       		.uleb128 0x28
 1986 0cb3 6F0A0000 		.4byte	0xa6f
 1987 0cb7 03       		.uleb128 0x3
 1988 0cb8 91       		.byte	0x91
 1989 0cb9 AC7F     		.sleb128 -84
 1990 0cbb 23       		.uleb128 0x23
 1991 0cbc 630A0000 		.4byte	0xa63
 1992 0cc0 24       		.uleb128 0x24
 1993 0cc1 2E000000 		.4byte	.LBB33
 1994 0cc5 40000000 		.4byte	.LBE33-.LBB33
 1995 0cc9 25       		.uleb128 0x25
 1996 0cca 7B0A0000 		.4byte	0xa7b
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 57


 1997 0cce 56000000 		.4byte	.LLST2
 1998 0cd2 25       		.uleb128 0x25
 1999 0cd3 870A0000 		.4byte	0xa87
 2000 0cd7 6A000000 		.4byte	.LLST3
 2001 0cdb 25       		.uleb128 0x25
 2002 0cdc 930A0000 		.4byte	0xa93
 2003 0ce0 A0000000 		.4byte	.LLST4
 2004 0ce4 29       		.uleb128 0x29
 2005 0ce5 52000000 		.4byte	.LBB34
 2006 0ce9 0A000000 		.4byte	.LBE34-.LBB34
 2007 0ced 040D0000 		.4byte	0xd04
 2008 0cf1 25       		.uleb128 0x25
 2009 0cf2 A00A0000 		.4byte	0xaa0
 2010 0cf6 B3000000 		.4byte	.LLST5
 2011 0cfa 2A       		.uleb128 0x2a
 2012 0cfb 5C000000 		.4byte	.LVL11
 2013 0cff C00F0000 		.4byte	0xfc0
 2014 0d03 00       		.byte	0
 2015 0d04 2B       		.uleb128 0x2b
 2016 0d05 3E000000 		.4byte	.LVL8
 2017 0d09 CC0F0000 		.4byte	0xfcc
 2018 0d0d 2C       		.uleb128 0x2c
 2019 0d0e 01       		.uleb128 0x1
 2020 0d0f 50       		.byte	0x50
 2021 0d10 02       		.uleb128 0x2
 2022 0d11 74       		.byte	0x74
 2023 0d12 00       		.sleb128 0
 2024 0d13 2C       		.uleb128 0x2c
 2025 0d14 01       		.uleb128 0x1
 2026 0d15 51       		.byte	0x51
 2027 0d16 08       		.uleb128 0x8
 2028 0d17 91       		.byte	0x91
 2029 0d18 00       		.sleb128 0
 2030 0d19 75       		.byte	0x75
 2031 0d1a 00       		.sleb128 0
 2032 0d1b 22       		.byte	0x22
 2033 0d1c 08       		.byte	0x8
 2034 0d1d 98       		.byte	0x98
 2035 0d1e 1C       		.byte	0x1c
 2036 0d1f 2C       		.uleb128 0x2c
 2037 0d20 01       		.uleb128 0x1
 2038 0d21 52       		.byte	0x52
 2039 0d22 02       		.uleb128 0x2
 2040 0d23 75       		.byte	0x75
 2041 0d24 00       		.sleb128 0
 2042 0d25 00       		.byte	0
 2043 0d26 00       		.byte	0
 2044 0d27 00       		.byte	0
 2045 0d28 27       		.uleb128 0x27
 2046 0d29 B90A0000 		.4byte	0xab9
 2047 0d2d 6E000000 		.4byte	.LBB35
 2048 0d31 2E000000 		.4byte	.LBE35-.LBB35
 2049 0d35 02       		.byte	0x2
 2050 0d36 6F01     		.2byte	0x16f
 2051 0d38 8D0D0000 		.4byte	0xd8d
 2052 0d3c 2D       		.uleb128 0x2d
 2053 0d3d D40A0000 		.4byte	0xad4
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 58


 2054 0d41 CC000000 		.4byte	.LLST6
 2055 0d45 23       		.uleb128 0x23
 2056 0d46 C90A0000 		.4byte	0xac9
 2057 0d4a 24       		.uleb128 0x24
 2058 0d4b 6E000000 		.4byte	.LBB36
 2059 0d4f 2E000000 		.4byte	.LBE36-.LBB36
 2060 0d53 25       		.uleb128 0x25
 2061 0d54 DF0A0000 		.4byte	0xadf
 2062 0d58 E0000000 		.4byte	.LLST7
 2063 0d5c 24       		.uleb128 0x24
 2064 0d5d 76000000 		.4byte	.LBB37
 2065 0d61 26000000 		.4byte	.LBE37-.LBB37
 2066 0d65 25       		.uleb128 0x25
 2067 0d66 EB0A0000 		.4byte	0xaeb
 2068 0d6a 16010000 		.4byte	.LLST8
 2069 0d6e 24       		.uleb128 0x24
 2070 0d6f 82000000 		.4byte	.LBB38
 2071 0d73 0A000000 		.4byte	.LBE38-.LBB38
 2072 0d77 25       		.uleb128 0x25
 2073 0d78 F70A0000 		.4byte	0xaf7
 2074 0d7c 29010000 		.4byte	.LLST9
 2075 0d80 2A       		.uleb128 0x2a
 2076 0d81 8C000000 		.4byte	.LVL19
 2077 0d85 C00F0000 		.4byte	0xfc0
 2078 0d89 00       		.byte	0
 2079 0d8a 00       		.byte	0
 2080 0d8b 00       		.byte	0
 2081 0d8c 00       		.byte	0
 2082 0d8d 2E       		.uleb128 0x2e
 2083 0d8e 18000000 		.4byte	.LVL3
 2084 0d92 CC0F0000 		.4byte	0xfcc
 2085 0d96 A70D0000 		.4byte	0xda7
 2086 0d9a 2C       		.uleb128 0x2c
 2087 0d9b 01       		.uleb128 0x1
 2088 0d9c 50       		.byte	0x50
 2089 0d9d 02       		.uleb128 0x2
 2090 0d9e 7D       		.byte	0x7d
 2091 0d9f 00       		.sleb128 0
 2092 0da0 2C       		.uleb128 0x2c
 2093 0da1 01       		.uleb128 0x1
 2094 0da2 52       		.byte	0x52
 2095 0da3 02       		.uleb128 0x2
 2096 0da4 08       		.byte	0x8
 2097 0da5 44       		.byte	0x44
 2098 0da6 00       		.byte	0
 2099 0da7 2F       		.uleb128 0x2f
 2100 0da8 1E000000 		.4byte	.LVL4
 2101 0dac 2C       		.uleb128 0x2c
 2102 0dad 01       		.uleb128 0x1
 2103 0dae 50       		.byte	0x50
 2104 0daf 02       		.uleb128 0x2
 2105 0db0 7D       		.byte	0x7d
 2106 0db1 00       		.sleb128 0
 2107 0db2 00       		.byte	0
 2108 0db3 00       		.byte	0
 2109 0db4 00       		.byte	0
 2110 0db5 00       		.byte	0
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 59


 2111 0db6 2B       		.uleb128 0x2b
 2112 0db7 2E000000 		.4byte	.LVL7
 2113 0dbb CC0F0000 		.4byte	0xfcc
 2114 0dbf 2C       		.uleb128 0x2c
 2115 0dc0 01       		.uleb128 0x1
 2116 0dc1 50       		.byte	0x50
 2117 0dc2 08       		.uleb128 0x8
 2118 0dc3 91       		.byte	0x91
 2119 0dc4 00       		.sleb128 0
 2120 0dc5 75       		.byte	0x75
 2121 0dc6 00       		.sleb128 0
 2122 0dc7 22       		.byte	0x22
 2123 0dc8 08       		.byte	0x8
 2124 0dc9 98       		.byte	0x98
 2125 0dca 1C       		.byte	0x1c
 2126 0dcb 2C       		.uleb128 0x2c
 2127 0dcc 01       		.uleb128 0x1
 2128 0dcd 51       		.byte	0x51
 2129 0dce 02       		.uleb128 0x2
 2130 0dcf 7D       		.byte	0x7d
 2131 0dd0 00       		.sleb128 0
 2132 0dd1 2C       		.uleb128 0x2c
 2133 0dd2 01       		.uleb128 0x1
 2134 0dd3 52       		.byte	0x52
 2135 0dd4 02       		.uleb128 0x2
 2136 0dd5 75       		.byte	0x75
 2137 0dd6 00       		.sleb128 0
 2138 0dd7 00       		.byte	0
 2139 0dd8 00       		.byte	0
 2140 0dd9 20       		.uleb128 0x20
 2141 0dda BC010000 		.4byte	.LASF190
 2142 0dde 01       		.byte	0x1
 2143 0ddf 48       		.byte	0x48
 2144 0de0 00000000 		.4byte	.LFB145
 2145 0de4 4C000000 		.4byte	.LFE145-.LFB145
 2146 0de8 01       		.uleb128 0x1
 2147 0de9 9C       		.byte	0x9c
 2148 0dea 690E0000 		.4byte	0xe69
 2149 0dee 21       		.uleb128 0x21
 2150 0def 657600   		.ascii	"ev\000"
 2151 0df2 01       		.byte	0x1
 2152 0df3 48       		.byte	0x48
 2153 0df4 FF010000 		.4byte	0x1ff
 2154 0df8 42010000 		.4byte	.LLST10
 2155 0dfc 30       		.uleb128 0x30
 2156 0dfd 1E0C0000 		.4byte	.LASF192
 2157 0e01 01       		.byte	0x1
 2158 0e02 4F       		.byte	0x4f
 2159 0e03 E9050000 		.4byte	0x5e9
 2160 0e07 03       		.uleb128 0x3
 2161 0e08 91       		.byte	0x91
 2162 0e09 B47F     		.sleb128 -76
 2163 0e0b 22       		.uleb128 0x22
 2164 0e0c 420B0000 		.4byte	0xb42
 2165 0e10 04000000 		.4byte	.LBB39
 2166 0e14 0A000000 		.4byte	.LBE39-.LBB39
 2167 0e18 01       		.byte	0x1
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 60


 2168 0e19 51       		.byte	0x51
 2169 0e1a 3B0E0000 		.4byte	0xe3b
 2170 0e1e 23       		.uleb128 0x23
 2171 0e1f 530B0000 		.4byte	0xb53
 2172 0e23 2B       		.uleb128 0x2b
 2173 0e24 0E000000 		.4byte	.LVL27
 2174 0e28 CC0F0000 		.4byte	0xfcc
 2175 0e2c 2C       		.uleb128 0x2c
 2176 0e2d 01       		.uleb128 0x1
 2177 0e2e 50       		.byte	0x50
 2178 0e2f 03       		.uleb128 0x3
 2179 0e30 91       		.byte	0x91
 2180 0e31 B47F     		.sleb128 -76
 2181 0e33 2C       		.uleb128 0x2c
 2182 0e34 01       		.uleb128 0x1
 2183 0e35 52       		.byte	0x52
 2184 0e36 02       		.uleb128 0x2
 2185 0e37 08       		.byte	0x8
 2186 0e38 44       		.byte	0x44
 2187 0e39 00       		.byte	0
 2188 0e3a 00       		.byte	0
 2189 0e3b 2A       		.uleb128 0x2a
 2190 0e3c 1A000000 		.4byte	.LVL28
 2191 0e40 D50F0000 		.4byte	0xfd5
 2192 0e44 2A       		.uleb128 0x2a
 2193 0e45 24000000 		.4byte	.LVL29
 2194 0e49 D50F0000 		.4byte	0xfd5
 2195 0e4d 2A       		.uleb128 0x2a
 2196 0e4e 2E000000 		.4byte	.LVL30
 2197 0e52 D50F0000 		.4byte	0xfd5
 2198 0e56 2A       		.uleb128 0x2a
 2199 0e57 38000000 		.4byte	.LVL31
 2200 0e5b D50F0000 		.4byte	0xfd5
 2201 0e5f 2A       		.uleb128 0x2a
 2202 0e60 42000000 		.4byte	.LVL32
 2203 0e64 D50F0000 		.4byte	0xfd5
 2204 0e68 00       		.byte	0
 2205 0e69 20       		.uleb128 0x20
 2206 0e6a C6080000 		.4byte	.LASF191
 2207 0e6e 01       		.byte	0x1
 2208 0e6f 86       		.byte	0x86
 2209 0e70 00000000 		.4byte	.LFB146
 2210 0e74 98000000 		.4byte	.LFE146-.LFB146
 2211 0e78 01       		.uleb128 0x1
 2212 0e79 9C       		.byte	0x9c
 2213 0e7a 570F0000 		.4byte	0xf57
 2214 0e7e 21       		.uleb128 0x21
 2215 0e7f 657600   		.ascii	"ev\000"
 2216 0e82 01       		.byte	0x1
 2217 0e83 86       		.byte	0x86
 2218 0e84 FF010000 		.4byte	0x1ff
 2219 0e88 63010000 		.4byte	.LLST11
 2220 0e8c 30       		.uleb128 0x30
 2221 0e8d 52080000 		.4byte	.LASF193
 2222 0e91 01       		.byte	0x1
 2223 0e92 8A       		.byte	0x8a
 2224 0e93 FA080000 		.4byte	0x8fa
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 61


 2225 0e97 02       		.uleb128 0x2
 2226 0e98 91       		.byte	0x91
 2227 0e99 50       		.sleb128 -48
 2228 0e9a 30       		.uleb128 0x30
 2229 0e9b 100B0000 		.4byte	.LASF194
 2230 0e9f 01       		.byte	0x1
 2231 0ea0 8C       		.byte	0x8c
 2232 0ea1 81070000 		.4byte	0x781
 2233 0ea5 03       		.uleb128 0x3
 2234 0ea6 91       		.byte	0x91
 2235 0ea7 B87F     		.sleb128 -72
 2236 0ea9 22       		.uleb128 0x22
 2237 0eaa 110C0000 		.4byte	0xc11
 2238 0eae 06000000 		.4byte	.LBB41
 2239 0eb2 10000000 		.4byte	.LBE41-.LBB41
 2240 0eb6 01       		.byte	0x1
 2241 0eb7 8E       		.byte	0x8e
 2242 0eb8 C20E0000 		.4byte	0xec2
 2243 0ebc 23       		.uleb128 0x23
 2244 0ebd 220C0000 		.4byte	0xc22
 2245 0ec1 00       		.byte	0
 2246 0ec2 22       		.uleb128 0x22
 2247 0ec3 AA0B0000 		.4byte	0xbaa
 2248 0ec7 3A000000 		.4byte	.LBB43
 2249 0ecb 40000000 		.4byte	.LBE43-.LBB43
 2250 0ecf 01       		.byte	0x1
 2251 0ed0 93       		.byte	0x93
 2252 0ed1 220F0000 		.4byte	0xf22
 2253 0ed5 28       		.uleb128 0x28
 2254 0ed6 C70B0000 		.4byte	0xbc7
 2255 0eda 03       		.uleb128 0x3
 2256 0edb 91       		.byte	0x91
 2257 0edc A07F     		.sleb128 -96
 2258 0ede 23       		.uleb128 0x23
 2259 0edf BB0B0000 		.4byte	0xbbb
 2260 0ee3 24       		.uleb128 0x24
 2261 0ee4 3A000000 		.4byte	.LBB44
 2262 0ee8 40000000 		.4byte	.LBE44-.LBB44
 2263 0eec 31       		.uleb128 0x31
 2264 0eed D30B0000 		.4byte	0xbd3
 2265 0ef1 00       		.byte	0
 2266 0ef2 25       		.uleb128 0x25
 2267 0ef3 DF0B0000 		.4byte	0xbdf
 2268 0ef7 84010000 		.4byte	.LLST12
 2269 0efb 25       		.uleb128 0x25
 2270 0efc EB0B0000 		.4byte	0xbeb
 2271 0f00 BA010000 		.4byte	.LLST13
 2272 0f04 24       		.uleb128 0x24
 2273 0f05 60000000 		.4byte	.LBB45
 2274 0f09 0A000000 		.4byte	.LBE45-.LBB45
 2275 0f0d 25       		.uleb128 0x25
 2276 0f0e F80B0000 		.4byte	0xbf8
 2277 0f12 CD010000 		.4byte	.LLST14
 2278 0f16 2A       		.uleb128 0x2a
 2279 0f17 6A000000 		.4byte	.LVL41
 2280 0f1b C00F0000 		.4byte	0xfc0
 2281 0f1f 00       		.byte	0
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 62


 2282 0f20 00       		.byte	0
 2283 0f21 00       		.byte	0
 2284 0f22 32       		.uleb128 0x32
 2285 0f23 700B0000 		.4byte	0xb70
 2286 0f27 7A000000 		.4byte	.LBB46
 2287 0f2b 10000000 		.4byte	.LBE46-.LBB46
 2288 0f2f 01       		.byte	0x1
 2289 0f30 94       		.byte	0x94
 2290 0f31 23       		.uleb128 0x23
 2291 0f32 810B0000 		.4byte	0xb81
 2292 0f36 24       		.uleb128 0x24
 2293 0f37 7A000000 		.4byte	.LBB47
 2294 0f3b 10000000 		.4byte	.LBE47-.LBB47
 2295 0f3f 25       		.uleb128 0x25
 2296 0f40 8D0B0000 		.4byte	0xb8d
 2297 0f44 E6010000 		.4byte	.LLST15
 2298 0f48 2F       		.uleb128 0x2f
 2299 0f49 8A000000 		.4byte	.LVL46
 2300 0f4d 2C       		.uleb128 0x2c
 2301 0f4e 01       		.uleb128 0x1
 2302 0f4f 50       		.byte	0x50
 2303 0f50 02       		.uleb128 0x2
 2304 0f51 76       		.byte	0x76
 2305 0f52 00       		.sleb128 0
 2306 0f53 00       		.byte	0
 2307 0f54 00       		.byte	0
 2308 0f55 00       		.byte	0
 2309 0f56 00       		.byte	0
 2310 0f57 33       		.uleb128 0x33
 2311 0f58 C1040000 		.4byte	.LASF195
 2312 0f5c 14       		.byte	0x14
 2313 0f5d 40       		.byte	0x40
 2314 0f5e F1000000 		.4byte	0xf1
 2315 0f62 33       		.uleb128 0x33
 2316 0f63 5A060000 		.4byte	.LASF196
 2317 0f67 14       		.byte	0x14
 2318 0f68 47       		.byte	0x47
 2319 0f69 FC000000 		.4byte	0xfc
 2320 0f6d 33       		.uleb128 0x33
 2321 0f6e 8E060000 		.4byte	.LASF197
 2322 0f72 14       		.byte	0x14
 2323 0f73 4A       		.byte	0x4a
 2324 0f74 F1000000 		.4byte	0xf1
 2325 0f78 33       		.uleb128 0x33
 2326 0f79 19030000 		.4byte	.LASF198
 2327 0f7d 15       		.byte	0x15
 2328 0f7e 48       		.byte	0x48
 2329 0f7f 07010000 		.4byte	0x107
 2330 0f83 33       		.uleb128 0x33
 2331 0f84 6B0B0000 		.4byte	.LASF199
 2332 0f88 16       		.byte	0x16
 2333 0f89 44       		.byte	0x44
 2334 0f8a F1000000 		.4byte	0xf1
 2335 0f8e 34       		.uleb128 0x34
 2336 0f8f 5D010000 		.4byte	.LASF200
 2337 0f93 17       		.byte	0x17
 2338 0f94 1207     		.2byte	0x712
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 63


 2339 0f96 9A0F0000 		.4byte	0xf9a
 2340 0f9a 35       		.uleb128 0x35
 2341 0f9b 97000000 		.4byte	0x97
 2342 0f9f 33       		.uleb128 0x33
 2343 0fa0 EE040000 		.4byte	.LASF201
 2344 0fa4 18       		.byte	0x18
 2345 0fa5 29       		.byte	0x29
 2346 0fa6 55070000 		.4byte	0x755
 2347 0faa 33       		.uleb128 0x33
 2348 0fab 5E070000 		.4byte	.LASF202
 2349 0faf 18       		.byte	0x18
 2350 0fb0 38       		.byte	0x38
 2351 0fb1 CE080000 		.4byte	0x8ce
 2352 0fb5 33       		.uleb128 0x33
 2353 0fb6 86070000 		.4byte	.LASF203
 2354 0fba 18       		.byte	0x18
 2355 0fbb 47       		.byte	0x47
 2356 0fbc 470A0000 		.4byte	0xa47
 2357 0fc0 36       		.uleb128 0x36
 2358 0fc1 04010000 		.4byte	.LASF204
 2359 0fc5 04010000 		.4byte	.LASF204
 2360 0fc9 19       		.byte	0x19
 2361 0fca 4A01     		.2byte	0x14a
 2362 0fcc 37       		.uleb128 0x37
 2363 0fcd 7A020000 		.4byte	.LASF209
 2364 0fd1 7A020000 		.4byte	.LASF209
 2365 0fd5 38       		.uleb128 0x38
 2366 0fd6 17070000 		.4byte	.LASF205
 2367 0fda 17070000 		.4byte	.LASF205
 2368 0fde 1A       		.byte	0x1a
 2369 0fdf 64       		.byte	0x64
 2370 0fe0 00       		.byte	0
 2371              		.section	.debug_abbrev,"",%progbits
 2372              	.Ldebug_abbrev0:
 2373 0000 01       		.uleb128 0x1
 2374 0001 11       		.uleb128 0x11
 2375 0002 01       		.byte	0x1
 2376 0003 25       		.uleb128 0x25
 2377 0004 0E       		.uleb128 0xe
 2378 0005 13       		.uleb128 0x13
 2379 0006 0B       		.uleb128 0xb
 2380 0007 03       		.uleb128 0x3
 2381 0008 0E       		.uleb128 0xe
 2382 0009 1B       		.uleb128 0x1b
 2383 000a 0E       		.uleb128 0xe
 2384 000b 55       		.uleb128 0x55
 2385 000c 17       		.uleb128 0x17
 2386 000d 11       		.uleb128 0x11
 2387 000e 01       		.uleb128 0x1
 2388 000f 10       		.uleb128 0x10
 2389 0010 17       		.uleb128 0x17
 2390 0011 00       		.byte	0
 2391 0012 00       		.byte	0
 2392 0013 02       		.uleb128 0x2
 2393 0014 24       		.uleb128 0x24
 2394 0015 00       		.byte	0
 2395 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 64


 2396 0017 0B       		.uleb128 0xb
 2397 0018 3E       		.uleb128 0x3e
 2398 0019 0B       		.uleb128 0xb
 2399 001a 03       		.uleb128 0x3
 2400 001b 0E       		.uleb128 0xe
 2401 001c 00       		.byte	0
 2402 001d 00       		.byte	0
 2403 001e 03       		.uleb128 0x3
 2404 001f 16       		.uleb128 0x16
 2405 0020 00       		.byte	0
 2406 0021 03       		.uleb128 0x3
 2407 0022 0E       		.uleb128 0xe
 2408 0023 3A       		.uleb128 0x3a
 2409 0024 0B       		.uleb128 0xb
 2410 0025 3B       		.uleb128 0x3b
 2411 0026 0B       		.uleb128 0xb
 2412 0027 49       		.uleb128 0x49
 2413 0028 13       		.uleb128 0x13
 2414 0029 00       		.byte	0
 2415 002a 00       		.byte	0
 2416 002b 04       		.uleb128 0x4
 2417 002c 24       		.uleb128 0x24
 2418 002d 00       		.byte	0
 2419 002e 0B       		.uleb128 0xb
 2420 002f 0B       		.uleb128 0xb
 2421 0030 3E       		.uleb128 0x3e
 2422 0031 0B       		.uleb128 0xb
 2423 0032 03       		.uleb128 0x3
 2424 0033 08       		.uleb128 0x8
 2425 0034 00       		.byte	0
 2426 0035 00       		.byte	0
 2427 0036 05       		.uleb128 0x5
 2428 0037 16       		.uleb128 0x16
 2429 0038 00       		.byte	0
 2430 0039 03       		.uleb128 0x3
 2431 003a 0E       		.uleb128 0xe
 2432 003b 3A       		.uleb128 0x3a
 2433 003c 0B       		.uleb128 0xb
 2434 003d 3B       		.uleb128 0x3b
 2435 003e 05       		.uleb128 0x5
 2436 003f 49       		.uleb128 0x49
 2437 0040 13       		.uleb128 0x13
 2438 0041 00       		.byte	0
 2439 0042 00       		.byte	0
 2440 0043 06       		.uleb128 0x6
 2441 0044 04       		.uleb128 0x4
 2442 0045 01       		.byte	0x1
 2443 0046 0B       		.uleb128 0xb
 2444 0047 0B       		.uleb128 0xb
 2445 0048 49       		.uleb128 0x49
 2446 0049 13       		.uleb128 0x13
 2447 004a 3A       		.uleb128 0x3a
 2448 004b 0B       		.uleb128 0xb
 2449 004c 3B       		.uleb128 0x3b
 2450 004d 0B       		.uleb128 0xb
 2451 004e 01       		.uleb128 0x1
 2452 004f 13       		.uleb128 0x13
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 65


 2453 0050 00       		.byte	0
 2454 0051 00       		.byte	0
 2455 0052 07       		.uleb128 0x7
 2456 0053 28       		.uleb128 0x28
 2457 0054 00       		.byte	0
 2458 0055 03       		.uleb128 0x3
 2459 0056 0E       		.uleb128 0xe
 2460 0057 1C       		.uleb128 0x1c
 2461 0058 0B       		.uleb128 0xb
 2462 0059 00       		.byte	0
 2463 005a 00       		.byte	0
 2464 005b 08       		.uleb128 0x8
 2465 005c 28       		.uleb128 0x28
 2466 005d 00       		.byte	0
 2467 005e 03       		.uleb128 0x3
 2468 005f 0E       		.uleb128 0xe
 2469 0060 1C       		.uleb128 0x1c
 2470 0061 0D       		.uleb128 0xd
 2471 0062 00       		.byte	0
 2472 0063 00       		.byte	0
 2473 0064 09       		.uleb128 0x9
 2474 0065 01       		.uleb128 0x1
 2475 0066 01       		.byte	0x1
 2476 0067 49       		.uleb128 0x49
 2477 0068 13       		.uleb128 0x13
 2478 0069 01       		.uleb128 0x1
 2479 006a 13       		.uleb128 0x13
 2480 006b 00       		.byte	0
 2481 006c 00       		.byte	0
 2482 006d 0A       		.uleb128 0xa
 2483 006e 21       		.uleb128 0x21
 2484 006f 00       		.byte	0
 2485 0070 00       		.byte	0
 2486 0071 00       		.byte	0
 2487 0072 0B       		.uleb128 0xb
 2488 0073 28       		.uleb128 0x28
 2489 0074 00       		.byte	0
 2490 0075 03       		.uleb128 0x3
 2491 0076 0E       		.uleb128 0xe
 2492 0077 1C       		.uleb128 0x1c
 2493 0078 05       		.uleb128 0x5
 2494 0079 00       		.byte	0
 2495 007a 00       		.byte	0
 2496 007b 0C       		.uleb128 0xc
 2497 007c 28       		.uleb128 0x28
 2498 007d 00       		.byte	0
 2499 007e 03       		.uleb128 0x3
 2500 007f 08       		.uleb128 0x8
 2501 0080 1C       		.uleb128 0x1c
 2502 0081 0B       		.uleb128 0xb
 2503 0082 00       		.byte	0
 2504 0083 00       		.byte	0
 2505 0084 0D       		.uleb128 0xd
 2506 0085 13       		.uleb128 0x13
 2507 0086 01       		.byte	0x1
 2508 0087 0B       		.uleb128 0xb
 2509 0088 0B       		.uleb128 0xb
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 66


 2510 0089 3A       		.uleb128 0x3a
 2511 008a 0B       		.uleb128 0xb
 2512 008b 3B       		.uleb128 0x3b
 2513 008c 0B       		.uleb128 0xb
 2514 008d 01       		.uleb128 0x1
 2515 008e 13       		.uleb128 0x13
 2516 008f 00       		.byte	0
 2517 0090 00       		.byte	0
 2518 0091 0E       		.uleb128 0xe
 2519 0092 0D       		.uleb128 0xd
 2520 0093 00       		.byte	0
 2521 0094 03       		.uleb128 0x3
 2522 0095 0E       		.uleb128 0xe
 2523 0096 3A       		.uleb128 0x3a
 2524 0097 0B       		.uleb128 0xb
 2525 0098 3B       		.uleb128 0x3b
 2526 0099 0B       		.uleb128 0xb
 2527 009a 49       		.uleb128 0x49
 2528 009b 13       		.uleb128 0x13
 2529 009c 38       		.uleb128 0x38
 2530 009d 0B       		.uleb128 0xb
 2531 009e 00       		.byte	0
 2532 009f 00       		.byte	0
 2533 00a0 0F       		.uleb128 0xf
 2534 00a1 13       		.uleb128 0x13
 2535 00a2 01       		.byte	0x1
 2536 00a3 03       		.uleb128 0x3
 2537 00a4 0E       		.uleb128 0xe
 2538 00a5 0B       		.uleb128 0xb
 2539 00a6 0B       		.uleb128 0xb
 2540 00a7 3A       		.uleb128 0x3a
 2541 00a8 0B       		.uleb128 0xb
 2542 00a9 3B       		.uleb128 0x3b
 2543 00aa 0B       		.uleb128 0xb
 2544 00ab 01       		.uleb128 0x1
 2545 00ac 13       		.uleb128 0x13
 2546 00ad 00       		.byte	0
 2547 00ae 00       		.byte	0
 2548 00af 10       		.uleb128 0x10
 2549 00b0 0F       		.uleb128 0xf
 2550 00b1 00       		.byte	0
 2551 00b2 0B       		.uleb128 0xb
 2552 00b3 0B       		.uleb128 0xb
 2553 00b4 49       		.uleb128 0x49
 2554 00b5 13       		.uleb128 0x13
 2555 00b6 00       		.byte	0
 2556 00b7 00       		.byte	0
 2557 00b8 11       		.uleb128 0x11
 2558 00b9 15       		.uleb128 0x15
 2559 00ba 01       		.byte	0x1
 2560 00bb 01       		.uleb128 0x1
 2561 00bc 13       		.uleb128 0x13
 2562 00bd 00       		.byte	0
 2563 00be 00       		.byte	0
 2564 00bf 12       		.uleb128 0x12
 2565 00c0 18       		.uleb128 0x18
 2566 00c1 00       		.byte	0
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 67


 2567 00c2 00       		.byte	0
 2568 00c3 00       		.byte	0
 2569 00c4 13       		.uleb128 0x13
 2570 00c5 15       		.uleb128 0x15
 2571 00c6 01       		.byte	0x1
 2572 00c7 49       		.uleb128 0x49
 2573 00c8 13       		.uleb128 0x13
 2574 00c9 01       		.uleb128 0x1
 2575 00ca 13       		.uleb128 0x13
 2576 00cb 00       		.byte	0
 2577 00cc 00       		.byte	0
 2578 00cd 14       		.uleb128 0x14
 2579 00ce 15       		.uleb128 0x15
 2580 00cf 01       		.byte	0x1
 2581 00d0 27       		.uleb128 0x27
 2582 00d1 19       		.uleb128 0x19
 2583 00d2 49       		.uleb128 0x49
 2584 00d3 13       		.uleb128 0x13
 2585 00d4 01       		.uleb128 0x1
 2586 00d5 13       		.uleb128 0x13
 2587 00d6 00       		.byte	0
 2588 00d7 00       		.byte	0
 2589 00d8 15       		.uleb128 0x15
 2590 00d9 05       		.uleb128 0x5
 2591 00da 00       		.byte	0
 2592 00db 49       		.uleb128 0x49
 2593 00dc 13       		.uleb128 0x13
 2594 00dd 00       		.byte	0
 2595 00de 00       		.byte	0
 2596 00df 16       		.uleb128 0x16
 2597 00e0 26       		.uleb128 0x26
 2598 00e1 00       		.byte	0
 2599 00e2 49       		.uleb128 0x49
 2600 00e3 13       		.uleb128 0x13
 2601 00e4 00       		.byte	0
 2602 00e5 00       		.byte	0
 2603 00e6 17       		.uleb128 0x17
 2604 00e7 0D       		.uleb128 0xd
 2605 00e8 00       		.byte	0
 2606 00e9 03       		.uleb128 0x3
 2607 00ea 08       		.uleb128 0x8
 2608 00eb 3A       		.uleb128 0x3a
 2609 00ec 0B       		.uleb128 0xb
 2610 00ed 3B       		.uleb128 0x3b
 2611 00ee 0B       		.uleb128 0xb
 2612 00ef 49       		.uleb128 0x49
 2613 00f0 13       		.uleb128 0x13
 2614 00f1 38       		.uleb128 0x38
 2615 00f2 0B       		.uleb128 0xb
 2616 00f3 00       		.byte	0
 2617 00f4 00       		.byte	0
 2618 00f5 18       		.uleb128 0x18
 2619 00f6 2E       		.uleb128 0x2e
 2620 00f7 01       		.byte	0x1
 2621 00f8 3F       		.uleb128 0x3f
 2622 00f9 19       		.uleb128 0x19
 2623 00fa 03       		.uleb128 0x3
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 68


 2624 00fb 0E       		.uleb128 0xe
 2625 00fc 3A       		.uleb128 0x3a
 2626 00fd 0B       		.uleb128 0xb
 2627 00fe 3B       		.uleb128 0x3b
 2628 00ff 05       		.uleb128 0x5
 2629 0100 27       		.uleb128 0x27
 2630 0101 19       		.uleb128 0x19
 2631 0102 49       		.uleb128 0x49
 2632 0103 13       		.uleb128 0x13
 2633 0104 20       		.uleb128 0x20
 2634 0105 0B       		.uleb128 0xb
 2635 0106 01       		.uleb128 0x1
 2636 0107 13       		.uleb128 0x13
 2637 0108 00       		.byte	0
 2638 0109 00       		.byte	0
 2639 010a 19       		.uleb128 0x19
 2640 010b 05       		.uleb128 0x5
 2641 010c 00       		.byte	0
 2642 010d 03       		.uleb128 0x3
 2643 010e 0E       		.uleb128 0xe
 2644 010f 3A       		.uleb128 0x3a
 2645 0110 0B       		.uleb128 0xb
 2646 0111 3B       		.uleb128 0x3b
 2647 0112 05       		.uleb128 0x5
 2648 0113 49       		.uleb128 0x49
 2649 0114 13       		.uleb128 0x13
 2650 0115 00       		.byte	0
 2651 0116 00       		.byte	0
 2652 0117 1A       		.uleb128 0x1a
 2653 0118 34       		.uleb128 0x34
 2654 0119 00       		.byte	0
 2655 011a 03       		.uleb128 0x3
 2656 011b 08       		.uleb128 0x8
 2657 011c 3A       		.uleb128 0x3a
 2658 011d 0B       		.uleb128 0xb
 2659 011e 3B       		.uleb128 0x3b
 2660 011f 05       		.uleb128 0x5
 2661 0120 49       		.uleb128 0x49
 2662 0121 13       		.uleb128 0x13
 2663 0122 00       		.byte	0
 2664 0123 00       		.byte	0
 2665 0124 1B       		.uleb128 0x1b
 2666 0125 34       		.uleb128 0x34
 2667 0126 00       		.byte	0
 2668 0127 03       		.uleb128 0x3
 2669 0128 0E       		.uleb128 0xe
 2670 0129 3A       		.uleb128 0x3a
 2671 012a 0B       		.uleb128 0xb
 2672 012b 3B       		.uleb128 0x3b
 2673 012c 05       		.uleb128 0x5
 2674 012d 49       		.uleb128 0x49
 2675 012e 13       		.uleb128 0x13
 2676 012f 00       		.byte	0
 2677 0130 00       		.byte	0
 2678 0131 1C       		.uleb128 0x1c
 2679 0132 0B       		.uleb128 0xb
 2680 0133 01       		.byte	0x1
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 69


 2681 0134 00       		.byte	0
 2682 0135 00       		.byte	0
 2683 0136 1D       		.uleb128 0x1d
 2684 0137 2E       		.uleb128 0x2e
 2685 0138 01       		.byte	0x1
 2686 0139 3F       		.uleb128 0x3f
 2687 013a 19       		.uleb128 0x19
 2688 013b 03       		.uleb128 0x3
 2689 013c 0E       		.uleb128 0xe
 2690 013d 3A       		.uleb128 0x3a
 2691 013e 0B       		.uleb128 0xb
 2692 013f 3B       		.uleb128 0x3b
 2693 0140 0B       		.uleb128 0xb
 2694 0141 27       		.uleb128 0x27
 2695 0142 19       		.uleb128 0x19
 2696 0143 49       		.uleb128 0x49
 2697 0144 13       		.uleb128 0x13
 2698 0145 20       		.uleb128 0x20
 2699 0146 0B       		.uleb128 0xb
 2700 0147 01       		.uleb128 0x1
 2701 0148 13       		.uleb128 0x13
 2702 0149 00       		.byte	0
 2703 014a 00       		.byte	0
 2704 014b 1E       		.uleb128 0x1e
 2705 014c 05       		.uleb128 0x5
 2706 014d 00       		.byte	0
 2707 014e 03       		.uleb128 0x3
 2708 014f 0E       		.uleb128 0xe
 2709 0150 3A       		.uleb128 0x3a
 2710 0151 0B       		.uleb128 0xb
 2711 0152 3B       		.uleb128 0x3b
 2712 0153 0B       		.uleb128 0xb
 2713 0154 49       		.uleb128 0x49
 2714 0155 13       		.uleb128 0x13
 2715 0156 00       		.byte	0
 2716 0157 00       		.byte	0
 2717 0158 1F       		.uleb128 0x1f
 2718 0159 34       		.uleb128 0x34
 2719 015a 00       		.byte	0
 2720 015b 03       		.uleb128 0x3
 2721 015c 0E       		.uleb128 0xe
 2722 015d 3A       		.uleb128 0x3a
 2723 015e 0B       		.uleb128 0xb
 2724 015f 3B       		.uleb128 0x3b
 2725 0160 0B       		.uleb128 0xb
 2726 0161 49       		.uleb128 0x49
 2727 0162 13       		.uleb128 0x13
 2728 0163 00       		.byte	0
 2729 0164 00       		.byte	0
 2730 0165 20       		.uleb128 0x20
 2731 0166 2E       		.uleb128 0x2e
 2732 0167 01       		.byte	0x1
 2733 0168 3F       		.uleb128 0x3f
 2734 0169 19       		.uleb128 0x19
 2735 016a 03       		.uleb128 0x3
 2736 016b 0E       		.uleb128 0xe
 2737 016c 3A       		.uleb128 0x3a
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 70


 2738 016d 0B       		.uleb128 0xb
 2739 016e 3B       		.uleb128 0x3b
 2740 016f 0B       		.uleb128 0xb
 2741 0170 27       		.uleb128 0x27
 2742 0171 19       		.uleb128 0x19
 2743 0172 11       		.uleb128 0x11
 2744 0173 01       		.uleb128 0x1
 2745 0174 12       		.uleb128 0x12
 2746 0175 06       		.uleb128 0x6
 2747 0176 40       		.uleb128 0x40
 2748 0177 18       		.uleb128 0x18
 2749 0178 9742     		.uleb128 0x2117
 2750 017a 19       		.uleb128 0x19
 2751 017b 01       		.uleb128 0x1
 2752 017c 13       		.uleb128 0x13
 2753 017d 00       		.byte	0
 2754 017e 00       		.byte	0
 2755 017f 21       		.uleb128 0x21
 2756 0180 05       		.uleb128 0x5
 2757 0181 00       		.byte	0
 2758 0182 03       		.uleb128 0x3
 2759 0183 08       		.uleb128 0x8
 2760 0184 3A       		.uleb128 0x3a
 2761 0185 0B       		.uleb128 0xb
 2762 0186 3B       		.uleb128 0x3b
 2763 0187 0B       		.uleb128 0xb
 2764 0188 49       		.uleb128 0x49
 2765 0189 13       		.uleb128 0x13
 2766 018a 02       		.uleb128 0x2
 2767 018b 17       		.uleb128 0x17
 2768 018c 00       		.byte	0
 2769 018d 00       		.byte	0
 2770 018e 22       		.uleb128 0x22
 2771 018f 1D       		.uleb128 0x1d
 2772 0190 01       		.byte	0x1
 2773 0191 31       		.uleb128 0x31
 2774 0192 13       		.uleb128 0x13
 2775 0193 11       		.uleb128 0x11
 2776 0194 01       		.uleb128 0x1
 2777 0195 12       		.uleb128 0x12
 2778 0196 06       		.uleb128 0x6
 2779 0197 58       		.uleb128 0x58
 2780 0198 0B       		.uleb128 0xb
 2781 0199 59       		.uleb128 0x59
 2782 019a 0B       		.uleb128 0xb
 2783 019b 01       		.uleb128 0x1
 2784 019c 13       		.uleb128 0x13
 2785 019d 00       		.byte	0
 2786 019e 00       		.byte	0
 2787 019f 23       		.uleb128 0x23
 2788 01a0 05       		.uleb128 0x5
 2789 01a1 00       		.byte	0
 2790 01a2 31       		.uleb128 0x31
 2791 01a3 13       		.uleb128 0x13
 2792 01a4 00       		.byte	0
 2793 01a5 00       		.byte	0
 2794 01a6 24       		.uleb128 0x24
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 71


 2795 01a7 0B       		.uleb128 0xb
 2796 01a8 01       		.byte	0x1
 2797 01a9 11       		.uleb128 0x11
 2798 01aa 01       		.uleb128 0x1
 2799 01ab 12       		.uleb128 0x12
 2800 01ac 06       		.uleb128 0x6
 2801 01ad 00       		.byte	0
 2802 01ae 00       		.byte	0
 2803 01af 25       		.uleb128 0x25
 2804 01b0 34       		.uleb128 0x34
 2805 01b1 00       		.byte	0
 2806 01b2 31       		.uleb128 0x31
 2807 01b3 13       		.uleb128 0x13
 2808 01b4 02       		.uleb128 0x2
 2809 01b5 17       		.uleb128 0x17
 2810 01b6 00       		.byte	0
 2811 01b7 00       		.byte	0
 2812 01b8 26       		.uleb128 0x26
 2813 01b9 34       		.uleb128 0x34
 2814 01ba 00       		.byte	0
 2815 01bb 31       		.uleb128 0x31
 2816 01bc 13       		.uleb128 0x13
 2817 01bd 02       		.uleb128 0x2
 2818 01be 18       		.uleb128 0x18
 2819 01bf 00       		.byte	0
 2820 01c0 00       		.byte	0
 2821 01c1 27       		.uleb128 0x27
 2822 01c2 1D       		.uleb128 0x1d
 2823 01c3 01       		.byte	0x1
 2824 01c4 31       		.uleb128 0x31
 2825 01c5 13       		.uleb128 0x13
 2826 01c6 11       		.uleb128 0x11
 2827 01c7 01       		.uleb128 0x1
 2828 01c8 12       		.uleb128 0x12
 2829 01c9 06       		.uleb128 0x6
 2830 01ca 58       		.uleb128 0x58
 2831 01cb 0B       		.uleb128 0xb
 2832 01cc 59       		.uleb128 0x59
 2833 01cd 05       		.uleb128 0x5
 2834 01ce 01       		.uleb128 0x1
 2835 01cf 13       		.uleb128 0x13
 2836 01d0 00       		.byte	0
 2837 01d1 00       		.byte	0
 2838 01d2 28       		.uleb128 0x28
 2839 01d3 05       		.uleb128 0x5
 2840 01d4 00       		.byte	0
 2841 01d5 31       		.uleb128 0x31
 2842 01d6 13       		.uleb128 0x13
 2843 01d7 02       		.uleb128 0x2
 2844 01d8 18       		.uleb128 0x18
 2845 01d9 00       		.byte	0
 2846 01da 00       		.byte	0
 2847 01db 29       		.uleb128 0x29
 2848 01dc 0B       		.uleb128 0xb
 2849 01dd 01       		.byte	0x1
 2850 01de 11       		.uleb128 0x11
 2851 01df 01       		.uleb128 0x1
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 72


 2852 01e0 12       		.uleb128 0x12
 2853 01e1 06       		.uleb128 0x6
 2854 01e2 01       		.uleb128 0x1
 2855 01e3 13       		.uleb128 0x13
 2856 01e4 00       		.byte	0
 2857 01e5 00       		.byte	0
 2858 01e6 2A       		.uleb128 0x2a
 2859 01e7 898201   		.uleb128 0x4109
 2860 01ea 00       		.byte	0
 2861 01eb 11       		.uleb128 0x11
 2862 01ec 01       		.uleb128 0x1
 2863 01ed 31       		.uleb128 0x31
 2864 01ee 13       		.uleb128 0x13
 2865 01ef 00       		.byte	0
 2866 01f0 00       		.byte	0
 2867 01f1 2B       		.uleb128 0x2b
 2868 01f2 898201   		.uleb128 0x4109
 2869 01f5 01       		.byte	0x1
 2870 01f6 11       		.uleb128 0x11
 2871 01f7 01       		.uleb128 0x1
 2872 01f8 31       		.uleb128 0x31
 2873 01f9 13       		.uleb128 0x13
 2874 01fa 00       		.byte	0
 2875 01fb 00       		.byte	0
 2876 01fc 2C       		.uleb128 0x2c
 2877 01fd 8A8201   		.uleb128 0x410a
 2878 0200 00       		.byte	0
 2879 0201 02       		.uleb128 0x2
 2880 0202 18       		.uleb128 0x18
 2881 0203 9142     		.uleb128 0x2111
 2882 0205 18       		.uleb128 0x18
 2883 0206 00       		.byte	0
 2884 0207 00       		.byte	0
 2885 0208 2D       		.uleb128 0x2d
 2886 0209 05       		.uleb128 0x5
 2887 020a 00       		.byte	0
 2888 020b 31       		.uleb128 0x31
 2889 020c 13       		.uleb128 0x13
 2890 020d 02       		.uleb128 0x2
 2891 020e 17       		.uleb128 0x17
 2892 020f 00       		.byte	0
 2893 0210 00       		.byte	0
 2894 0211 2E       		.uleb128 0x2e
 2895 0212 898201   		.uleb128 0x4109
 2896 0215 01       		.byte	0x1
 2897 0216 11       		.uleb128 0x11
 2898 0217 01       		.uleb128 0x1
 2899 0218 31       		.uleb128 0x31
 2900 0219 13       		.uleb128 0x13
 2901 021a 01       		.uleb128 0x1
 2902 021b 13       		.uleb128 0x13
 2903 021c 00       		.byte	0
 2904 021d 00       		.byte	0
 2905 021e 2F       		.uleb128 0x2f
 2906 021f 898201   		.uleb128 0x4109
 2907 0222 01       		.byte	0x1
 2908 0223 11       		.uleb128 0x11
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 73


 2909 0224 01       		.uleb128 0x1
 2910 0225 00       		.byte	0
 2911 0226 00       		.byte	0
 2912 0227 30       		.uleb128 0x30
 2913 0228 34       		.uleb128 0x34
 2914 0229 00       		.byte	0
 2915 022a 03       		.uleb128 0x3
 2916 022b 0E       		.uleb128 0xe
 2917 022c 3A       		.uleb128 0x3a
 2918 022d 0B       		.uleb128 0xb
 2919 022e 3B       		.uleb128 0x3b
 2920 022f 0B       		.uleb128 0xb
 2921 0230 49       		.uleb128 0x49
 2922 0231 13       		.uleb128 0x13
 2923 0232 02       		.uleb128 0x2
 2924 0233 18       		.uleb128 0x18
 2925 0234 00       		.byte	0
 2926 0235 00       		.byte	0
 2927 0236 31       		.uleb128 0x31
 2928 0237 34       		.uleb128 0x34
 2929 0238 00       		.byte	0
 2930 0239 31       		.uleb128 0x31
 2931 023a 13       		.uleb128 0x13
 2932 023b 1C       		.uleb128 0x1c
 2933 023c 0B       		.uleb128 0xb
 2934 023d 00       		.byte	0
 2935 023e 00       		.byte	0
 2936 023f 32       		.uleb128 0x32
 2937 0240 1D       		.uleb128 0x1d
 2938 0241 01       		.byte	0x1
 2939 0242 31       		.uleb128 0x31
 2940 0243 13       		.uleb128 0x13
 2941 0244 11       		.uleb128 0x11
 2942 0245 01       		.uleb128 0x1
 2943 0246 12       		.uleb128 0x12
 2944 0247 06       		.uleb128 0x6
 2945 0248 58       		.uleb128 0x58
 2946 0249 0B       		.uleb128 0xb
 2947 024a 59       		.uleb128 0x59
 2948 024b 0B       		.uleb128 0xb
 2949 024c 00       		.byte	0
 2950 024d 00       		.byte	0
 2951 024e 33       		.uleb128 0x33
 2952 024f 34       		.uleb128 0x34
 2953 0250 00       		.byte	0
 2954 0251 03       		.uleb128 0x3
 2955 0252 0E       		.uleb128 0xe
 2956 0253 3A       		.uleb128 0x3a
 2957 0254 0B       		.uleb128 0xb
 2958 0255 3B       		.uleb128 0x3b
 2959 0256 0B       		.uleb128 0xb
 2960 0257 49       		.uleb128 0x49
 2961 0258 13       		.uleb128 0x13
 2962 0259 3F       		.uleb128 0x3f
 2963 025a 19       		.uleb128 0x19
 2964 025b 3C       		.uleb128 0x3c
 2965 025c 19       		.uleb128 0x19
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 74


 2966 025d 00       		.byte	0
 2967 025e 00       		.byte	0
 2968 025f 34       		.uleb128 0x34
 2969 0260 34       		.uleb128 0x34
 2970 0261 00       		.byte	0
 2971 0262 03       		.uleb128 0x3
 2972 0263 0E       		.uleb128 0xe
 2973 0264 3A       		.uleb128 0x3a
 2974 0265 0B       		.uleb128 0xb
 2975 0266 3B       		.uleb128 0x3b
 2976 0267 05       		.uleb128 0x5
 2977 0268 49       		.uleb128 0x49
 2978 0269 13       		.uleb128 0x13
 2979 026a 3F       		.uleb128 0x3f
 2980 026b 19       		.uleb128 0x19
 2981 026c 3C       		.uleb128 0x3c
 2982 026d 19       		.uleb128 0x19
 2983 026e 00       		.byte	0
 2984 026f 00       		.byte	0
 2985 0270 35       		.uleb128 0x35
 2986 0271 35       		.uleb128 0x35
 2987 0272 00       		.byte	0
 2988 0273 49       		.uleb128 0x49
 2989 0274 13       		.uleb128 0x13
 2990 0275 00       		.byte	0
 2991 0276 00       		.byte	0
 2992 0277 36       		.uleb128 0x36
 2993 0278 2E       		.uleb128 0x2e
 2994 0279 00       		.byte	0
 2995 027a 3F       		.uleb128 0x3f
 2996 027b 19       		.uleb128 0x19
 2997 027c 3C       		.uleb128 0x3c
 2998 027d 19       		.uleb128 0x19
 2999 027e 6E       		.uleb128 0x6e
 3000 027f 0E       		.uleb128 0xe
 3001 0280 03       		.uleb128 0x3
 3002 0281 0E       		.uleb128 0xe
 3003 0282 3A       		.uleb128 0x3a
 3004 0283 0B       		.uleb128 0xb
 3005 0284 3B       		.uleb128 0x3b
 3006 0285 05       		.uleb128 0x5
 3007 0286 00       		.byte	0
 3008 0287 00       		.byte	0
 3009 0288 37       		.uleb128 0x37
 3010 0289 2E       		.uleb128 0x2e
 3011 028a 00       		.byte	0
 3012 028b 3F       		.uleb128 0x3f
 3013 028c 19       		.uleb128 0x19
 3014 028d 3C       		.uleb128 0x3c
 3015 028e 19       		.uleb128 0x19
 3016 028f 6E       		.uleb128 0x6e
 3017 0290 0E       		.uleb128 0xe
 3018 0291 03       		.uleb128 0x3
 3019 0292 0E       		.uleb128 0xe
 3020 0293 00       		.byte	0
 3021 0294 00       		.byte	0
 3022 0295 38       		.uleb128 0x38
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 75


 3023 0296 2E       		.uleb128 0x2e
 3024 0297 00       		.byte	0
 3025 0298 3F       		.uleb128 0x3f
 3026 0299 19       		.uleb128 0x19
 3027 029a 3C       		.uleb128 0x3c
 3028 029b 19       		.uleb128 0x19
 3029 029c 6E       		.uleb128 0x6e
 3030 029d 0E       		.uleb128 0xe
 3031 029e 03       		.uleb128 0x3
 3032 029f 0E       		.uleb128 0xe
 3033 02a0 3A       		.uleb128 0x3a
 3034 02a1 0B       		.uleb128 0xb
 3035 02a2 3B       		.uleb128 0x3b
 3036 02a3 0B       		.uleb128 0xb
 3037 02a4 00       		.byte	0
 3038 02a5 00       		.byte	0
 3039 02a6 00       		.byte	0
 3040              		.section	.debug_loc,"",%progbits
 3041              	.Ldebug_loc0:
 3042              	.LLST0:
 3043 0000 00000000 		.4byte	.LVL0
 3044 0004 14000000 		.4byte	.LVL2
 3045 0008 0100     		.2byte	0x1
 3046 000a 50       		.byte	0x50
 3047 000b 14000000 		.4byte	.LVL2
 3048 000f A4000000 		.4byte	.LFE144
 3049 0013 0400     		.2byte	0x4
 3050 0015 F3       		.byte	0xf3
 3051 0016 01       		.uleb128 0x1
 3052 0017 50       		.byte	0x50
 3053 0018 9F       		.byte	0x9f
 3054 0019 00000000 		.4byte	0
 3055 001d 00000000 		.4byte	0
 3056              	.LLST1:
 3057 0021 04000000 		.4byte	.LVL1
 3058 0025 1E000000 		.4byte	.LVL4
 3059 0029 0200     		.2byte	0x2
 3060 002b 30       		.byte	0x30
 3061 002c 9F       		.byte	0x9f
 3062 002d 1E000000 		.4byte	.LVL4
 3063 0031 2A000000 		.4byte	.LVL6
 3064 0035 0100     		.2byte	0x1
 3065 0037 50       		.byte	0x50
 3066 0038 6E000000 		.4byte	.LVL15
 3067 003c 82000000 		.4byte	.LVL18
 3068 0040 0100     		.2byte	0x1
 3069 0042 50       		.byte	0x50
 3070 0043 90000000 		.4byte	.LVL21
 3071 0047 92000000 		.4byte	.LVL22
 3072 004b 0100     		.2byte	0x1
 3073 004d 50       		.byte	0x50
 3074 004e 00000000 		.4byte	0
 3075 0052 00000000 		.4byte	0
 3076              	.LLST2:
 3077 0056 2E000000 		.4byte	.LVL7
 3078 005a 6E000000 		.4byte	.LVL15
 3079 005e 0200     		.2byte	0x2
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 76


 3080 0060 30       		.byte	0x30
 3081 0061 9F       		.byte	0x9f
 3082 0062 00000000 		.4byte	0
 3083 0066 00000000 		.4byte	0
 3084              	.LLST3:
 3085 006a 2E000000 		.4byte	.LVL7
 3086 006e 52000000 		.4byte	.LVL10
 3087 0072 0200     		.2byte	0x2
 3088 0074 30       		.byte	0x30
 3089 0075 9F       		.byte	0x9f
 3090 0076 52000000 		.4byte	.LVL10
 3091 007a 60000000 		.4byte	.LVL13
 3092 007e 0100     		.2byte	0x1
 3093 0080 54       		.byte	0x54
 3094 0081 60000000 		.4byte	.LVL13
 3095 0085 62000000 		.4byte	.LVL14
 3096 0089 0200     		.2byte	0x2
 3097 008b 30       		.byte	0x30
 3098 008c 9F       		.byte	0x9f
 3099 008d 62000000 		.4byte	.LVL14
 3100 0091 6E000000 		.4byte	.LVL15
 3101 0095 0100     		.2byte	0x1
 3102 0097 54       		.byte	0x54
 3103 0098 00000000 		.4byte	0
 3104 009c 00000000 		.4byte	0
 3105              	.LLST4:
 3106 00a0 4A000000 		.4byte	.LVL9
 3107 00a4 6E000000 		.4byte	.LVL15
 3108 00a8 0100     		.2byte	0x1
 3109 00aa 55       		.byte	0x55
 3110 00ab 00000000 		.4byte	0
 3111 00af 00000000 		.4byte	0
 3112              	.LLST5:
 3113 00b3 52000000 		.4byte	.LVL10
 3114 00b7 5B000000 		.4byte	.LVL11-1
 3115 00bb 0700     		.2byte	0x7
 3116 00bd 74       		.byte	0x74
 3117 00be 00       		.sleb128 0
 3118 00bf 32       		.byte	0x32
 3119 00c0 24       		.byte	0x24
 3120 00c1 75       		.byte	0x75
 3121 00c2 00       		.sleb128 0
 3122 00c3 22       		.byte	0x22
 3123 00c4 00000000 		.4byte	0
 3124 00c8 00000000 		.4byte	0
 3125              	.LLST6:
 3126 00cc 6E000000 		.4byte	.LVL15
 3127 00d0 9C000000 		.4byte	.LVL23
 3128 00d4 0200     		.2byte	0x2
 3129 00d6 33       		.byte	0x33
 3130 00d7 9F       		.byte	0x9f
 3131 00d8 00000000 		.4byte	0
 3132 00dc 00000000 		.4byte	0
 3133              	.LLST7:
 3134 00e0 76000000 		.4byte	.LVL16
 3135 00e4 82000000 		.4byte	.LVL18
 3136 00e8 0200     		.2byte	0x2
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 77


 3137 00ea 30       		.byte	0x30
 3138 00eb 9F       		.byte	0x9f
 3139 00ec 82000000 		.4byte	.LVL18
 3140 00f0 90000000 		.4byte	.LVL21
 3141 00f4 0100     		.2byte	0x1
 3142 00f6 54       		.byte	0x54
 3143 00f7 90000000 		.4byte	.LVL21
 3144 00fb 92000000 		.4byte	.LVL22
 3145 00ff 0200     		.2byte	0x2
 3146 0101 30       		.byte	0x30
 3147 0102 9F       		.byte	0x9f
 3148 0103 92000000 		.4byte	.LVL22
 3149 0107 9C000000 		.4byte	.LVL23
 3150 010b 0100     		.2byte	0x1
 3151 010d 54       		.byte	0x54
 3152 010e 00000000 		.4byte	0
 3153 0112 00000000 		.4byte	0
 3154              	.LLST8:
 3155 0116 7A000000 		.4byte	.LVL17
 3156 011a 9C000000 		.4byte	.LVL23
 3157 011e 0100     		.2byte	0x1
 3158 0120 55       		.byte	0x55
 3159 0121 00000000 		.4byte	0
 3160 0125 00000000 		.4byte	0
 3161              	.LLST9:
 3162 0129 82000000 		.4byte	.LVL18
 3163 012d 8B000000 		.4byte	.LVL19-1
 3164 0131 0700     		.2byte	0x7
 3165 0133 74       		.byte	0x74
 3166 0134 00       		.sleb128 0
 3167 0135 32       		.byte	0x32
 3168 0136 24       		.byte	0x24
 3169 0137 75       		.byte	0x75
 3170 0138 00       		.sleb128 0
 3171 0139 22       		.byte	0x22
 3172 013a 00000000 		.4byte	0
 3173 013e 00000000 		.4byte	0
 3174              	.LLST10:
 3175 0142 00000000 		.4byte	.LVL24
 3176 0146 0A000000 		.4byte	.LVL26
 3177 014a 0100     		.2byte	0x1
 3178 014c 50       		.byte	0x50
 3179 014d 0A000000 		.4byte	.LVL26
 3180 0151 4C000000 		.4byte	.LFE145
 3181 0155 0400     		.2byte	0x4
 3182 0157 F3       		.byte	0xf3
 3183 0158 01       		.uleb128 0x1
 3184 0159 50       		.byte	0x50
 3185 015a 9F       		.byte	0x9f
 3186 015b 00000000 		.4byte	0
 3187 015f 00000000 		.4byte	0
 3188              	.LLST11:
 3189 0163 00000000 		.4byte	.LVL33
 3190 0167 0C000000 		.4byte	.LVL35
 3191 016b 0100     		.2byte	0x1
 3192 016d 50       		.byte	0x50
 3193 016e 0C000000 		.4byte	.LVL35
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 78


 3194 0172 98000000 		.4byte	.LFE146
 3195 0176 0400     		.2byte	0x4
 3196 0178 F3       		.byte	0xf3
 3197 0179 01       		.uleb128 0x1
 3198 017a 50       		.byte	0x50
 3199 017b 9F       		.byte	0x9f
 3200 017c 00000000 		.4byte	0
 3201 0180 00000000 		.4byte	0
 3202              	.LLST12:
 3203 0184 3A000000 		.4byte	.LVL38
 3204 0188 60000000 		.4byte	.LVL40
 3205 018c 0200     		.2byte	0x2
 3206 018e 30       		.byte	0x30
 3207 018f 9F       		.byte	0x9f
 3208 0190 60000000 		.4byte	.LVL40
 3209 0194 6E000000 		.4byte	.LVL43
 3210 0198 0100     		.2byte	0x1
 3211 019a 54       		.byte	0x54
 3212 019b 6E000000 		.4byte	.LVL43
 3213 019f 70000000 		.4byte	.LVL44
 3214 01a3 0200     		.2byte	0x2
 3215 01a5 30       		.byte	0x30
 3216 01a6 9F       		.byte	0x9f
 3217 01a7 70000000 		.4byte	.LVL44
 3218 01ab 7A000000 		.4byte	.LVL45
 3219 01af 0100     		.2byte	0x1
 3220 01b1 54       		.byte	0x54
 3221 01b2 00000000 		.4byte	0
 3222 01b6 00000000 		.4byte	0
 3223              	.LLST13:
 3224 01ba 58000000 		.4byte	.LVL39
 3225 01be 7A000000 		.4byte	.LVL45
 3226 01c2 0100     		.2byte	0x1
 3227 01c4 55       		.byte	0x55
 3228 01c5 00000000 		.4byte	0
 3229 01c9 00000000 		.4byte	0
 3230              	.LLST14:
 3231 01cd 60000000 		.4byte	.LVL40
 3232 01d1 69000000 		.4byte	.LVL41-1
 3233 01d5 0700     		.2byte	0x7
 3234 01d7 74       		.byte	0x74
 3235 01d8 00       		.sleb128 0
 3236 01d9 32       		.byte	0x32
 3237 01da 24       		.byte	0x24
 3238 01db 75       		.byte	0x75
 3239 01dc 00       		.sleb128 0
 3240 01dd 22       		.byte	0x22
 3241 01de 00000000 		.4byte	0
 3242 01e2 00000000 		.4byte	0
 3243              	.LLST15:
 3244 01e6 7A000000 		.4byte	.LVL45
 3245 01ea 8A000000 		.4byte	.LVL46
 3246 01ee 0300     		.2byte	0x3
 3247 01f0 09       		.byte	0x9
 3248 01f1 FF       		.byte	0xff
 3249 01f2 9F       		.byte	0x9f
 3250 01f3 00000000 		.4byte	0
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 79


 3251 01f7 00000000 		.4byte	0
 3252              		.section	.debug_aranges,"",%progbits
 3253 0000 2C000000 		.4byte	0x2c
 3254 0004 0200     		.2byte	0x2
 3255 0006 00000000 		.4byte	.Ldebug_info0
 3256 000a 04       		.byte	0x4
 3257 000b 00       		.byte	0
 3258 000c 0000     		.2byte	0
 3259 000e 0000     		.2byte	0
 3260 0010 00000000 		.4byte	.LFB144
 3261 0014 A4000000 		.4byte	.LFE144-.LFB144
 3262 0018 00000000 		.4byte	.LFB145
 3263 001c 4C000000 		.4byte	.LFE145-.LFB145
 3264 0020 00000000 		.4byte	.LFB146
 3265 0024 98000000 		.4byte	.LFE146-.LFB146
 3266 0028 00000000 		.4byte	0
 3267 002c 00000000 		.4byte	0
 3268              		.section	.debug_ranges,"",%progbits
 3269              	.Ldebug_ranges0:
 3270 0000 00000000 		.4byte	.LFB144
 3271 0004 A4000000 		.4byte	.LFE144
 3272 0008 00000000 		.4byte	.LFB145
 3273 000c 4C000000 		.4byte	.LFE145
 3274 0010 00000000 		.4byte	.LFB146
 3275 0014 98000000 		.4byte	.LFE146
 3276 0018 00000000 		.4byte	0
 3277 001c 00000000 		.4byte	0
 3278              		.section	.debug_line,"",%progbits
 3279              	.Ldebug_line0:
 3280 0000 50040000 		.section	.debug_str,"MS",%progbits,1
 3280      0200B903 
 3280      00000201 
 3280      FB0E0D00 
 3280      01010101 
 3281              	.LASF102:
 3282 0000 434C4F43 		.ascii	"CLOCK_Active_Widget_t\000"
 3282      4B5F4163 
 3282      74697665 
 3282      5F576964 
 3282      6765745F 
 3283              	.LASF86:
 3284 0016 45565F4B 		.ascii	"EV_KEYLEFT\000"
 3284      45594C45 
 3284      465400
 3285              	.LASF2:
 3286 0021 73686F72 		.ascii	"short int\000"
 3286      7420696E 
 3286      7400
 3287              	.LASF132:
 3288 002b 434C4F43 		.ascii	"CLOCK_Widget_t\000"
 3288      4B5F5769 
 3288      64676574 
 3288      5F7400
 3289              	.LASF176:
 3290 003a 53435F44 		.ascii	"SC_DISPLAY_s\000"
 3290      4953504C 
 3290      41595F73 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 80


 3290      00
 3291              	.LASF177:
 3292 0047 53435F44 		.ascii	"SC_DISPLAY_t\000"
 3292      4953504C 
 3292      41595F74 
 3292      00
 3293              	.LASF156:
 3294 0054 7265736F 		.ascii	"resource\000"
 3294      75726365 
 3294      00
 3295              	.LASF162:
 3296 005d 686F7572 		.ascii	"hour\000"
 3296      00
 3297              	.LASF52:
 3298 0062 52435F45 		.ascii	"RC_ERROR_INVALID_STATE\000"
 3298      52524F52 
 3298      5F494E56 
 3298      414C4944 
 3298      5F535441 
 3299              	.LASF70:
 3300 0079 4D414745 		.ascii	"MAGENTA\000"
 3300      4E544100 
 3301              	.LASF18:
 3302 0081 73697A65 		.ascii	"size_t\000"
 3302      5F7400
 3303              	.LASF180:
 3304 0088 70546173 		.ascii	"pTaskArray\000"
 3304      6B417272 
 3304      617900
 3305              	.LASF68:
 3306 0093 47524544 		.ascii	"GRED\000"
 3306      00
 3307              	.LASF58:
 3308 0098 5265736F 		.ascii	"ResourceType\000"
 3308      75726365 
 3308      54797065 
 3308      00
 3309              	.LASF64:
 3310 00a5 57484954 		.ascii	"WHITE\000"
 3310      4500
 3311              	.LASF4:
 3312 00ab 5F5F7569 		.ascii	"__uint8_t\000"
 3312      6E74385F 
 3312      7400
 3313              	.LASF171:
 3314 00b5 53435F44 		.ascii	"SC_DISPLAY_data_t\000"
 3314      4953504C 
 3314      41595F64 
 3314      6174615F 
 3314      7400
 3315              	.LASF55:
 3316 00c7 52435F74 		.ascii	"RC_t\000"
 3316      00
 3317              	.LASF44:
 3318 00cc 52435F45 		.ascii	"RC_ERROR_WRITE_ONLY\000"
 3318      52524F52 
 3318      5F575249 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 81


 3318      54455F4F 
 3318      4E4C5900 
 3319              	.LASF118:
 3320 00e0 746F5374 		.ascii	"toState\000"
 3320      61746500 
 3321              	.LASF127:
 3322 00e8 6D5F7769 		.ascii	"m_widgetState\000"
 3322      64676574 
 3322      53746174 
 3322      6500
 3323              	.LASF128:
 3324 00f6 6D5F7472 		.ascii	"m_transitions\000"
 3324      616E7369 
 3324      74696F6E 
 3324      7300
 3325              	.LASF204:
 3326 0104 45455F6F 		.ascii	"EE_oo_SetEvent\000"
 3326      6F5F5365 
 3326      74457665 
 3326      6E7400
 3327              	.LASF50:
 3328 0113 52435F45 		.ascii	"RC_ERROR_BAD_DATA\000"
 3328      52524F52 
 3328      5F424144 
 3328      5F444154 
 3328      4100
 3329              	.LASF40:
 3330 0125 52435F45 		.ascii	"RC_ERROR_TIME_OUT\000"
 3330      52524F52 
 3330      5F54494D 
 3330      455F4F55 
 3330      5400
 3331              	.LASF92:
 3332 0137 434C4F43 		.ascii	"CLOCK_C_ISDISPLAYING\000"
 3332      4B5F435F 
 3332      49534449 
 3332      53504C41 
 3332      59494E47 
 3333              	.LASF99:
 3334 014c 434C4F43 		.ascii	"CLOCK_HOURWIDGET\000"
 3334      4B5F484F 
 3334      55525749 
 3334      44474554 
 3334      00
 3335              	.LASF200:
 3336 015d 49544D5F 		.ascii	"ITM_RxBuffer\000"
 3336      52784275 
 3336      66666572 
 3336      00
 3337              	.LASF189:
 3338 016a 434C4F43 		.ascii	"CLOCK_input_run\000"
 3338      4B5F696E 
 3338      7075745F 
 3338      72756E00 
 3339              	.LASF84:
 3340 017a 5446545F 		.ascii	"TFT_colors_t\000"
 3340      636F6C6F 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 82


 3340      72735F74 
 3340      00
 3341              	.LASF60:
 3342 0187 5254455F 		.ascii	"RTE_SIGNALSTATUS_INITIALIZED\000"
 3342      5349474E 
 3342      414C5354 
 3342      41545553 
 3342      5F494E49 
 3343              	.LASF138:
 3344 01a4 4B65794C 		.ascii	"KeyLeft_Button_3_Status\000"
 3344      6566745F 
 3344      42757474 
 3344      6F6E5F33 
 3344      5F537461 
 3345              	.LASF190:
 3346 01bc 434C4F43 		.ascii	"CLOCK_control_run\000"
 3346      4B5F636F 
 3346      6E74726F 
 3346      6C5F7275 
 3346      6E00
 3347              	.LASF9:
 3348 01ce 6C6F6E67 		.ascii	"long long int\000"
 3348      206C6F6E 
 3348      6720696E 
 3348      7400
 3349              	.LASF0:
 3350 01dc 7369676E 		.ascii	"signed char\000"
 3350      65642063 
 3350      68617200 
 3351              	.LASF27:
 3352 01e8 4576656E 		.ascii	"EventMaskType\000"
 3352      744D6173 
 3352      6B547970 
 3352      6500
 3353              	.LASF186:
 3354 01f6 5254455F 		.ascii	"RTE_SC_DISPLAY_pushPort\000"
 3354      53435F44 
 3354      4953504C 
 3354      41595F70 
 3354      75736850 
 3355              	.LASF93:
 3356 020e 434C4F43 		.ascii	"CLOCK_C_ISEDITINGHOURS\000"
 3356      4B5F435F 
 3356      49534544 
 3356      4954494E 
 3356      47484F55 
 3357              	.LASF38:
 3358 0225 52435F45 		.ascii	"RC_ERROR_BUFFER_EMTPY\000"
 3358      52524F52 
 3358      5F425546 
 3358      4645525F 
 3358      454D5450 
 3359              	.LASF123:
 3360 023b 73746174 		.ascii	"state\000"
 3360      6500
 3361              	.LASF116:
 3362 0241 53544154 		.ascii	"STATE_GuardPtr_t\000"
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 83


 3362      455F4775 
 3362      61726450 
 3362      74725F74 
 3362      00
 3363              	.LASF6:
 3364 0252 6C6F6E67 		.ascii	"long int\000"
 3364      20696E74 
 3364      00
 3365              	.LASF59:
 3366 025b 5254455F 		.ascii	"RTE_SIGNALSTATUS_STARTUP\000"
 3366      5349474E 
 3366      414C5354 
 3366      41545553 
 3366      5F535441 
 3367              	.LASF74:
 3368 0274 42524F57 		.ascii	"BROWN\000"
 3368      4E00
 3369              	.LASF209:
 3370 027a 6D656D63 		.ascii	"memcpy\000"
 3370      707900
 3371              	.LASF125:
 3372 0281 61637469 		.ascii	"actionExit\000"
 3372      6F6E4578 
 3372      697400
 3373              	.LASF105:
 3374 028c 77696467 		.ascii	"widget_colour\000"
 3374      65745F63 
 3374      6F6C6F75 
 3374      7200
 3375              	.LASF73:
 3376 029a 59454C4C 		.ascii	"YELLOW\000"
 3376      4F5700
 3377              	.LASF41:
 3378 02a1 52435F45 		.ascii	"RC_ERROR_OPEN\000"
 3378      52524F52 
 3378      5F4F5045 
 3378      4E00
 3379              	.LASF89:
 3380 02af 45565F32 		.ascii	"EV_250MS\000"
 3380      35304D53 
 3380      00
 3381              	.LASF16:
 3382 02b8 646F7562 		.ascii	"double\000"
 3382      6C6500
 3383              	.LASF130:
 3384 02bf 6D5F7661 		.ascii	"m_value\000"
 3384      6C756500 
 3385              	.LASF107:
 3386 02c7 795F706F 		.ascii	"y_pos\000"
 3386      7300
 3387              	.LASF61:
 3388 02cd 5254455F 		.ascii	"RTE_SIGNALSTATUS_VALID\000"
 3388      5349474E 
 3388      414C5354 
 3388      41545553 
 3388      5F56414C 
 3389              	.LASF112:
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 84


 3390 02e4 434C4F43 		.ascii	"CLOCK_display_t\000"
 3390      4B5F6469 
 3390      73706C61 
 3390      795F7400 
 3391              	.LASF3:
 3392 02f4 73686F72 		.ascii	"short unsigned int\000"
 3392      7420756E 
 3392      7369676E 
 3392      65642069 
 3392      6E7400
 3393              	.LASF151:
 3394 0307 6F6E5570 		.ascii	"onUpdateTaskCount\000"
 3394      64617465 
 3394      5461736B 
 3394      436F756E 
 3394      7400
 3395              	.LASF198:
 3396 0319 45455F73 		.ascii	"EE_std_endcycle_next_tid\000"
 3396      74645F65 
 3396      6E646379 
 3396      636C655F 
 3396      6E657874 
 3397              	.LASF173:
 3398 0332 53435F44 		.ascii	"SC_DISPLAY_driverOut_t\000"
 3398      4953504C 
 3398      41595F64 
 3398      72697665 
 3398      724F7574 
 3399              	.LASF7:
 3400 0349 5F5F7569 		.ascii	"__uint32_t\000"
 3400      6E743332 
 3400      5F7400
 3401              	.LASF87:
 3402 0354 45565F4B 		.ascii	"EV_KEYRIGHT\000"
 3402      45595249 
 3402      47485400 
 3403              	.LASF75:
 3404 0360 42525245 		.ascii	"BRRED\000"
 3404      4400
 3405              	.LASF81:
 3406 0366 4C475241 		.ascii	"LGRAY\000"
 3406      5900
 3407              	.LASF114:
 3408 036c 53544154 		.ascii	"STATE_state_t\000"
 3408      455F7374 
 3408      6174655F 
 3408      7400
 3409              	.LASF106:
 3410 037a 785F706F 		.ascii	"x_pos\000"
 3410      7300
 3411              	.LASF25:
 3412 0380 45455F54 		.ascii	"EE_TID\000"
 3412      494400
 3413              	.LASF111:
 3414 0387 76616C75 		.ascii	"value\000"
 3414      6500
 3415              	.LASF208:
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 85


 3416 038d 433A5C55 		.ascii	"C:\\Users\\giris\\OneDrive\\Documents\\PSoC Creator"
 3416      73657273 
 3416      5C676972 
 3416      69735C4F 
 3416      6E654472 
 3417 03bb 5C454141 		.ascii	"\\EAA\\Assignment2.cydsn\000"
 3417      5C417373 
 3417      69676E6D 
 3417      656E7432 
 3417      2E637964 
 3418              	.LASF11:
 3419 03d2 756E7369 		.ascii	"unsigned int\000"
 3419      676E6564 
 3419      20696E74 
 3419      00
 3420              	.LASF90:
 3421 03df 45565F31 		.ascii	"EV_1MIN\000"
 3421      4D494E00 
 3422              	.LASF187:
 3423 03e7 5254455F 		.ascii	"RTE_SC_DISPLAY_set\000"
 3423      53435F44 
 3423      4953504C 
 3423      41595F73 
 3423      657400
 3424              	.LASF53:
 3425 03fa 52435F45 		.ascii	"RC_ERROR_UNKNOWN\000"
 3425      52524F52 
 3425      5F554E4B 
 3425      4E4F574E 
 3425      00
 3426              	.LASF23:
 3427 040b 45455F55 		.ascii	"EE_UREG\000"
 3427      52454700 
 3428              	.LASF148:
 3429 0413 6F757444 		.ascii	"outDriver\000"
 3429      72697665 
 3429      7200
 3430              	.LASF42:
 3431 041d 52435F45 		.ascii	"RC_ERROR_CHECKSUM\000"
 3431      52524F52 
 3431      5F434845 
 3431      434B5355 
 3431      4D00
 3432              	.LASF8:
 3433 042f 6C6F6E67 		.ascii	"long unsigned int\000"
 3433      20756E73 
 3433      69676E65 
 3433      6420696E 
 3433      7400
 3434              	.LASF31:
 3435 0441 52435F45 		.ascii	"RC_ERROR_NULL\000"
 3435      52524F52 
 3435      5F4E554C 
 3435      4C00
 3436              	.LASF57:
 3437 044f 5254455F 		.ascii	"RTE_event\000"
 3437      6576656E 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 86


 3437      7400
 3438              	.LASF29:
 3439 0459 52435F53 		.ascii	"RC_SUCCESS\000"
 3439      55434345 
 3439      535300
 3440              	.LASF97:
 3441 0464 434C4F43 		.ascii	"CLOCK_W_ISAUTOINCREMENT\000"
 3441      4B5F575F 
 3441      49534155 
 3441      544F494E 
 3441      4352454D 
 3442              	.LASF143:
 3443 047c 53435F49 		.ascii	"SC_INPUT_driverIn_t\000"
 3443      4E505554 
 3443      5F647269 
 3443      76657249 
 3443      6E5F7400 
 3444              	.LASF69:
 3445 0490 47424C55 		.ascii	"GBLUE\000"
 3445      4500
 3446              	.LASF10:
 3447 0496 6C6F6E67 		.ascii	"long long unsigned int\000"
 3447      206C6F6E 
 3447      6720756E 
 3447      7369676E 
 3447      65642069 
 3448              	.LASF117:
 3449 04ad 6576656E 		.ascii	"event\000"
 3449      7400
 3450              	.LASF103:
 3451 04b3 73697A65 		.ascii	"size\000"
 3451      00
 3452              	.LASF26:
 3453 04b8 5461736B 		.ascii	"TaskType\000"
 3453      54797065 
 3453      00
 3454              	.LASF195:
 3455 04c1 45455F6F 		.ascii	"EE_oo_IRQ_disable_count\000"
 3455      6F5F4952 
 3455      515F6469 
 3455      7361626C 
 3455      655F636F 
 3456              	.LASF37:
 3457 04d9 52435F45 		.ascii	"RC_ERROR_BUFFER_FULL\000"
 3457      52524F52 
 3457      5F425546 
 3457      4645525F 
 3457      46554C4C 
 3458              	.LASF201:
 3459 04ee 534F5F49 		.ascii	"SO_INPUTEVENT_signal\000"
 3459      4E505554 
 3459      4556454E 
 3459      545F7369 
 3459      676E616C 
 3460              	.LASF124:
 3461 0503 61637469 		.ascii	"actionEntry\000"
 3461      6F6E456E 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 87


 3461      74727900 
 3462              	.LASF101:
 3463 050f 4E4F4E45 		.ascii	"NONE\000"
 3463      00
 3464              	.LASF82:
 3465 0514 4C475241 		.ascii	"LGRAYBLUE\000"
 3465      59424C55 
 3465      4500
 3466              	.LASF47:
 3467 051e 52435F45 		.ascii	"RC_ERROR_WRITE_FAILS\000"
 3467      52524F52 
 3467      5F575249 
 3467      54455F46 
 3467      41494C53 
 3468              	.LASF113:
 3469 0533 53544154 		.ascii	"STATE_event_t\000"
 3469      455F6576 
 3469      656E745F 
 3469      7400
 3470              	.LASF207:
 3471 0541 736F7572 		.ascii	"source\\asw\\swc_clock.c\000"
 3471      63655C61 
 3471      73775C73 
 3471      77635F63 
 3471      6C6F636B 
 3472              	.LASF49:
 3473 0558 52435F45 		.ascii	"RC_ERROR_BAD_PARAM\000"
 3473      52524F52 
 3473      5F424144 
 3473      5F504152 
 3473      414D00
 3474              	.LASF48:
 3475 056b 52435F45 		.ascii	"RC_ERROR_NOT_MATCH\000"
 3475      52524F52 
 3475      5F4E4F54 
 3475      5F4D4154 
 3475      434800
 3476              	.LASF5:
 3477 057e 5F5F696E 		.ascii	"__int32_t\000"
 3477      7433325F 
 3477      7400
 3478              	.LASF78:
 3479 0588 4C494748 		.ascii	"LIGHTBLUE\000"
 3479      54424C55 
 3479      4500
 3480              	.LASF100:
 3481 0592 434C4F43 		.ascii	"CLOCK_MINWIDGET\000"
 3481      4B5F4D49 
 3481      4E574944 
 3481      47455400 
 3482              	.LASF126:
 3483 05a2 53544154 		.ascii	"STATE_stateAction_t\000"
 3483      455F7374 
 3483      61746541 
 3483      6374696F 
 3483      6E5F7400 
 3484              	.LASF174:
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 88


 3485 05b6 53435F44 		.ascii	"SC_DISPLAY_cfg_s\000"
 3485      4953504C 
 3485      41595F63 
 3485      66675F73 
 3485      00
 3486              	.LASF175:
 3487 05c7 53435F44 		.ascii	"SC_DISPLAY_cfg_t\000"
 3487      4953504C 
 3487      41595F63 
 3487      66675F74 
 3487      00
 3488              	.LASF98:
 3489 05d8 436C6F63 		.ascii	"Clock_State_Enum_t\000"
 3489      6B5F5374 
 3489      6174655F 
 3489      456E756D 
 3489      5F7400
 3490              	.LASF91:
 3491 05eb 4556454E 		.ascii	"EVENT_t\000"
 3491      545F7400 
 3492              	.LASF20:
 3493 05f3 73697A65 		.ascii	"sizetype\000"
 3493      74797065 
 3493      00
 3494              	.LASF62:
 3495 05fc 5254455F 		.ascii	"RTE_SIGNALSTATUS_INVALID\000"
 3495      5349474E 
 3495      414C5354 
 3495      41545553 
 3495      5F494E56 
 3496              	.LASF149:
 3497 0615 65764F6E 		.ascii	"evOnUpdate\000"
 3497      55706461 
 3497      746500
 3498              	.LASF19:
 3499 0620 6C6F6E67 		.ascii	"long double\000"
 3499      20646F75 
 3499      626C6500 
 3500              	.LASF83:
 3501 062c 4C42424C 		.ascii	"LBBLUE\000"
 3501      554500
 3502              	.LASF28:
 3503 0633 626F6F6C 		.ascii	"boolean_t\000"
 3503      65616E5F 
 3503      7400
 3504              	.LASF121:
 3505 063d 53544154 		.ascii	"STATE_stateInnerTransition_t\000"
 3505      455F7374 
 3505      61746549 
 3505      6E6E6572 
 3505      5472616E 
 3506              	.LASF196:
 3507 065a 45455F6F 		.ascii	"EE_oo_IRQ_suspend_status\000"
 3507      6F5F4952 
 3507      515F7375 
 3507      7370656E 
 3507      645F7374 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 89


 3508              	.LASF45:
 3509 0673 52435F45 		.ascii	"RC_ERROR_INVALID\000"
 3509      52524F52 
 3509      5F494E56 
 3509      414C4944 
 3509      00
 3510              	.LASF110:
 3511 0684 666F6E74 		.ascii	"font_type\000"
 3511      5F747970 
 3511      6500
 3512              	.LASF197:
 3513 068e 45455F41 		.ascii	"EE_ApplicationMode\000"
 3513      70706C69 
 3513      63617469 
 3513      6F6E4D6F 
 3513      646500
 3514              	.LASF51:
 3515 06a1 52435F45 		.ascii	"RC_ERROR_CANCELED\000"
 3515      52524F52 
 3515      5F43414E 
 3515      43454C45 
 3515      4400
 3516              	.LASF76:
 3517 06b3 47524159 		.ascii	"GRAY\000"
 3517      00
 3518              	.LASF36:
 3519 06b8 52435F45 		.ascii	"RC_ERROR_UNDERRUN\000"
 3519      52524F52 
 3519      5F554E44 
 3519      45525255 
 3519      4E00
 3520              	.LASF46:
 3521 06ca 52435F45 		.ascii	"RC_ERROR_READ_FAILS\000"
 3521      52524F52 
 3521      5F524541 
 3521      445F4641 
 3521      494C5300 
 3522              	.LASF167:
 3523 06de 53435F43 		.ascii	"SC_CONTROL_cfg_s\000"
 3523      4F4E5452 
 3523      4F4C5F63 
 3523      66675F73 
 3523      00
 3524              	.LASF168:
 3525 06ef 53435F43 		.ascii	"SC_CONTROL_cfg_t\000"
 3525      4F4E5452 
 3525      4F4C5F63 
 3525      66675F74 
 3525      00
 3526              	.LASF166:
 3527 0700 53435F43 		.ascii	"SC_CONTROL_driverOut_t\000"
 3527      4F4E5452 
 3527      4F4C5F64 
 3527      72697665 
 3527      724F7574 
 3528              	.LASF205:
 3529 0717 50726F63 		.ascii	"ProcessEvent\000"
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 90


 3529      65737345 
 3529      76656E74 
 3529      00
 3530              	.LASF77:
 3531 0724 4441524B 		.ascii	"DARKBLUE\000"
 3531      424C5545 
 3531      00
 3532              	.LASF158:
 3533 072d 53435F49 		.ascii	"SC_INPUT_s\000"
 3533      4E505554 
 3533      5F7300
 3534              	.LASF161:
 3535 0738 53435F49 		.ascii	"SC_INPUT_t\000"
 3535      4E505554 
 3535      5F7400
 3536              	.LASF30:
 3537 0743 52435F45 		.ascii	"RC_ERROR\000"
 3537      52524F52 
 3537      00
 3538              	.LASF67:
 3539 074c 42524544 		.ascii	"BRED\000"
 3539      00
 3540              	.LASF141:
 3541 0751 6D5F636C 		.ascii	"m_clock_data\000"
 3541      6F636B5F 
 3541      64617461 
 3541      00
 3542              	.LASF202:
 3543 075e 534F5F43 		.ascii	"SO_CONTROL_signal\000"
 3543      4F4E5452 
 3543      4F4C5F73 
 3543      69676E61 
 3543      6C00
 3544              	.LASF184:
 3545 0770 5254455F 		.ascii	"RTE_SC_INPUT_pullPort\000"
 3545      53435F49 
 3545      4E505554 
 3545      5F70756C 
 3545      6C506F72 
 3546              	.LASF203:
 3547 0786 534F5F44 		.ascii	"SO_DISPLAYONTFT_signal\000"
 3547      4953504C 
 3547      41594F4E 
 3547      5446545F 
 3547      7369676E 
 3548              	.LASF164:
 3549 079d 53435F43 		.ascii	"SC_CONTROL_data_t\000"
 3549      4F4E5452 
 3549      4F4C5F64 
 3549      6174615F 
 3549      7400
 3550              	.LASF39:
 3551 07af 52435F45 		.ascii	"RC_ERROR_BUSY\000"
 3551      52524F52 
 3551      5F425553 
 3551      5900
 3552              	.LASF139:
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 91


 3553 07bd 4B657952 		.ascii	"KeyRight_Button_4_Status\000"
 3553      69676874 
 3553      5F427574 
 3553      746F6E5F 
 3553      345F5374 
 3554              	.LASF153:
 3555 07d6 6F6E4572 		.ascii	"onErrorTaskCount\000"
 3555      726F7254 
 3555      61736B43 
 3555      6F756E74 
 3555      00
 3556              	.LASF129:
 3557 07e7 6D5F7374 		.ascii	"m_stateActions\000"
 3557      61746541 
 3557      6374696F 
 3557      6E7300
 3558              	.LASF13:
 3559 07f6 696E7433 		.ascii	"int32_t\000"
 3559      325F7400 
 3560              	.LASF1:
 3561 07fe 756E7369 		.ascii	"unsigned char\000"
 3561      676E6564 
 3561      20636861 
 3561      7200
 3562              	.LASF96:
 3563 080c 434C4F43 		.ascii	"CLOCK_W_ISEDITING\000"
 3563      4B5F575F 
 3563      49534544 
 3563      4954494E 
 3563      4700
 3564              	.LASF122:
 3565 081e 53544154 		.ascii	"STATE_stateInnerTransitionTable_t\000"
 3565      455F7374 
 3565      61746549 
 3565      6E6E6572 
 3565      5472616E 
 3566              	.LASF115:
 3567 0840 53544154 		.ascii	"STATE_ActionPtr_t\000"
 3567      455F4163 
 3567      74696F6E 
 3567      5074725F 
 3567      7400
 3568              	.LASF193:
 3569 0852 7466745F 		.ascii	"tft_config\000"
 3569      636F6E66 
 3569      696700
 3570              	.LASF147:
 3571 085d 696E4472 		.ascii	"inDriver\000"
 3571      69766572 
 3571      00
 3572              	.LASF32:
 3573 0866 52435F45 		.ascii	"RC_ERROR_ZERO\000"
 3573      52524F52 
 3573      5F5A4552 
 3573      4F00
 3574              	.LASF94:
 3575 0874 434C4F43 		.ascii	"CLOCK_C_ISEDITINGMINUTES\000"
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 92


 3575      4B5F435F 
 3575      49534544 
 3575      4954494E 
 3575      474D494E 
 3576              	.LASF137:
 3577 088d 434C4F43 		.ascii	"CLOCK_data_t\000"
 3577      4B5F6461 
 3577      74615F74 
 3577      00
 3578              	.LASF146:
 3579 089a 53435F49 		.ascii	"SC_INPUT_cfg_s\000"
 3579      4E505554 
 3579      5F636667 
 3579      5F7300
 3580              	.LASF157:
 3581 08a9 53435F49 		.ascii	"SC_INPUT_cfg_t\000"
 3581      4E505554 
 3581      5F636667 
 3581      5F7400
 3582              	.LASF152:
 3583 08b8 6F6E5570 		.ascii	"onUpdateTasks\000"
 3583      64617465 
 3583      5461736B 
 3583      7300
 3584              	.LASF191:
 3585 08c6 434C4F43 		.ascii	"CLOCK_display_run\000"
 3585      4B5F6469 
 3585      73706C61 
 3585      795F7275 
 3585      6E00
 3586              	.LASF142:
 3587 08d8 53435F49 		.ascii	"SC_INPUT_data_t\000"
 3587      4E505554 
 3587      5F646174 
 3587      615F7400 
 3588              	.LASF206:
 3589 08e8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3589      43313120 
 3589      352E342E 
 3589      31203230 
 3589      31363036 
 3590 091b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3590      20726576 
 3590      6973696F 
 3590      6E203233 
 3590      37373135 
 3591 094e 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 3591      66756E63 
 3591      74696F6E 
 3591      2D736563 
 3591      74696F6E 
 3592              	.LASF188:
 3593 0976 5254455F 		.ascii	"RTE_SC_CONTROL_get\000"
 3593      53435F43 
 3593      4F4E5452 
 3593      4F4C5F67 
 3593      657400
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 93


 3594              	.LASF150:
 3595 0989 65764F6E 		.ascii	"evOnError\000"
 3595      4572726F 
 3595      7200
 3596              	.LASF72:
 3597 0993 4359414E 		.ascii	"CYAN\000"
 3597      00
 3598              	.LASF160:
 3599 0998 70536967 		.ascii	"pSigCfg\000"
 3599      43666700 
 3600              	.LASF182:
 3601 09a0 5254455F 		.ascii	"RTE_SC_INPUT_set\000"
 3601      53435F49 
 3601      4E505554 
 3601      5F736574 
 3601      00
 3602              	.LASF14:
 3603 09b1 75696E74 		.ascii	"uint32_t\000"
 3603      33325F74 
 3603      00
 3604              	.LASF178:
 3605 09ba 7369676E 		.ascii	"signal\000"
 3605      616C00
 3606              	.LASF43:
 3607 09c1 52435F45 		.ascii	"RC_ERROR_READ_ONLY\000"
 3607      52524F52 
 3607      5F524541 
 3607      445F4F4E 
 3607      4C5900
 3608              	.LASF15:
 3609 09d4 666C6F61 		.ascii	"float\000"
 3609      7400
 3610              	.LASF145:
 3611 09da 65434C4F 		.ascii	"eCLOCK_display\000"
 3611      434B5F64 
 3611      6973706C 
 3611      617900
 3612              	.LASF17:
 3613 09e9 63686172 		.ascii	"char\000"
 3613      00
 3614              	.LASF65:
 3615 09ee 424C4143 		.ascii	"BLACK\000"
 3615      4B00
 3616              	.LASF131:
 3617 09f4 6D5F666F 		.ascii	"m_font\000"
 3617      6E7400
 3618              	.LASF155:
 3619 09fb 7265736F 		.ascii	"resourceActive\000"
 3619      75726365 
 3619      41637469 
 3619      766500
 3620              	.LASF66:
 3621 0a0a 424C5545 		.ascii	"BLUE\000"
 3621      00
 3622              	.LASF134:
 3623 0a0f 6D5F6163 		.ascii	"m_activeWidget\000"
 3623      74697665 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 94


 3623      57696467 
 3623      657400
 3624              	.LASF71:
 3625 0a1e 47524545 		.ascii	"GREEN\000"
 3625      4E00
 3626              	.LASF54:
 3627 0a24 52435F45 		.ascii	"RC_ERROR_NOT_IMPLEMENTED\000"
 3627      52524F52 
 3627      5F4E4F54 
 3627      5F494D50 
 3627      4C454D45 
 3628              	.LASF85:
 3629 0a3d 45565F4E 		.ascii	"EV_NONE\000"
 3629      4F4E4500 
 3630              	.LASF35:
 3631 0a45 52435F45 		.ascii	"RC_ERROR_OVERRUN\000"
 3631      52524F52 
 3631      5F4F5645 
 3631      5252554E 
 3631      00
 3632              	.LASF181:
 3633 0a56 7461736B 		.ascii	"task\000"
 3633      00
 3634              	.LASF80:
 3635 0a5b 4C494748 		.ascii	"LIGHTGREEN\000"
 3635      54475245 
 3635      454E00
 3636              	.LASF63:
 3637 0a66 5254455F 		.ascii	"RTE_signalStatus_t\000"
 3637      7369676E 
 3637      616C5374 
 3637      61747573 
 3637      5F7400
 3638              	.LASF140:
 3639 0a79 6D5F6576 		.ascii	"m_ev\000"
 3639      00
 3640              	.LASF33:
 3641 0a7e 52435F45 		.ascii	"RC_ERROR_MEMORY\000"
 3641      52524F52 
 3641      5F4D454D 
 3641      4F525900 
 3642              	.LASF144:
 3643 0a8e 53435F49 		.ascii	"SC_INPUT_driverOut_t\000"
 3643      4E505554 
 3643      5F647269 
 3643      7665724F 
 3643      75745F74 
 3644              	.LASF95:
 3645 0aa3 434C4F43 		.ascii	"CLOCK_W_ISDISPLAYING\000"
 3645      4B5F575F 
 3645      49534449 
 3645      53504C41 
 3645      59494E47 
 3646              	.LASF183:
 3647 0ab8 5254455F 		.ascii	"RTE_SC_INPUT_setStatus\000"
 3647      53435F49 
 3647      4E505554 
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 95


 3647      5F736574 
 3647      53746174 
 3648              	.LASF56:
 3649 0acf 5461736B 		.ascii	"TaskTypeArray\000"
 3649      54797065 
 3649      41727261 
 3649      7900
 3650              	.LASF120:
 3651 0add 61637469 		.ascii	"actionTransition\000"
 3651      6F6E5472 
 3651      616E7369 
 3651      74696F6E 
 3651      00
 3652              	.LASF179:
 3653 0aee 7461736B 		.ascii	"taskNum\000"
 3653      4E756D00 
 3654              	.LASF169:
 3655 0af6 53435F43 		.ascii	"SC_CONTROL_s\000"
 3655      4F4E5452 
 3655      4F4C5F73 
 3655      00
 3656              	.LASF170:
 3657 0b03 53435F43 		.ascii	"SC_CONTROL_t\000"
 3657      4F4E5452 
 3657      4F4C5F74 
 3657      00
 3658              	.LASF194:
 3659 0b10 636F6E74 		.ascii	"control_data\000"
 3659      726F6C5F 
 3659      64617461 
 3659      00
 3660              	.LASF163:
 3661 0b1d 6D696E75 		.ascii	"minute\000"
 3661      746500
 3662              	.LASF136:
 3663 0b24 6D5F6D69 		.ascii	"m_minutes\000"
 3663      6E757465 
 3663      7300
 3664              	.LASF165:
 3665 0b2e 53435F43 		.ascii	"SC_CONTROL_driverIn_t\000"
 3665      4F4E5452 
 3665      4F4C5F64 
 3665      72697665 
 3665      72496E5F 
 3666              	.LASF172:
 3667 0b44 53435F44 		.ascii	"SC_DISPLAY_driverIn_t\000"
 3667      4953504C 
 3667      41595F64 
 3667      72697665 
 3667      72496E5F 
 3668              	.LASF159:
 3669 0b5a 73746174 		.ascii	"status\000"
 3669      757300
 3670              	.LASF104:
 3671 0b61 62675F63 		.ascii	"bg_colour\000"
 3671      6F6C6F75 
 3671      7200
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 96


 3672              	.LASF199:
 3673 0b6b 45455F49 		.ascii	"EE_IRQ_nesting_level\000"
 3673      52515F6E 
 3673      65737469 
 3673      6E675F6C 
 3673      6576656C 
 3674              	.LASF22:
 3675 0b80 45455F55 		.ascii	"EE_UINT32\000"
 3675      494E5433 
 3675      3200
 3676              	.LASF34:
 3677 0b8a 52435F45 		.ascii	"RC_ERROR_RANGE\000"
 3677      52524F52 
 3677      5F52414E 
 3677      474500
 3678              	.LASF21:
 3679 0b99 45455F49 		.ascii	"EE_INT32\000"
 3679      4E543332 
 3679      00
 3680              	.LASF12:
 3681 0ba2 75696E74 		.ascii	"uint8_t\000"
 3681      385F7400 
 3682              	.LASF185:
 3683 0baa 5254455F 		.ascii	"RTE_SC_INPUT_get\000"
 3683      53435F49 
 3683      4E505554 
 3683      5F676574 
 3683      00
 3684              	.LASF135:
 3685 0bbb 6D5F686F 		.ascii	"m_hours\000"
 3685      75727300 
 3686              	.LASF133:
 3687 0bc3 6D5F636F 		.ascii	"m_containerState\000"
 3687      6E746169 
 3687      6E657253 
 3687      74617465 
 3687      00
 3688              	.LASF88:
 3689 0bd4 45565F4B 		.ascii	"EV_KEYRIGHTLONGPRESS\000"
 3689      45595249 
 3689      4748544C 
 3689      4F4E4750 
 3689      52455353 
 3690              	.LASF79:
 3691 0be9 47524159 		.ascii	"GRAYBLUE\000"
 3691      424C5545 
 3691      00
 3692              	.LASF108:
 3693 0bf2 434C4F43 		.ascii	"CLOCK_font_t\000"
 3693      4B5F666F 
 3693      6E745F74 
 3693      00
 3694              	.LASF119:
 3695 0bff 67756172 		.ascii	"guard\000"
 3695      6400
 3696              	.LASF154:
 3697 0c05 6F6E4572 		.ascii	"onErrorTasks\000"
ARM GAS  C:\Users\giris\AppData\Local\Temp\ccmboqqm.s 			page 97


 3697      726F7254 
 3697      61736B73 
 3697      00
 3698              	.LASF109:
 3699 0c12 77696467 		.ascii	"widget_type\000"
 3699      65745F74 
 3699      79706500 
 3700              	.LASF192:
 3701 0c1e 7278696E 		.ascii	"rxinput\000"
 3701      70757400 
 3702              	.LASF24:
 3703 0c26 45455F46 		.ascii	"EE_FREG\000"
 3703      52454700 
 3704              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
